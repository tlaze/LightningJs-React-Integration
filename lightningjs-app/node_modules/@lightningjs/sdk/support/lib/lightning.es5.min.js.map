{"version":3,"file":"lightning.es5.min.js","sources":["../src/tree/StageUtils.mjs","../src/tree/Utils.mjs","../src/tree/Base.mjs","../src/flex/layout/SpacingCalculator.mjs","../src/flex/layout/ContentAligner.mjs","../src/flex/FlexUtils.mjs","../src/flex/layout/line/SizeShrinker.mjs","../src/flex/layout/line/SizeGrower.mjs","../src/flex/layout/line/ItemPositioner.mjs","../src/flex/layout/line/ItemAligner.mjs","../src/flex/layout/line/LineLayout.mjs","../src/flex/layout/LineLayouter.mjs","../src/flex/layout/ItemCoordinatesUpdater.mjs","../src/flex/layout/FlexLayout.mjs","../src/flex/FlexContainer.mjs","../src/flex/FlexItem.mjs","../src/flex/FlexTarget.mjs","../src/tree/TextureSource.mjs","../src/tree/core/ElementTexturizer.mjs","../src/tree/core/ElementCore.mjs","../src/EventEmitter.mjs","../src/tree/Shader.mjs","../src/tree/Texture.mjs","../src/textures/ImageTexture.mjs","../src/textures/TextTextureRendererUtils.mts","../src/textures/TextTextureRenderer.mjs","../src/textures/TextTextureRendererAdvanced.mjs","../src/textures/TextTexture.mjs","../src/textures/SourceTexture.mjs","../src/animation/Transition.mjs","../src/tree/ObjectList.mjs","../src/tree/ElementChildList.mjs","../src/tree/Element.mjs","../src/application/StateMachine.mjs","../src/application/Component.mjs","../src/tree/core/CoreQuadList.mjs","../src/renderer/webgl/WebGLCoreQuadList.mjs","../src/tree/core/CoreQuadOperation.mjs","../src/renderer/webgl/WebGLCoreQuadOperation.mjs","../src/tree/core/CoreRenderExecutor.mjs","../src/renderer/webgl/WebGLCoreRenderExecutor.mjs","../src/tree/core/CoreRenderState.mjs","../src/renderer/webgl/WebGLShaderProgram.mjs","../src/renderer/webgl/WebGLShader.mjs","../src/renderer/webgl/shaders/DefaultShader.mjs","../src/renderer/Renderer.mjs","../src/renderer/webgl/WebGLRenderer.mjs","../src/renderer/c2d/C2dCoreQuadList.mjs","../src/renderer/c2d/C2dCoreQuadOperation.mjs","../src/renderer/c2d/C2dCoreRenderExecutor.mjs","../src/renderer/c2d/C2dShader.mjs","../src/renderer/c2d/shaders/DefaultShader.mjs","../src/renderer/c2d/C2dTextureTintManager.mjs","../src/renderer/c2d/C2dRenderer.mjs","../src/renderer/spark/shaders/SparkShader.mjs","../src/renderer/spark/SparkRenderer.mjs","../src/platforms/browser/ImageWorker.mjs","../src/platforms/browser/WebPlatform.mjs","../src/platforms/PlatformLoader.mjs","../src/tools/WebGLStateManager.mjs","../src/tree/TextureManager.mjs","../src/tree/TextureThrottler.mjs","../src/tree/core/CoreContext.mjs","../src/animation/TransitionSettings.mjs","../src/animation/TransitionManager.mjs","../src/tools/MultiSpline.mjs","../src/animation/AnimationActionSettings.mjs","../src/animation/AnimationSettings.mjs","../src/animation/Animation.mjs","../src/animation/AnimationManager.mjs","../src/textures/RectangleTexture.mjs","../src/tree/Stage.mjs","../src/application/Application.mjs","../src/textures/StaticCanvasTexture.mjs","../src/tools/Tools.mjs","../src/tools/ObjMerger.mjs","../src/tools/ObjectListProxy.mjs","../src/tools/ObjectListWrapper.mjs","../src/textures/NoiseTexture.mjs","../src/textures/HtmlTexture.mjs","../src/textures/StaticTexture.mjs","../src/components/ListComponent.mjs","../src/renderer/webgl/shaders/LinearBlurShader.mjs","../src/renderer/webgl/shaders/BoxBlurShader.mjs","../src/renderer/c2d/shaders/BlurShader.mjs","../src/components/FastBlurComponent.mjs","../src/components/BloomComponent.mjs","../src/components/SmoothScaleComponent.mjs","../src/components/BorderComponent.mjs","../src/renderer/common/shaders/GrayscaleShader.mjs","../src/renderer/webgl/shaders/DitheringShader.mjs","../src/renderer/webgl/shaders/CircularPushShader.mjs","../src/renderer/webgl/shaders/InversionShader.mjs","../src/renderer/webgl/shaders/OutlineShader.mjs","../src/renderer/webgl/shaders/PixelateShader.mjs","../src/renderer/webgl/shaders/RadialFilterShader.mjs","../src/renderer/webgl/shaders/RoundedRectangleShader.mjs","../src/renderer/webgl/shaders/FadeOutShader.mjs","../src/renderer/webgl/shaders/VignetteShader.mjs","../src/renderer/webgl/shaders/SpinnerShader.mjs","../src/renderer/webgl/shaders/HoleShader.mjs","../src/renderer/webgl/shaders/RadialGradientShader.mjs","../src/renderer/webgl/shaders/Light3dShader.mjs","../src/renderer/webgl/shaders/PerspectiveShader.mjs","../src/renderer/webgl/shaders/MagnifierShader.mjs","../src/renderer/webgl/shaders/SpinnerShader2.mjs","../src/lightning.mjs"],"sourcesContent":["/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class StageUtils {\n\n    static mergeNumbers(v1, v2, p) {\n        return v1 * p + v2 * (1 - p);\n    };\n\n    static rgb(r, g, b) {\n        return (r << 16) + (g << 8) + b + (255 * 16777216);\n    };\n\n    static rgba(r, g, b, a) {\n        return (r << 16) + (g << 8) + b + (((a * 255) | 0) * 16777216);\n    };\n\n    static getRgbString(color) {\n        let r = ((color / 65536) | 0) % 256;\n        let g = ((color / 256) | 0) % 256;\n        let b = color % 256;\n        return 'rgb(' + r + ',' + g + ',' + b + ')';\n    };\n\n    static getRgbaString(color) {\n        let r = ((color / 65536) | 0) % 256;\n        let g = ((color / 256) | 0) % 256;\n        let b = color % 256;\n        let a = ((color / 16777216) | 0) / 255;\n        return 'rgba(' + r + ',' + g + ',' + b + ',' + a.toFixed(4) + ')';\n    };\n\n    static getRgbaStringFromArray(color) {\n        let r = Math.floor(color[0] * 255);\n        let g = Math.floor(color[1] * 255);\n        let b = Math.floor(color[2] * 255);\n        let a = Math.floor(color[3] * 255) / 255;\n        return 'rgba(' + r + ',' + g + ',' + b + ',' + a.toFixed(4) + ')';\n    };\n\n    static getRgbaComponentsNormalized(argb) {\n        let r = ((argb / 65536) | 0) % 256;\n        let g = ((argb / 256) | 0) % 256;\n        let b = argb % 256;\n        let a = ((argb / 16777216) | 0);\n        return [r / 255, g / 255, b / 255, a / 255];\n    };\n\n    static getRgbComponentsNormalized(argb) {\n        let r = ((argb / 65536) | 0) % 256;\n        let g = ((argb / 256) | 0) % 256;\n        let b = argb % 256;\n        return [r / 255, g / 255, b / 255];\n    };\n\n    static getRgbaComponents(argb) {\n        let r = ((argb / 65536) | 0) % 256;\n        let g = ((argb / 256) | 0) % 256;\n        let b = argb % 256;\n        let a = ((argb / 16777216) | 0);\n        return [r, g, b, a];\n    };\n\n    static getArgbNumber(rgba) {\n        rgba[0] = Math.max(0, Math.min(255, rgba[0]));\n        rgba[1] = Math.max(0, Math.min(255, rgba[1]));\n        rgba[2] = Math.max(0, Math.min(255, rgba[2]));\n        rgba[3] = Math.max(0, Math.min(255, rgba[3]));\n        let v = ((rgba[3] | 0) << 24) + ((rgba[0] | 0) << 16) + ((rgba[1] | 0) << 8) + (rgba[2] | 0);\n        if (v < 0) {\n            v = 0xFFFFFFFF + v + 1;\n        }\n        return v;\n    };\n\n    static mergeColors(c1, c2, p) {\n        let r1 = ((c1 / 65536) | 0) % 256;\n        let g1 = ((c1 / 256) | 0) % 256;\n        let b1 = c1 % 256;\n        let a1 = ((c1 / 16777216) | 0);\n\n        let r2 = ((c2 / 65536) | 0) % 256;\n        let g2 = ((c2 / 256) | 0) % 256;\n        let b2 = c2 % 256;\n        let a2 = ((c2 / 16777216) | 0);\n\n        let r = r1 * p + r2 * (1 - p);\n        let g = g1 * p + g2 * (1 - p);\n        let b = b1 * p + b2 * (1 - p);\n        let a = a1 * p + a2 * (1 - p);\n\n        return Math.round(a) * 16777216 + Math.round(r) * 65536 + Math.round(g) * 256 + Math.round(b);\n    };\n\n    static mergeMultiColors(c, p) {\n        let r = 0, g = 0, b = 0, a = 0, t = 0;\n        let n = c.length;\n        for (let i = 0; i < n; i++) {\n            let r1 = ((c[i] / 65536) | 0) % 256;\n            let g1 = ((c[i] / 256) | 0) % 256;\n            let b1 = c[i] % 256;\n            let a1 = ((c[i] / 16777216) | 0);\n            r += r1 * p[i];\n            g += g1 * p[i];\n            b += b1 * p[i];\n            a += a1 * p[i];\n            t += p[i];\n        }\n\n        t = 1 / t;\n        return Math.round(a * t) * 16777216 + Math.round(r * t) * 65536 + Math.round(g * t) * 256 + Math.round(b * t);\n    };\n\n    static mergeMultiColorsEqual(c) {\n        let r = 0, g = 0, b = 0, a = 0, t = 0;\n        let n = c.length;\n        for (let i = 0; i < n; i++) {\n            let r1 = ((c[i] / 65536) | 0) % 256;\n            let g1 = ((c[i] / 256) | 0) % 256;\n            let b1 = c[i] % 256;\n            let a1 = ((c[i] / 16777216) | 0);\n            r += r1;\n            g += g1;\n            b += b1;\n            a += a1;\n            t += 1.0;\n        }\n\n        t = 1 / t;\n        return Math.round(a * t) * 16777216 + Math.round(r * t) * 65536 + Math.round(g * t) * 256 + Math.round(b * t);\n    };\n\n    static mergeColorAlpha(c, alpha) {\n        let a = ((c / 16777216 | 0) * alpha) | 0;\n        return (((((c >> 16) & 0xff) * a) / 255) & 0xff) +\n            ((((c & 0xff00) * a) / 255) & 0xff00) +\n            (((((c & 0xff) << 16) * a) / 255) & 0xff0000) +\n            (a << 24);\n    };\n\n    static rad(deg) {\n        return deg * (Math.PI / 180);\n    };\n\n    static getTimingBezier(a, b, c, d) {\n        let xc = 3.0 * a;\n        let xb = 3.0 * (c - a) - xc;\n        let xa = 1.0 - xc - xb;\n        let yc = 3.0 * b;\n        let yb = 3.0 * (d - b) - yc;\n        let ya = 1.0 - yc - yb;\n\n        return function (time) {\n            if (time >= 1.0) {\n                return 1;\n            }\n            if (time <= 0) {\n                return 0;\n            }\n\n            let t = 0.5, cbx, cbxd, dx;\n\n            for (let it = 0; it < 20; it++) {\n                cbx = t * (t * (t * xa + xb) + xc);\n                dx = time - cbx;\n                if (dx > -1e-8 && dx < 1e-8) {\n                    return t * (t * (t * ya + yb) + yc);\n                }\n\n                // Cubic bezier derivative.\n                cbxd = t * (t * (3 * xa) + 2 * xb) + xc;\n\n                if (cbxd > 1e-10 && cbxd < 1e-10) {\n                    // Problematic. Fall back to binary search method.\n                    break;\n                }\n\n                t += dx / cbxd;\n            }\n\n            // Fallback: binary search method. This is more reliable when there are near-0 slopes.\n            let minT = 0;\n            let maxT = 1;\n            for (let it = 0; it < 20; it++) {\n                t = 0.5 * (minT + maxT);\n\n                cbx = t * (t * (t * xa + xb) + xc);\n\n                dx = time - cbx;\n                if (dx > -1e-8 && dx < 1e-8) {\n                    // Solution found!\n                    return t * (t * (t * ya + yb) + yc);\n                }\n\n                if (dx < 0) {\n                    maxT = t;\n                } else {\n                    minT = t;\n                }\n            }\n\n        };\n    };\n\n    static getTimingFunction(str) {\n        switch (str) {\n            case \"linear\":\n                return function (time) {\n                    return time\n                };\n            case \"ease\":\n                return StageUtils.getTimingBezier(0.25, 0.1, 0.25, 1.0);\n            case \"ease-in\":\n                return StageUtils.getTimingBezier(0.42, 0, 1.0, 1.0);\n            case \"ease-out\":\n                return StageUtils.getTimingBezier(0, 0, 0.58, 1.0);\n            case \"ease-in-out\":\n                return StageUtils.getTimingBezier(0.42, 0, 0.58, 1.0);\n            case \"step-start\":\n                return function () {\n                    return 1\n                };\n            case \"step-end\":\n                return function (time) {\n                    return time === 1 ? 1 : 0;\n                };\n            default:\n                let s = \"cubic-bezier(\";\n                if (str && str.indexOf(s) === 0) {\n                    let parts = str.substr(s.length, str.length - s.length - 1).split(\",\");\n                    if (parts.length !== 4) {\n                        console.warn(\"[Lightning] Unknown timing function: \" + str);\n\n                        // Fallback: use linear.\n                        return function (time) {\n                            return time\n                        };\n                    }\n                    let a = parseFloat(parts[0]);\n                    let b = parseFloat(parts[1]);\n                    let c = parseFloat(parts[2]);\n                    let d = parseFloat(parts[3]);\n                    if (isNaN(a) || isNaN(b) || isNaN(c) || isNaN(d)) {\n                        console.warn(\"[Lightning] Unknown timing function: \" + str);\n                        // Fallback: use linear.\n                        return function (time) {\n                            return time\n                        };\n                    }\n\n                    return StageUtils.getTimingBezier(a, b, c, d);\n                } else {\n                    console.warn(\"[Lightning] Unknown timing function: \" + str);\n                    // Fallback: use linear.\n                    return function (time) {\n                        return time\n                    };\n                }\n        }\n    };\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class Utils {\n\n    static isFunction(value) {\n        return typeof value === 'function';\n    }\n\n    static isNumber(value) {\n        return typeof value === 'number';\n    }\n\n    static isInteger(value) {\n        return (typeof value === 'number' && (value % 1) === 0);\n    }\n\n    static isBoolean(value) {\n        return value === true || value === false;\n    }\n\n    static isString(value) {\n        return typeof value === 'string';\n    }\n\n    static clone(v) {\n        if (Utils.isObjectLiteral(v) || Array.isArray(v)) {\n            return Utils.getDeepClone(v);\n        } else {\n            // Copy by value.\n            return v;\n        }\n    }\n\n    static cloneObjShallow(obj) {\n        let keys = Object.keys(obj);\n        let clone = {}\n        for (let i = 0; i < keys.length; i++) {\n            clone[keys[i]] = obj[keys[i]];\n        }\n        return clone;\n    }\n\n    static merge(obj1, obj2) {\n        let keys = Object.keys(obj2);\n        for (let i = 0; i < keys.length; i++) {\n            obj1[keys[i]] = obj2[keys[i]];\n        }\n        return obj1;\n    }\n\n    static isObject(value) {\n        let type = typeof value;\n        return !!value && (type === 'object' || type === 'function');\n    }\n\n    static isPlainObject(value) {\n        let type = typeof value;\n        return !!value && (type === 'object');\n    }\n\n    static isObjectLiteral(value){\n        return typeof value === 'object' && value && value.constructor === Object;\n    }\n\n    static getArrayIndex(index, arr) {\n        return Utils.getModuloIndex(index, arr.length);\n    }\n\n    static getModuloIndex(index, len) {\n        if (len === 0) return index;\n        while (index < 0) {\n            index += Math.ceil(-index / len) * len;\n        }\n        index = index % len;\n        return index;\n    }\n\n    static getDeepClone(obj) {\n        let i, c;\n        if (Utils.isFunction(obj)) {\n            // Copy functions by reference.\n            return obj;\n        }\n        if (Array.isArray(obj)) {\n            c = [];\n            let keys = Object.keys(obj);\n            for (i = 0; i < keys.length; i++) {\n                c[keys[i]] = Utils.getDeepClone(obj[keys[i]]);\n            }\n            return c;\n        } else if (Utils.isObject(obj)) {\n            c = {}\n            let keys = Object.keys(obj);\n            for (i = 0; i < keys.length; i++) {\n                c[keys[i]] = Utils.getDeepClone(obj[keys[i]]);\n            }\n            return c;\n        } else {\n            return obj;\n        }\n    }\n\n    static equalValues(v1, v2) {\n        if ((typeof v1) !== (typeof v2)) return false;\n        if (Utils.isObjectLiteral(v1)) {\n            return Utils.isObjectLiteral(v2) && Utils.equalObjectLiterals(v1, v2);\n        } else if (Array.isArray(v1)) {\n            return Array.isArray(v2) && Utils.equalArrays(v1, v2);\n        } else {\n            return v1 === v2;\n        }\n    }\n\n    static equalObjectLiterals(obj1, obj2) {\n        let keys1 = Object.keys(obj1);\n        let keys2 = Object.keys(obj2);\n        if (keys1.length !== keys2.length) {\n            return false;\n        }\n\n        for (let i = 0, n = keys1.length; i < n; i++) {\n            const k1 = keys1[i];\n            const k2 = keys2[i];\n            if (k1 !== k2) {\n                return false;\n            }\n\n            const v1 = obj1[k1];\n            const v2 = obj2[k2];\n\n            if (!Utils.equalValues(v1, v2)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    static equalArrays(v1, v2) {\n        if (v1.length !== v2.length) {\n            return false;\n        }\n        for (let i = 0, n = v1.length; i < n; i++) {\n            if (!this.equalValues(v1[i], v2[i])) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    static setToArray(s) {\n        let result = [];\n        s.forEach(function (value) {\n            result.push(value);\n        });\n        return result;\n    }\n\n    static iteratorToArray(iterator) {\n        let result = [];\n        let iteratorResult = iterator.next();\n        while (!iteratorResult.done) {\n            result.push(iteratorResult.value);\n            iteratorResult = iterator.next();\n        }\n        return result;\n    }\n\n    static isUcChar(charcode) {\n        return charcode >= 65 && charcode <= 90;\n    }\n\n}\n\nUtils.isWeb = (typeof window !== \"undefined\") && (typeof sparkscene === \"undefined\");\nUtils.isWPE = Utils.isWeb && (navigator.userAgent.indexOf(\"WPE\") !== -1);\nUtils.isSpark = (typeof sparkscene !== \"undefined\");\nUtils.isNode = (typeof window === \"undefined\") || Utils.isSpark;\nUtils.isPS4 = Utils.isWeb && (navigator.userAgent.indexOf(\"PlayStation 4\") !== -1);\nUtils.isZiggo = Utils.isWeb && (navigator.userAgent.indexOf(\"EOSSTB\") !== -1 || navigator.userAgent.indexOf(\"HZNSTB\") !== -1);\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class Base {\n\n    static defaultSetter(obj, name, value) {\n        obj[name] = value;\n    }\n\n    static patchObject(obj, settings) {\n        if (!Utils.isObjectLiteral(settings)) {\n            console.error(\"[Lightning] Settings must be object literal\");\n        } else {\n            let names = Object.keys(settings);\n            for (let i = 0, n = names.length; i < n; i++) {\n                let name = names[i];\n\n                this.patchObjectProperty(obj, name, settings[name]);\n            }\n        }\n    }\n\n    static patchObjectProperty(obj, name, value) {\n        let setter = obj.setSetting || Base.defaultSetter;\n\n        if (name.charAt(0) === \"_\") {\n            // Disallow patching private variables.\n            if (name !== \"__create\") {\n                console.error(\"[Lightning] Patch of private property '\" + name + \"' is not allowed\");\n            }\n        } else if (name !== \"type\") {\n            // Type is a reserved keyword to specify the class type on creation.\n            if (Utils.isFunction(value) && value.__local) {\n                // Local function (Base.local(s => s.something))\n                value = value.__local(obj);\n            }\n\n            setter(obj, name, value);\n        }\n    }\n\n    static local(func) {\n        // This function can be used as an object setting, which is called with the target object.\n        func.__local = true;\n    }\n\n\n}\n\nimport Utils from \"./Utils.mjs\";\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class SpacingCalculator {\n\n    static getSpacing(mode, numberOfItems, remainingSpace) {\n        const itemGaps = (numberOfItems - 1);\n        let spacePerGap;\n\n        let spacingBefore, spacingBetween;\n\n        switch(mode) {\n            case \"flex-start\":\n                spacingBefore = 0;\n                spacingBetween = 0;\n                break;\n            case \"flex-end\":\n                spacingBefore = remainingSpace;\n                spacingBetween = 0;\n                break;\n            case \"center\":\n                spacingBefore = remainingSpace / 2;\n                spacingBetween = 0;\n                break;\n            case \"space-between\":\n                spacingBefore = 0;\n                spacingBetween = Math.max(0, remainingSpace) / itemGaps;\n                break;\n            case \"space-around\":\n                if (remainingSpace < 0) {\n                    return this.getSpacing(\"center\", numberOfItems, remainingSpace);\n                } else {\n                    spacePerGap = remainingSpace / (itemGaps + 1);\n                    spacingBefore = 0.5 * spacePerGap;\n                    spacingBetween = spacePerGap;\n                }\n                break;\n            case \"space-evenly\":\n                if (remainingSpace < 0) {\n                    return this.getSpacing(\"center\", numberOfItems, remainingSpace);\n                } else {\n                    spacePerGap = remainingSpace / (itemGaps + 2);\n                    spacingBefore = spacePerGap;\n                    spacingBetween = spacePerGap;\n                }\n                break;\n            case \"stretch\":\n                spacingBefore = 0;\n                spacingBetween = 0;\n                break;\n            default:\n                throw new Error(\"Unknown mode: \" + mode);\n        }\n\n        return {spacingBefore, spacingBetween}\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport SpacingCalculator from \"./SpacingCalculator.mjs\";\n\nexport default class ContentAligner {\n\n    constructor(layout) {\n        this._layout = layout;\n        this._totalCrossAxisSize = 0;\n    }\n\n    get _lines() {\n        return this._layout._lines;\n    }\n\n    init() {\n        this._totalCrossAxisSize = this._getTotalCrossAxisSize();\n    }\n\n    align() {\n        const crossAxisSize = this._layout.crossAxisSize;\n        const remainingSpace = crossAxisSize - this._totalCrossAxisSize;\n\n        const {spacingBefore, spacingBetween} = this._getSpacing(remainingSpace);\n\n        const lines = this._lines;\n\n        const mode = this._layout._flexContainer.alignContent;\n        let growSize = 0;\n        if (mode === \"stretch\" && lines.length && (remainingSpace > 0)) {\n            growSize = remainingSpace / lines.length;\n        }\n\n        let currentPos = spacingBefore;\n        for (let i = 0, n = lines.length; i < n; i++) {\n            const crossAxisLayoutOffset = currentPos;\n            const aligner = lines[i].createItemAligner();\n\n            let finalCrossAxisLayoutSize = lines[i].crossAxisLayoutSize + growSize;\n\n            aligner.setCrossAxisLayoutSize(finalCrossAxisLayoutSize);\n            aligner.setCrossAxisLayoutOffset(crossAxisLayoutOffset);\n\n            aligner.align();\n\n            if (aligner.recursiveResizeOccured) {\n                lines[i].setItemPositions();\n            }\n\n            currentPos += finalCrossAxisLayoutSize;\n            currentPos += spacingBetween;\n        }\n    }\n\n    get totalCrossAxisSize() {\n        return this._totalCrossAxisSize;\n    }\n\n    _getTotalCrossAxisSize() {\n        const lines = this._lines;\n        let total = 0;\n        for (let i = 0, n = lines.length; i < n; i++) {\n            const line = lines[i];\n            total += line.crossAxisLayoutSize;\n        }\n        return total;\n    }\n\n    _getSpacing(remainingSpace) {\n        const mode = this._layout._flexContainer.alignContent;\n        const numberOfItems = this._lines.length;\n        return SpacingCalculator.getSpacing(mode, numberOfItems, remainingSpace);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class FlexUtils {\n\n    static getParentAxisSizeWithPadding(item, horizontal) {\n        const target = item.target;\n        const parent = target.getParent();\n        if (!parent) {\n            return 0;\n        } else {\n            const flexParent = item.flexParent;\n            if (flexParent) {\n                // Use pending layout size.\n                return this.getAxisLayoutSize(flexParent, horizontal) + this.getTotalPadding(flexParent, horizontal);\n            } else {\n                // Use 'absolute' size.\n                return horizontal ? parent.w : parent.h;\n            }\n        }\n    }\n\n    static getRelAxisSize(item, horizontal) {\n        if (horizontal) {\n            if (item.funcW) {\n                if (this._allowRelAxisSizeFunction(item, true)) {\n                    return item.funcW(this.getParentAxisSizeWithPadding(item, true));\n                } else {\n                    return 0;\n                }\n            } else {\n                return item.originalWidth;\n            }\n        } else {\n            if (item.funcH) {\n                if (this._allowRelAxisSizeFunction(item, false)) {\n                    return item.funcH(this.getParentAxisSizeWithPadding(item, false));\n                } else {\n                    return 0;\n                }\n            } else {\n                return item.originalHeight;\n            }\n        }\n    }\n\n    static _allowRelAxisSizeFunction(item, horizontal) {\n        const flexParent = item.flexParent;\n        if (flexParent && flexParent._flex._layout.isAxisFitToContents(horizontal)) {\n            // We don't allow relative width on fit-to-contents because it leads to conflicts.\n            return false;\n        }\n        return true;\n    }\n\n    static isZeroAxisSize(item, horizontal) {\n        if (horizontal) {\n            return !item.originalWidth && !item.funcW;\n        } else {\n            return !item.originalHeight && !item.funcH;\n        }\n    }\n\n    static getAxisLayoutPos(item, horizontal) {\n        return horizontal ? item.x : item.y;\n    }\n\n    static getAxisLayoutSize(item, horizontal) {\n        return horizontal ? item.w : item.h;\n    }\n\n    static setAxisLayoutPos(item, horizontal, pos) {\n        if (horizontal) {\n            item.x = pos;\n        } else {\n            item.y = pos;\n        }\n    }\n\n    static setAxisLayoutSize(item, horizontal, size) {\n        if (horizontal) {\n            item.w = size;\n        } else {\n            item.h = size;\n        }\n    }\n\n    static getAxisMinSize(item, horizontal) {\n        let minSize = this.getPlainAxisMinSize(item, horizontal);\n\n        let flexItemMinSize = 0;\n        if (item.isFlexItemEnabled()) {\n            flexItemMinSize = item._flexItem._getMinSizeSetting(horizontal);\n        }\n\n        const hasLimitedMinSize = (flexItemMinSize > 0);\n        if (hasLimitedMinSize) {\n            minSize = Math.max(minSize, flexItemMinSize);\n        }\n        return minSize;\n    }\n\n    static getPlainAxisMinSize(item, horizontal) {\n        if (item.isFlexEnabled()) {\n            return item._flex._layout.getAxisMinSize(horizontal);\n        } else {\n            const isShrinkable = (item.flexItem.shrink !== 0);\n            if (isShrinkable) {\n                return 0;\n            } else {\n                return this.getRelAxisSize(item, horizontal);\n            }\n        }\n    }\n\n    static resizeAxis(item, horizontal, size) {\n        if (item.isFlexEnabled()) {\n            const isMainAxis = (item._flex._horizontal === horizontal);\n            if (isMainAxis) {\n                item._flex._layout.resizeMainAxis(size);\n            } else {\n                item._flex._layout.resizeCrossAxis(size);\n            }\n        } else {\n            this.setAxisLayoutSize(item, horizontal, size);\n        }\n    }\n\n\n    static getPaddingOffset(item, horizontal) {\n        if (item.isFlexEnabled()) {\n            const flex = item._flex;\n            if (horizontal) {\n                return flex.paddingLeft;\n            } else {\n                return flex.paddingTop;\n            }\n        } else {\n            return 0;\n        }\n    }\n\n    static getTotalPadding(item, horizontal) {\n        if (item.isFlexEnabled()) {\n            const flex = item._flex;\n            if (horizontal) {\n                return flex.paddingRight + flex.paddingLeft;\n            } else {\n                return flex.paddingTop + flex.paddingBottom;\n            }\n        } else {\n            return 0;\n        }\n    }\n\n    static getMarginOffset(item, horizontal) {\n        const flexItem = item.flexItem;\n        if (flexItem) {\n            if (horizontal) {\n                return flexItem.marginLeft;\n            } else {\n                return flexItem.marginTop;\n            }\n        } else {\n            return 0;\n        }\n    }\n\n    static getTotalMargin(item, horizontal) {\n        const flexItem = item.flexItem;\n        if (flexItem) {\n            if (horizontal) {\n                return flexItem.marginRight + flexItem.marginLeft;\n            } else {\n                return flexItem.marginTop + flexItem.marginBottom;\n            }\n        } else {\n            return 0;\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class SizeShrinker {\n\n    constructor(line) {\n        this._line = line;\n        this._amountRemaining = 0;\n        this._shrunkSize = 0;\n    }\n\n    shrink(amount) {\n        this._shrunkSize = 0;\n\n        this._amountRemaining = amount;\n        let totalShrinkAmount = this._getTotalShrinkAmount();\n        if (totalShrinkAmount) {\n            const items = this._line.items;\n            do {\n                let amountPerShrink = this._amountRemaining / totalShrinkAmount;\n                for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n                    const item = items[i];\n                    const flexItem = item.flexItem;\n                    const shrinkAmount = flexItem.shrink;\n                    const isShrinkableItem = (shrinkAmount > 0);\n                    if (isShrinkableItem) {\n                        let shrink = shrinkAmount * amountPerShrink;\n                        const minSize = flexItem._getMainAxisMinSize();\n                        const size = flexItem._getMainAxisLayoutSize();\n                        if (size > minSize) {\n                            const maxShrink = size - minSize;\n                            const isFullyShrunk = (shrink >= maxShrink);\n                            if (isFullyShrunk) {\n                                shrink = maxShrink;\n\n                                // Destribute remaining amount over the other flex items.\n                                totalShrinkAmount -= shrinkAmount;\n                            }\n\n                            const finalSize = size - shrink;\n                            flexItem._resizeMainAxis(finalSize);\n\n                            this._shrunkSize += shrink;\n                            this._amountRemaining -= shrink;\n\n                            if (Math.abs(this._amountRemaining) < 10e-6) {\n                                return;\n                            }\n                        }\n                    }\n                }\n            } while(totalShrinkAmount && (Math.abs(this._amountRemaining) > 10e-6));\n        }\n    }\n\n    _getTotalShrinkAmount() {\n        let total = 0;\n        const items = this._line.items;\n        for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n            const item = items[i];\n            const flexItem = item.flexItem;\n\n            if (flexItem.shrink) {\n                const minSize = flexItem._getMainAxisMinSize();\n                const size = flexItem._getMainAxisLayoutSize();\n\n                // Exclude those already fully shrunk.\n                if (size > minSize) {\n                    total += flexItem.shrink;\n                }\n            }\n        }\n        return total;\n    }\n\n    getShrunkSize() {\n        return this._shrunkSize;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class SizeGrower {\n\n    constructor(line) {\n        this._line = line;\n        this._amountRemaining = 0;\n        this._grownSize = 0;\n    }\n\n    grow(amount) {\n        this._grownSize = 0;\n\n        this._amountRemaining = amount;\n        let totalGrowAmount = this._getTotalGrowAmount();\n        if (totalGrowAmount) {\n            const items = this._line.items;\n            do {\n                let amountPerGrow = this._amountRemaining / totalGrowAmount;\n                for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n                    const item = items[i];\n                    const flexItem = item.flexItem;\n                    const growAmount = flexItem.grow;\n                    const isGrowableItem = (growAmount > 0);\n                    if (isGrowableItem) {\n                        let grow = growAmount * amountPerGrow;\n                        const maxSize = flexItem._getMainAxisMaxSizeSetting();\n                        const size = flexItem._getMainAxisLayoutSize();\n                        if (maxSize > 0) {\n                            if (size >= maxSize) {\n                                // Already fully grown.\n                                grow = 0;\n                            } else {\n                                const maxGrow = maxSize - size;\n                                const isFullyGrown = (grow >= maxGrow);\n                                if (isFullyGrown) {\n                                    grow = maxGrow;\n\n                                    // Destribute remaining amount over the other flex items.\n                                    totalGrowAmount -= growAmount;\n                                }\n                            }\n                        }\n\n                        if (grow > 0) {\n                            const finalSize = size + grow;\n                            flexItem._resizeMainAxis(finalSize);\n\n                            this._grownSize += grow;\n                            this._amountRemaining -= grow;\n\n                            if (Math.abs(this._amountRemaining) < 10e-6) {\n                                return;\n                            }\n                        }\n                    }\n                }\n            } while(totalGrowAmount && (Math.abs(this._amountRemaining) > 10e-6));\n        }\n    }\n\n    _getTotalGrowAmount() {\n        let total = 0;\n        const items = this._line.items;\n        for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n            const item = items[i];\n            const flexItem = item.flexItem;\n\n            if (flexItem.grow) {\n                const maxSize = flexItem._getMainAxisMaxSizeSetting();\n                const size = flexItem._getMainAxisLayoutSize();\n\n                // Exclude those already fully grown.\n                if (maxSize === 0 || size < maxSize) {\n                    total += flexItem.grow;\n                }\n            }\n        }\n        return total;\n    }\n\n    getGrownSize() {\n        return this._grownSize;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport SpacingCalculator from \"../SpacingCalculator.mjs\";\n\nexport default class ItemPositioner {\n\n    constructor(lineLayout) {\n        this._line = lineLayout;\n    }\n\n    get _layout() {\n        return this._line._layout;\n    }\n\n    position() {\n        const {spacingBefore, spacingBetween} = this._getSpacing();\n\n        let currentPos = spacingBefore;\n\n        const items = this._line.items;\n        for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n            const item = items[i];\n\n            item.flexItem._setMainAxisLayoutPos(currentPos);\n            currentPos += item.flexItem._getMainAxisLayoutSizeWithPaddingAndMargin();\n            currentPos += spacingBetween;\n        }\n    }\n\n    _getSpacing() {\n        const remainingSpace = this._line._availableSpace;\n        let mode = this._layout._flexContainer.justifyContent;\n        const numberOfItems = this._line.numberOfItems;\n\n        return SpacingCalculator.getSpacing(mode, numberOfItems, remainingSpace);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class ItemAligner {\n\n    constructor(line) {\n        this._line = line;\n        this._crossAxisLayoutSize = 0;\n        this._crossAxisLayoutOffset = 0;\n        this._alignItemsSetting = null;\n        this._recursiveResizeOccured = false;\n        this._isCrossAxisFitToContents = false;\n    }\n\n    get _layout() {\n        return this._line._layout;\n    }\n\n    get _flexContainer() {\n        return this._layout._flexContainer;\n    }\n\n    setCrossAxisLayoutSize(size) {\n        this._crossAxisLayoutSize = size;\n    }\n\n    setCrossAxisLayoutOffset(offset) {\n        this._crossAxisLayoutOffset = offset;\n    }\n\n    align() {\n        this._alignItemsSetting = this._flexContainer.alignItems;\n\n        this._isCrossAxisFitToContents = this._layout.isAxisFitToContents(!this._flexContainer._horizontal);\n\n        this._recursiveResizeOccured = false;\n        const items = this._line.items;\n        for (let i = this._line.startIndex; i <= this._line.endIndex; i++) {\n            const item = items[i];\n            this._alignItem(item);\n        }\n    }\n\n    get recursiveResizeOccured() {\n        return this._recursiveResizeOccured;\n    }\n\n    _alignItem(item) {\n        const flexItem = item.flexItem;\n        let align = flexItem.alignSelf || this._alignItemsSetting;\n\n        if (align === \"stretch\" && this._preventStretch(flexItem)) {\n            align = \"flex-start\";\n        }\n\n        if (align !== \"stretch\" && !this._isCrossAxisFitToContents) {\n            if (flexItem._hasRelCrossAxisSize()) {\n                // As cross axis size might have changed, we need to recalc the relative flex item's size.\n                flexItem._resetCrossAxisLayoutSize();\n            }\n        }\n\n        switch(align) {\n            case \"flex-start\":\n                this._alignItemFlexStart(flexItem);\n                break;\n            case \"flex-end\":\n                this._alignItemFlexEnd(flexItem);\n                break;\n            case \"center\":\n                this._alignItemFlexCenter(flexItem);\n                break;\n            case \"stretch\":\n                this._alignItemStretch(flexItem);\n                break;\n        }\n    }\n\n    _alignItemFlexStart(flexItem) {\n        flexItem._setCrossAxisLayoutPos(this._crossAxisLayoutOffset);\n    }\n\n    _alignItemFlexEnd(flexItem) {\n        const itemCrossAxisSize = flexItem._getCrossAxisLayoutSizeWithPaddingAndMargin();\n        flexItem._setCrossAxisLayoutPos(this._crossAxisLayoutOffset + (this._crossAxisLayoutSize - itemCrossAxisSize));\n    }\n\n    _alignItemFlexCenter(flexItem) {\n        const itemCrossAxisSize = flexItem._getCrossAxisLayoutSizeWithPaddingAndMargin();\n        const center = (this._crossAxisLayoutSize - itemCrossAxisSize) / 2;\n        flexItem._setCrossAxisLayoutPos(this._crossAxisLayoutOffset + center);\n    }\n\n    _alignItemStretch(flexItem) {\n        flexItem._setCrossAxisLayoutPos(this._crossAxisLayoutOffset);\n\n        const mainAxisLayoutSizeBeforeResize = flexItem._getMainAxisLayoutSize();\n        let size = this._crossAxisLayoutSize - flexItem._getCrossAxisMargin() - flexItem._getCrossAxisPadding();\n\n        const crossAxisMinSizeSetting = flexItem._getCrossAxisMinSizeSetting();\n        if (crossAxisMinSizeSetting > 0) {\n            size = Math.max(size, crossAxisMinSizeSetting);\n        }\n\n        const crossAxisMaxSizeSetting = flexItem._getCrossAxisMaxSizeSetting();\n        const crossAxisMaxSizeSettingEnabled = (crossAxisMaxSizeSetting > 0);\n        if (crossAxisMaxSizeSettingEnabled) {\n            size = Math.min(size, crossAxisMaxSizeSetting);\n        }\n\n        flexItem._resizeCrossAxis(size);\n        const mainAxisLayoutSizeAfterResize = flexItem._getMainAxisLayoutSize();\n\n        const recursiveResize = (mainAxisLayoutSizeAfterResize !== mainAxisLayoutSizeBeforeResize);\n        if (recursiveResize) {\n            // Recursive resize can happen when this flex item has the opposite direction than the container\n            // and is wrapping and auto-sizing. Due to item/content stretching the main axis size of the flex\n            // item may decrease. If it does so, we must re-justify-content the complete line.\n            // Notice that we don't account for changes to the (if autosized) main axis size caused by recursive\n            // resize, which may cause the container's main axis to not shrink to the contents properly.\n            // This is by design, because if we had re-run the main axis layout, we could run into issues such\n            // as slow layout or endless loops.\n            this._recursiveResizeOccured = true;\n        }\n    }\n\n    _preventStretch(flexItem) {\n        const hasFixedCrossAxisSize = flexItem._hasFixedCrossAxisSize();\n        const forceStretch = (flexItem.alignSelf === \"stretch\");\n        return hasFixedCrossAxisSize && !forceStretch;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport SizeShrinker from \"./SizeShrinker.mjs\";\nimport SizeGrower from \"./SizeGrower.mjs\";\nimport ItemPositioner from \"./ItemPositioner.mjs\";\nimport ItemAligner from \"./ItemAligner.mjs\";\n\nexport default class LineLayout {\n\n    constructor(layout, startIndex, endIndex, availableSpace) {\n        this._layout = layout;\n        this.items = layout.items;\n        this.startIndex = startIndex;\n        this.endIndex = endIndex;\n        this._availableSpace = availableSpace;\n    }\n\n    performLayout() {\n        this._setItemSizes();\n        this.setItemPositions();\n        this._calcLayoutInfo();\n    }\n\n    _setItemSizes() {\n        if (this._availableSpace > 0) {\n            this._growItemSizes(this._availableSpace);\n        } else if (this._availableSpace < 0) {\n            this._shrinkItemSizes(-this._availableSpace);\n        }\n    }\n\n    _growItemSizes(amount) {\n        const grower = new SizeGrower(this);\n        grower.grow(amount);\n        this._availableSpace -= grower.getGrownSize();\n    }\n\n    _shrinkItemSizes(amount) {\n        const shrinker = new SizeShrinker(this);\n        shrinker.shrink(amount);\n        this._availableSpace += shrinker.getShrunkSize();\n    }\n\n    setItemPositions() {\n        const positioner = new ItemPositioner(this);\n        positioner.position();\n    }\n\n    createItemAligner() {\n        return new ItemAligner(this);\n    }\n\n    _calcLayoutInfo() {\n        this._calcCrossAxisMaxLayoutSize();\n    }\n\n    getMainAxisMinSize() {\n        let mainAxisMinSize = 0;\n        for (let i = this.startIndex; i <= this.endIndex; i++) {\n            const item = this.items[i];\n            mainAxisMinSize += item.flexItem._getMainAxisMinSizeWithPaddingAndMargin();\n        }\n        return mainAxisMinSize;\n    }\n    \n    get numberOfItems() {\n        return this.endIndex - this.startIndex + 1;\n    }\n\n    get crossAxisLayoutSize() {\n        const noSpecifiedCrossAxisSize = (this._layout.isCrossAxisFitToContents() && !this._layout.resizingCrossAxis);\n        const shouldFitToContents = (this._layout.isWrapping() || noSpecifiedCrossAxisSize);\n        if (shouldFitToContents) {\n            return this._crossAxisMaxLayoutSize;\n        } else {\n            return this._layout.crossAxisSize;\n        }\n    }\n\n    _calcCrossAxisMaxLayoutSize() {\n        this._crossAxisMaxLayoutSize = this._getCrossAxisMaxLayoutSize();\n    }\n\n    _getCrossAxisMaxLayoutSize() {\n        let crossAxisMaxSize = 0;\n        for (let i = this.startIndex; i <= this.endIndex; i++) {\n            const item = this.items[i];\n            crossAxisMaxSize = Math.max(crossAxisMaxSize, item.flexItem._getCrossAxisLayoutSizeWithPaddingAndMargin());\n        }\n        return crossAxisMaxSize;\n    }\n\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport LineLayout from \"./line/LineLayout.mjs\";\n\n/**\n * Distributes items over layout lines.\n */\nexport default class LineLayouter {\n\n    constructor(layout) {\n        this._layout = layout;\n        this._mainAxisMinSize = -1;\n        this._crossAxisMinSize = -1;\n        this._mainAxisContentSize = 0;\n    }\n\n    get lines() {\n        return this._lines;\n    }\n\n    get mainAxisMinSize() {\n        if (this._mainAxisMinSize === -1) {\n            this._mainAxisMinSize = this._getMainAxisMinSize();\n        }\n        return this._mainAxisMinSize;\n    }\n\n    get crossAxisMinSize() {\n        if (this._crossAxisMinSize === -1) {\n            this._crossAxisMinSize = this._getCrossAxisMinSize();\n        }\n        return this._crossAxisMinSize;\n    }\n\n    get mainAxisContentSize() {\n        return this._mainAxisContentSize;\n    }\n\n    layoutLines() {\n        this._setup();\n        const items = this._layout.items;\n        const wrap = this._layout.isWrapping();\n\n        let startIndex = 0;\n        let i;\n        const n = items.length;\n        for (i = 0; i < n; i++) {\n            const item = items[i];\n\n            this._layoutFlexItem(item);\n\n            // Get predicted main axis size.\n            const itemMainAxisSize = item.flexItem._getMainAxisLayoutSizeWithPaddingAndMargin();\n\n            if (wrap && (i > startIndex)) {\n                const isOverflowing = (this._curMainAxisPos + itemMainAxisSize > this._mainAxisSize);\n                if (isOverflowing) {\n                    this._layoutLine(startIndex, i - 1);\n                    this._curMainAxisPos = 0;\n                    startIndex = i;\n                }\n            }\n\n            this._addToMainAxisPos(itemMainAxisSize);\n        }\n\n        if (startIndex < i) {\n            this._layoutLine(startIndex, i - 1);\n        }\n    }\n\n    _layoutFlexItem(item) {\n        if (item.isFlexEnabled()) {\n            item.flexLayout.updateTreeLayout();\n        } else {\n            item.flexItem._resetLayoutSize();\n        }\n    }\n\n    _setup() {\n        this._mainAxisSize = this._layout.mainAxisSize;\n        this._curMainAxisPos = 0;\n        this._maxMainAxisPos = 0;\n        this._lines = [];\n\n        this._mainAxisMinSize = -1;\n        this._crossAxisMinSize = -1;\n        this._mainAxisContentSize = 0;\n    }\n\n    _addToMainAxisPos(itemMainAxisSize) {\n        this._curMainAxisPos += itemMainAxisSize;\n        if (this._curMainAxisPos > this._maxMainAxisPos) {\n            this._maxMainAxisPos = this._curMainAxisPos;\n        }\n    }\n\n    _layoutLine(startIndex, endIndex) {\n        const availableSpace = this._getAvailableMainAxisLayoutSpace();\n        const line = new LineLayout(this._layout, startIndex, endIndex, availableSpace);\n        line.performLayout();\n        this._lines.push(line);\n\n        if (this._mainAxisContentSize === 0 || (this._curMainAxisPos > this._mainAxisContentSize)) {\n            this._mainAxisContentSize = this._curMainAxisPos;\n        }\n    }\n\n    _getAvailableMainAxisLayoutSpace() {\n        if (!this._layout.resizingMainAxis && this._layout.isMainAxisFitToContents()) {\n            return 0;\n        } else {\n            return this._mainAxisSize - this._curMainAxisPos;\n        }\n    }\n\n    _getCrossAxisMinSize() {\n        let crossAxisMinSize = 0;\n        const items = this._layout.items;\n        for (let i = 0, n = items.length; i < n; i++) {\n            const item = items[i];\n            const itemCrossAxisMinSize = item.flexItem._getCrossAxisMinSizeWithPaddingAndMargin();\n            crossAxisMinSize = Math.max(crossAxisMinSize, itemCrossAxisMinSize);\n        }\n        return crossAxisMinSize;\n    }\n\n    _getMainAxisMinSize() {\n        if (this._lines.length === 1) {\n            return this._lines[0].getMainAxisMinSize();\n        } else {\n            // Wrapping lines: specified width is used as min width (in accordance to W3C flexbox).\n            return this._layout.mainAxisSize;\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport FlexUtils from \"../FlexUtils.mjs\";\n\nexport default class ItemCoordinatesUpdater {\n\n    constructor(layout) {\n        this._layout = layout;\n        this._isReverse = this._flexContainer._reverse;\n        this._horizontalPaddingOffset = this._layout._getHorizontalPaddingOffset();\n        this._verticalPaddingOffset = this._layout._getVerticalPaddingOffset();\n    }\n\n    get _flexContainer() {\n        return this._layout._flexContainer;\n    }\n\n    finalize() {\n        const parentFlex = this._layout.getParentFlexContainer();\n        if (parentFlex) {\n            // We must update it from the parent to set padding offsets and reverse position.\n            const updater = new ItemCoordinatesUpdater(parentFlex._layout);\n            updater._finalizeItemAndChildren(this._flexContainer.item);\n        } else {\n            this._finalizeRoot();\n            this._finalizeItems();\n        }\n    }\n\n    _finalizeRoot() {\n        const item = this._flexContainer.item;\n        let x = FlexUtils.getAxisLayoutPos(item, true);\n        let y = FlexUtils.getAxisLayoutPos(item, false);\n        let w = FlexUtils.getAxisLayoutSize(item, true);\n        let h = FlexUtils.getAxisLayoutSize(item, false);\n\n        w += this._layout._getHorizontalPadding();\n        h += this._layout._getVerticalPadding();\n\n        item.clearRecalcFlag();\n\n        item.setLayout(x, y, w, h);\n    }\n\n    _finalizeItems() {\n        const items = this._layout.items;\n        for (let i = 0, n = items.length; i < n; i++) {\n            const item = items[i];\n            const validCache = this._validateItemCache(item);\n\n            // Notice that we must also finalize a cached items, as it's coordinates may have changed.\n            this._finalizeItem(item);\n\n            if (!validCache) {\n                this._finalizeItemChildren(item);\n            }\n        }\n    }\n\n    _validateItemCache(item) {\n        if (item.recalc === 0) {\n            if (item.isFlexEnabled()) {\n                const layout = item._flex._layout;\n\n                const dimensionsMatchPreviousResult = (item.w === item.target.w && item.h === item.target.h);\n                if (dimensionsMatchPreviousResult) {\n                    // Cache is valid.\n                    return true;\n                } else {\n                    const crossAxisSize = layout.crossAxisSize;\n                    layout.performResizeMainAxis(layout.mainAxisSize);\n                    layout.performResizeCrossAxis(crossAxisSize);\n                }\n            }\n        }\n        return false;\n    }\n\n    _finalizeItemAndChildren(item) {\n        this._finalizeItem(item);\n        this._finalizeItemChildren(item);\n    }\n\n    _finalizeItem(item) {\n        if (this._isReverse) {\n            this._reverseMainAxisLayoutPos(item);\n        }\n\n        let x = FlexUtils.getAxisLayoutPos(item, true);\n        let y = FlexUtils.getAxisLayoutPos(item, false);\n        let w = FlexUtils.getAxisLayoutSize(item, true);\n        let h = FlexUtils.getAxisLayoutSize(item, false);\n\n        x += this._horizontalPaddingOffset;\n        y += this._verticalPaddingOffset;\n\n        const flex = item.flex;\n        if (flex) {\n            w += item._flex._layout._getHorizontalPadding();\n            h += item._flex._layout._getVerticalPadding();\n        }\n\n        const flexItem = item.flexItem;\n        if (flexItem) {\n            x += flexItem._getHorizontalMarginOffset();\n            y += flexItem._getVerticalMarginOffset();\n        }\n\n        item.clearRecalcFlag();\n        item.setLayout(x, y, w, h);\n    }\n\n    _finalizeItemChildren(item) {\n        const flex = item._flex;\n        if (flex) {\n            const updater = new ItemCoordinatesUpdater(flex._layout);\n            updater._finalizeItems();\n        }\n    }\n\n    _reverseMainAxisLayoutPos(item) {\n        const endPos = (item.flexItem._getMainAxisLayoutPos() + item.flexItem._getMainAxisLayoutSizeWithPaddingAndMargin());\n        const reversedPos = this._layout.mainAxisSize - endPos;\n        item.flexItem._setMainAxisLayoutPos(reversedPos);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport ContentAligner from \"./ContentAligner.mjs\";\nimport FlexUtils from \"../FlexUtils.mjs\";\nimport LineLayouter from \"./LineLayouter.mjs\";\nimport ItemCoordinatesUpdater from \"./ItemCoordinatesUpdater.mjs\";\n\n/**\n * Layouts a flex container (and descendants).\n */\nexport default class FlexLayout {\n\n    constructor(flexContainer) {\n        this._flexContainer = flexContainer;\n\n        this._lineLayouter = new LineLayouter(this);\n\n        this._resizingMainAxis = false;\n        this._resizingCrossAxis = false;\n\n        this._cachedMainAxisSizeAfterLayout = 0;\n        this._cachedCrossAxisSizeAfterLayout = 0;\n\n        this._shrunk = false;\n    }\n\n    get shrunk() {\n        return this._shrunk;\n    }\n\n    get recalc() {\n        return this.item.recalc;\n    }\n\n    layoutTree() {\n        const isSubTree = (this.item.flexParent !== null);\n        if (isSubTree) {\n            // Use the dimensions set by the parent flex tree.\n            this._updateSubTreeLayout();\n        } else {\n            this.updateTreeLayout();\n        }\n        this.updateItemCoords();\n    }\n\n    updateTreeLayout() {\n        if (this.recalc) {\n            this._performUpdateLayoutTree();\n        } else {\n            this._performUpdateLayoutTreeFromCache();\n        }\n    }\n\n    _performUpdateLayoutTree() {\n        this._setInitialAxisSizes();\n        this._layoutAxes();\n        this._refreshLayoutCache();\n    }\n\n    _refreshLayoutCache() {\n        this._cachedMainAxisSizeAfterLayout = this.mainAxisSize;\n        this._cachedCrossAxisSizeAfterLayout = this.crossAxisSize;\n    }\n\n    _performUpdateLayoutTreeFromCache() {\n        const sizeMightHaveChanged = (this.item.funcW || this.item.funcH);\n        if (sizeMightHaveChanged) {\n            // Update after all.\n            this.item.enableLocalRecalcFlag();\n            this._performUpdateLayoutTree();\n        } else {\n            this.mainAxisSize = this._cachedMainAxisSizeAfterLayout;\n            this.crossAxisSize = this._cachedCrossAxisSizeAfterLayout;\n        }\n    }\n\n    updateItemCoords() {\n        const updater = new ItemCoordinatesUpdater(this);\n        updater.finalize();\n    }\n\n    _updateSubTreeLayout() {\n        // The dimensions of this container are guaranteed not to have changed.\n        // That's why we can safely 'reuse' those and re-layout the contents.\n        const crossAxisSize = this.crossAxisSize;\n        this._layoutMainAxis();\n        this.performResizeCrossAxis(crossAxisSize);\n    }\n\n    _setInitialAxisSizes() {\n        if (this.item.isFlexItemEnabled()) {\n            this.item.flexItem._resetLayoutSize();\n        } else {\n            this.mainAxisSize = this._getMainAxisBasis();\n            this.crossAxisSize = this._getCrossAxisBasis();\n        }\n        this._resizingMainAxis = false;\n        this._resizingCrossAxis = false;\n        this._shrunk = false;\n    }\n\n    _layoutAxes() {\n        this._layoutMainAxis();\n        this._layoutCrossAxis();\n    }\n\n    /**\n     * @pre mainAxisSize should exclude padding.\n     */\n    _layoutMainAxis() {\n        this._layoutLines();\n        this._fitMainAxisSizeToContents();\n    }\n\n    _layoutLines() {\n        this._lineLayouter.layoutLines();\n    }\n\n    get _lines() {\n        return this._lineLayouter.lines;\n    }\n\n    _fitMainAxisSizeToContents() {\n        if (!this._resizingMainAxis) {\n            if (this.isMainAxisFitToContents()) {\n                this.mainAxisSize = this._lineLayouter.mainAxisContentSize;\n            }\n        }\n    }\n\n    /**\n     * @pre crossAxisSize should exclude padding.\n     */\n    _layoutCrossAxis() {\n        const aligner = new ContentAligner(this);\n        aligner.init();\n        this._totalCrossAxisSize = aligner.totalCrossAxisSize;\n        this._fitCrossAxisSizeToContents();\n        aligner.align();\n    }\n\n    _fitCrossAxisSizeToContents() {\n        if (!this._resizingCrossAxis) {\n            if (this.isCrossAxisFitToContents()) {\n                this.crossAxisSize = this._totalCrossAxisSize;\n            }\n        }\n    }\n\n    isWrapping() {\n        return this._flexContainer.wrap;\n    }\n\n    isAxisFitToContents(horizontal) {\n        if (this._horizontal === horizontal) {\n            return this.isMainAxisFitToContents();\n        } else {\n            return this.isCrossAxisFitToContents();\n        }\n    }\n\n    isMainAxisFitToContents() {\n        return !this.isWrapping() && !this._hasFixedMainAxisBasis();\n    }\n\n    isCrossAxisFitToContents() {\n        return !this._hasFixedCrossAxisBasis();\n    }\n\n    _hasFixedMainAxisBasis() {\n        return !FlexUtils.isZeroAxisSize(this.item, this._horizontal);\n    }\n\n    _hasFixedCrossAxisBasis() {\n        return !FlexUtils.isZeroAxisSize(this.item, !this._horizontal);\n    }\n\n    getAxisMinSize(horizontal) {\n        if (this._horizontal === horizontal) {\n            return this._getMainAxisMinSize();\n        } else {\n            return this._getCrossAxisMinSize();\n        }\n    }\n\n    _getMainAxisMinSize() {\n        return this._lineLayouter.mainAxisMinSize;\n    }\n\n    _getCrossAxisMinSize() {\n        return this._lineLayouter.crossAxisMinSize;\n    }\n\n    resizeMainAxis(size) {\n        if (this.mainAxisSize !== size) {\n            if (this.recalc > 0) {\n                this.performResizeMainAxis(size);\n            } else {\n                if (this._checkValidCacheMainAxisResize()) {\n                    this.mainAxisSize = size;\n                    this._fitCrossAxisSizeToContents();\n                } else {\n                    // Cache miss.\n                    this.item.enableLocalRecalcFlag();\n                    this.performResizeMainAxis(size);\n                }\n            }\n        }\n    }\n\n    _checkValidCacheMainAxisResize(size) {\n        const isFinalMainAxisSize = (size === this.targetMainAxisSize);\n        if (isFinalMainAxisSize) {\n            return true;\n        }\n        const canIgnoreCacheMiss = !this.isCrossAxisFitToContents();\n        if (canIgnoreCacheMiss) {\n            // Allow other main axis resizes and check if final resize matches the target main axis size\n            //  (ItemCoordinatesUpdater).\n            return true;\n        }\n        return false;\n    }\n\n    performResizeMainAxis(size) {\n        const isShrinking = (size < this.mainAxisSize);\n        this._shrunk = isShrinking;\n\n        this.mainAxisSize = size;\n\n        this._resizingMainAxis = true;\n        this._layoutAxes();\n        this._resizingMainAxis = false;\n    }\n\n    resizeCrossAxis(size) {\n        if (this.crossAxisSize !== size) {\n            if (this.recalc > 0) {\n                this.performResizeCrossAxis(size);\n            } else {\n                this.crossAxisSize = size;\n            }\n        }\n    }\n\n    performResizeCrossAxis(size) {\n        this.crossAxisSize = size;\n\n        this._resizingCrossAxis = true;\n        this._layoutCrossAxis();\n        this._resizingCrossAxis = false;\n    }\n\n    get targetMainAxisSize() {\n        return this._horizontal ? this.item.target.w : this.item.target.h;\n    }\n\n    get targetCrossAxisSize() {\n        return this._horizontal ? this.item.target.h : this.item.target.w;\n    }\n\n    getParentFlexContainer() {\n        return this.item.isFlexItemEnabled() ? this.item.flexItem.ctr : null;\n    }\n\n    _getHorizontalPadding() {\n        return FlexUtils.getTotalPadding(this.item, true);\n    }\n\n    _getVerticalPadding() {\n        return FlexUtils.getTotalPadding(this.item, false);\n    }\n\n    _getHorizontalPaddingOffset() {\n        return FlexUtils.getPaddingOffset(this.item, true);\n    }\n\n    _getVerticalPaddingOffset() {\n        return FlexUtils.getPaddingOffset(this.item, false);\n    }\n\n    _getMainAxisBasis() {\n        return FlexUtils.getRelAxisSize(this.item, this._horizontal);\n    }\n\n    _getCrossAxisBasis() {\n        return FlexUtils.getRelAxisSize(this.item, !this._horizontal);\n    }\n\n    get _horizontal() {\n        return this._flexContainer._horizontal;\n    }\n\n    get _reverse() {\n        return this._flexContainer._reverse;\n    }\n\n    get item() {\n        return this._flexContainer.item;\n    }\n\n    get items() {\n        return this.item.items;\n    }\n\n    get resizingMainAxis() {\n        return this._resizingMainAxis;\n    }\n\n    get resizingCrossAxis() {\n        return this._resizingCrossAxis;\n    }\n\n    get numberOfItems() {\n        return this.items.length;\n    }\n\n    get mainAxisSize() {\n        return FlexUtils.getAxisLayoutSize(this.item, this._horizontal);\n    }\n\n    get crossAxisSize() {\n        return FlexUtils.getAxisLayoutSize(this.item, !this._horizontal);\n    }\n\n    set mainAxisSize(v) {\n        FlexUtils.setAxisLayoutSize(this.item, this._horizontal, v);\n    }\n\n    set crossAxisSize(v) {\n        FlexUtils.setAxisLayoutSize(this.item, !this._horizontal, v);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Base from \"../tree/Base.mjs\";\nimport Layout from \"./layout/FlexLayout.mjs\";\n\nexport default class FlexContainer {\n\n\n    constructor(item) {\n        this._item = item;\n\n        this._layout = new Layout(this);\n        this._horizontal = true;\n        this._reverse = false;\n        this._wrap = false;\n        this._alignItems = 'stretch';\n        this._justifyContent = 'flex-start';\n        this._alignContent = 'flex-start';\n\n        this._paddingLeft = 0;\n        this._paddingTop = 0;\n        this._paddingRight = 0;\n        this._paddingBottom = 0;\n    }\n\n    get item() {\n        return this._item;\n    }\n\n    _changedDimensions() {\n        this._item.changedDimensions();\n    }\n\n    _changedContents() {\n        this._item.changedContents();\n    }\n\n    get direction() {\n        return (this._horizontal ? \"row\" : \"column\") + (this._reverse ? \"-reverse\" : \"\");\n    }\n\n    set direction(f) {\n        if (this.direction === f) return;\n\n        this._horizontal = (f === 'row' || f === 'row-reverse');\n        this._reverse = (f === 'row-reverse' || f === 'column-reverse');\n\n        this._changedContents();\n    }\n\n    set wrap(v) {\n        this._wrap = v;\n        this._changedContents();\n    }\n\n    get wrap() {\n        return this._wrap;\n    }\n\n    get alignItems() {\n        return this._alignItems;\n    }\n\n    set alignItems(v) {\n        if (this._alignItems === v) return;\n        if (FlexContainer.ALIGN_ITEMS.indexOf(v) === -1) {\n            throw new Error(\"Unknown alignItems, options: \" + FlexContainer.ALIGN_ITEMS.join(\",\"));\n        }\n        this._alignItems = v;\n\n        this._changedContents();\n    }\n\n    get alignContent() {\n        return this._alignContent;\n    }\n\n    set alignContent(v) {\n        if (this._alignContent === v) return;\n        if (FlexContainer.ALIGN_CONTENT.indexOf(v) === -1) {\n            throw new Error(\"Unknown alignContent, options: \" + FlexContainer.ALIGN_CONTENT.join(\",\"));\n        }\n        this._alignContent = v;\n\n        this._changedContents();\n    }\n\n    get justifyContent() {\n        return this._justifyContent;\n    }\n\n    set justifyContent(v) {\n        if (this._justifyContent === v) return;\n\n        if (FlexContainer.JUSTIFY_CONTENT.indexOf(v) === -1) {\n            throw new Error(\"Unknown justifyContent, options: \" + FlexContainer.JUSTIFY_CONTENT.join(\",\"));\n        }\n        this._justifyContent = v;\n\n        this._changedContents();\n    }\n\n    set padding(v) {\n        this.paddingLeft = v;\n        this.paddingTop = v;\n        this.paddingRight = v;\n        this.paddingBottom = v;\n    }\n\n    get padding() {\n        return this.paddingLeft;\n    }\n    \n    set paddingLeft(v) {\n        this._paddingLeft = v;\n        this._changedDimensions();\n    }\n    \n    get paddingLeft() {\n        return this._paddingLeft;\n    }\n\n    set paddingTop(v) {\n        this._paddingTop = v;\n        this._changedDimensions();\n    }\n\n    get paddingTop() {\n        return this._paddingTop;\n    }\n\n    set paddingRight(v) {\n        this._paddingRight = v;\n        this._changedDimensions();\n    }\n\n    get paddingRight() {\n        return this._paddingRight;\n    }\n\n    set paddingBottom(v) {\n        this._paddingBottom = v;\n        this._changedDimensions();\n    }\n\n    get paddingBottom() {\n        return this._paddingBottom;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n}\n\nFlexContainer.ALIGN_ITEMS = [\"flex-start\", \"flex-end\", \"center\", \"stretch\"];\nFlexContainer.ALIGN_CONTENT = [\"flex-start\", \"flex-end\", \"center\", \"space-between\", \"space-around\", \"space-evenly\", \"stretch\"];\nFlexContainer.JUSTIFY_CONTENT = [\"flex-start\", \"flex-end\", \"center\", \"space-between\", \"space-around\", \"space-evenly\"];\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Base from \"../tree/Base.mjs\";\nimport FlexUtils from \"./FlexUtils.mjs\";\nimport FlexContainer from \"./FlexContainer.mjs\";\n\nexport default class FlexItem {\n\n    constructor(item) {\n        this._ctr = null;\n        this._item = item;\n        this._grow = 0;\n        this._shrink = FlexItem.SHRINK_AUTO;\n        this._alignSelf = undefined;\n        this._minWidth = 0;\n        this._minHeight = 0;\n        this._maxWidth = 0;\n        this._maxHeight = 0;\n\n        this._marginLeft = 0;\n        this._marginTop = 0;\n        this._marginRight = 0;\n        this._marginBottom = 0;\n    }\n\n    get item() {\n        return this._item;\n    }\n\n    get grow() {\n        return this._grow;\n    }\n\n    set grow(v) {\n        if (this._grow === v) return;\n\n        this._grow = parseInt(v) || 0;\n\n        this._changed();\n    }\n\n    get shrink() {\n        if (this._shrink === FlexItem.SHRINK_AUTO) {\n            return this._getDefaultShrink();\n        }\n        return this._shrink;\n    }\n\n    _getDefaultShrink() {\n        if (this.item.isFlexEnabled()) {\n            return 1;\n        } else {\n            // All non-flex containers are absolutely positioned items with fixed dimensions, and by default not shrinkable.\n            return 0;\n        }\n    }\n\n    set shrink(v) {\n        if (this._shrink === v) return;\n\n        this._shrink = parseInt(v) || 0;\n\n        this._changed();\n    }\n\n    get alignSelf() {\n        return this._alignSelf;\n    }\n\n    set alignSelf(v) {\n        if (this._alignSelf === v) return;\n\n        if (v === undefined) {\n            this._alignSelf = undefined;\n        } else {\n            if (FlexContainer.ALIGN_ITEMS.indexOf(v) === -1) {\n                throw new Error(\"Unknown alignSelf, options: \" + FlexContainer.ALIGN_ITEMS.join(\",\"));\n            }\n            this._alignSelf = v;\n        }\n\n        this._changed();\n    }\n\n    get minWidth() {\n        return this._minWidth;\n    }\n\n    set minWidth(v) {\n        this._minWidth = Math.max(0, v);\n        this._item.changedDimensions(true, false);\n    }\n\n    get minHeight() {\n        return this._minHeight;\n    }\n\n    set minHeight(v) {\n        this._minHeight = Math.max(0, v);\n        this._item.changedDimensions(false, true);\n    }\n\n    get maxWidth() {\n        return this._maxWidth;\n    }\n\n    set maxWidth(v) {\n        this._maxWidth = Math.max(0, v);\n        this._item.changedDimensions(true, false);\n    }\n\n    get maxHeight() {\n        return this._maxHeight;\n    }\n\n    set maxHeight(v) {\n        this._maxHeight = Math.max(0, v);\n        this._item.changedDimensions(false, true);\n    }\n\n    /**\n     * @note margins behave slightly different than in HTML with regard to shrinking.\n     * In HTML, (outer) margins can be removed when shrinking. In this engine, they will not shrink at all.\n     */\n    set margin(v) {\n        this.marginLeft = v;\n        this.marginTop = v;\n        this.marginRight = v;\n        this.marginBottom = v;\n    }\n\n    get margin() {\n        return this.marginLeft;\n    }\n\n    set marginLeft(v) {\n        this._marginLeft = v;\n        this._changed();\n    }\n\n    get marginLeft() {\n        return this._marginLeft;\n    }\n\n    set marginTop(v) {\n        this._marginTop = v;\n        this._changed();\n    }\n\n    get marginTop() {\n        return this._marginTop;\n    }\n\n    set marginRight(v) {\n        this._marginRight = v;\n        this._changed();\n    }\n\n    get marginRight() {\n        return this._marginRight;\n    }\n\n    set marginBottom(v) {\n        this._marginBottom = v;\n        this._changed();\n    }\n\n    get marginBottom() {\n        return this._marginBottom;\n    }\n    \n    _changed() {\n        if (this.ctr) this.ctr._changedContents();\n    }\n\n    set ctr(v) {\n        this._ctr = v;\n    }\n\n    get ctr() {\n        return this._ctr;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n    _resetLayoutSize() {\n        this._resetHorizontalAxisLayoutSize();\n        this._resetVerticalAxisLayoutSize();\n    }\n\n    _resetCrossAxisLayoutSize() {\n        if (this.ctr._horizontal) {\n            this._resetVerticalAxisLayoutSize();\n        } else {\n            this._resetHorizontalAxisLayoutSize();\n        }\n    }\n\n    _resetHorizontalAxisLayoutSize() {\n        let w = FlexUtils.getRelAxisSize(this.item, true);\n        if (this._minWidth) {\n            w = Math.max(this._minWidth, w);\n        }\n        if (this._maxWidth) {\n            w = Math.min(this._maxWidth, w);\n        }\n        FlexUtils.setAxisLayoutSize(this.item, true, w);\n    }\n\n    _resetVerticalAxisLayoutSize() {\n        let h = FlexUtils.getRelAxisSize(this.item, false);\n        if (this._minHeight) {\n            h = Math.max(this._minHeight, h);\n        }\n        if (this._maxHeight) {\n            h = Math.min(this._maxHeight, h);\n        }\n        FlexUtils.setAxisLayoutSize(this.item, false, h);\n    }\n\n    _getCrossAxisMinSizeSetting() {\n        return this._getMinSizeSetting(!this.ctr._horizontal);\n    }\n\n    _getCrossAxisMaxSizeSetting() {\n        return this._getMaxSizeSetting(!this.ctr._horizontal);\n    }\n\n    _getMainAxisMaxSizeSetting() {\n        return this._getMaxSizeSetting(this.ctr._horizontal);\n    }\n\n    _getMinSizeSetting(horizontal) {\n        if (horizontal) {\n            return this._minWidth;\n        } else {\n            return this._minHeight;\n        }\n    }\n\n    _getMaxSizeSetting(horizontal) {\n        if (horizontal) {\n            return this._maxWidth;\n        } else {\n            return this._maxHeight;\n        }\n    }\n\n    _getMainAxisMinSize() {\n        return FlexUtils.getAxisMinSize(this.item, this.ctr._horizontal);\n    }\n\n    _getCrossAxisMinSize() {\n        return FlexUtils.getAxisMinSize(this.item, !this.ctr._horizontal);\n    }\n\n    _getMainAxisLayoutSize() {\n        return FlexUtils.getAxisLayoutSize(this.item, this.ctr._horizontal);\n    }\n\n    _getMainAxisLayoutPos() {\n        return FlexUtils.getAxisLayoutPos(this.item, this.ctr._horizontal);\n    }\n\n    _setMainAxisLayoutPos(pos) {\n        return FlexUtils.setAxisLayoutPos(this.item, this.ctr._horizontal, pos);\n    }\n\n    _setCrossAxisLayoutPos(pos) {\n        return FlexUtils.setAxisLayoutPos(this.item, !this.ctr._horizontal, pos);\n    }\n\n    _getCrossAxisLayoutSize() {\n        return FlexUtils.getAxisLayoutSize(this.item, !this.ctr._horizontal);\n    }\n\n    _resizeCrossAxis(size) {\n        return FlexUtils.resizeAxis(this.item, !this.ctr._horizontal, size);\n    }\n\n    _resizeMainAxis(size) {\n        return FlexUtils.resizeAxis(this.item, this.ctr._horizontal, size);\n    }\n\n    _getMainAxisPadding() {\n        return FlexUtils.getTotalPadding(this.item, this.ctr._horizontal);\n    }\n\n    _getCrossAxisPadding() {\n        return FlexUtils.getTotalPadding(this.item, !this.ctr._horizontal);\n    }\n\n    _getMainAxisMargin() {\n        return FlexUtils.getTotalMargin(this.item, this.ctr._horizontal);\n    }\n\n    _getCrossAxisMargin() {\n        return FlexUtils.getTotalMargin(this.item, !this.ctr._horizontal);\n    }\n\n    _getHorizontalMarginOffset() {\n        return FlexUtils.getMarginOffset(this.item, true);\n    }\n\n    _getVerticalMarginOffset() {\n        return FlexUtils.getMarginOffset(this.item, false);\n    }\n\n    _getMainAxisMinSizeWithPaddingAndMargin() {\n        return this._getMainAxisMinSize() + this._getMainAxisPadding() + this._getMainAxisMargin();\n    }\n\n    _getCrossAxisMinSizeWithPaddingAndMargin() {\n        return this._getCrossAxisMinSize() + this._getCrossAxisPadding() + this._getCrossAxisMargin();\n    }\n\n    _getMainAxisLayoutSizeWithPaddingAndMargin() {\n        return this._getMainAxisLayoutSize() + this._getMainAxisPadding() + this._getMainAxisMargin();\n    }\n\n    _getCrossAxisLayoutSizeWithPaddingAndMargin() {\n        return this._getCrossAxisLayoutSize() + this._getCrossAxisPadding() + this._getCrossAxisMargin();\n    }\n\n    _hasFixedCrossAxisSize() {\n        return !FlexUtils.isZeroAxisSize(this.item, !this.ctr._horizontal);\n    }\n\n    _hasRelCrossAxisSize() {\n        return !!(this.ctr._horizontal ? this.item.funcH : this.item.funcW);\n    }\n\n}\n\n\nFlexItem.SHRINK_AUTO = -1;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport FlexContainer from \"./FlexContainer.mjs\";\nimport FlexItem from \"./FlexItem.mjs\";\nimport FlexUtils from \"./FlexUtils.mjs\";\n\n/**\n * This is the connection between the render tree with the layout tree of this flex container/item.\n */\nexport default class FlexTarget {\n\n    constructor(target) {\n        this._target = target;\n\n        /**\n         * Possible values (only in case of container):\n         * bit 0: has changed or contains items with changes\n         * bit 1: width changed\n         * bit 2: height changed\n         */\n        this._recalc = 0;\n        \n        this._enabled = false;\n\n        this.x = 0;\n        this.y = 0;\n        this.w = 0;\n        this.h = 0;\n\n        this._originalX = 0;\n        this._originalY = 0;\n        this._originalWidth = 0;\n        this._originalHeight = 0;\n\n        this._flex = null;\n        this._flexItem = null;\n        this._flexItemDisabled = false;\n\n        this._items = null;\n    }\n\n    get flexLayout() {\n        return this.flex ? this.flex._layout : null;\n    }\n\n    layoutFlexTree() {\n        if (this.isFlexEnabled() && this.isChanged()) {\n            this.flexLayout.layoutTree();\n        }\n    }\n\n    get target() {\n        return this._target;\n    }\n\n    get flex() {\n        return this._flex;\n    }\n\n    set flex(v) {\n        if (!v) {\n            if (this.isFlexEnabled()) {\n                this._disableFlex();\n            }\n        } else {\n            if (!this.isFlexEnabled()) {\n                this._enableFlex();\n            }\n            this._flex.patch(v);\n        }\n    }\n\n    get flexItem() {\n        if (this._flexItemDisabled) {\n            return false;\n        }\n        this._ensureFlexItem();\n        return this._flexItem;\n    }\n\n    set flexItem(v) {\n        if (v === false) {\n            if (!this._flexItemDisabled) {\n                const parent = this.flexParent;\n                this._flexItemDisabled = true;\n                this._checkEnabled();\n                if (parent) {\n                    parent._clearFlexItemsCache();\n                    parent.changedContents();\n                }\n            }\n        } else {\n            this._ensureFlexItem();\n\n            this._flexItem.patch(v);\n\n            if (this._flexItemDisabled) {\n                this._flexItemDisabled = false;\n                this._checkEnabled();\n                const parent = this.flexParent;\n                if (parent) {\n                    parent._clearFlexItemsCache();\n                    parent.changedContents();\n                }\n            }\n        }\n    }\n\n    _enableFlex() {\n        this._flex = new FlexContainer(this);\n        this._checkEnabled();\n        this.changedDimensions();\n        this._enableChildrenAsFlexItems();\n    }\n\n    _disableFlex() {\n        this.changedDimensions();\n        this._flex = null;\n        this._checkEnabled();\n        this._disableChildrenAsFlexItems();\n    }\n\n    _enableChildrenAsFlexItems() {\n        const children = this._target._children;\n        if (children) {\n            for (let i = 0, n = children.length; i < n; i++) {\n                const child = children[i];\n                child.layout._enableFlexItem();\n            }\n        }\n    }\n\n    _disableChildrenAsFlexItems() {\n        const children = this._target._children;\n        if (children) {\n            for (let i = 0, n = children.length; i < n; i++) {\n                const child = children[i];\n                child.layout._disableFlexItem();\n            }\n        }\n    }\n\n    _enableFlexItem() {\n        this._ensureFlexItem();\n        if (this._target._parent) {\n            const flexParent = this._target._parent._layout;\n            this._flexItem.ctr = flexParent._flex;\n            flexParent.changedContents();\n        }\n        this._checkEnabled();\n    }\n\n    _disableFlexItem() {\n        if (this._flexItem) {\n            this._flexItem.ctr = null;\n        }\n\n        // We keep the flexItem object because it may contain custom settings.\n        this._checkEnabled();\n\n        // Offsets have been changed. We can't recover them, so we'll just clear them instead.\n        this._resetOffsets();\n    }\n\n    _resetOffsets() {\n        this.x = 0;\n        this.y = 0;\n    }\n\n    _ensureFlexItem() {\n        if (!this._flexItem) {\n            this._flexItem = new FlexItem(this);\n        }\n    }\n\n    _checkEnabled() {\n        const enabled = this.isEnabled();\n        if (this._enabled !== enabled) {\n            if (enabled) {\n                this._enable();\n            } else {\n                this._disable();\n            }\n            this._enabled = enabled;\n        }\n    }\n    \n    _enable() {\n        this._setupTargetForFlex();\n        this._target.enableFlexLayout();\n    }\n\n    _disable() {\n        this._restoreTargetToNonFlex();\n        this._target.disableFlexLayout();\n    }\n\n    isEnabled() {\n        return this.isFlexEnabled() || this.isFlexItemEnabled();\n    }\n\n    isFlexEnabled() {\n        return this._flex !== null;\n    }\n\n    isFlexItemEnabled() {\n        return this.flexParent !== null;\n    }\n\n    _restoreTargetToNonFlex() {\n        const target = this._target;\n        target.x = this._originalX;\n        target.y = this._originalY;\n        target.setDimensions(this._originalWidth, this._originalHeight);\n    }\n\n    _setupTargetForFlex() {\n        const target = this._target;\n        this._originalX = target._x;\n        this._originalY = target._y;\n        this._originalWidth = target._w;\n        this._originalHeight = target._h;\n    }\n    \n    setParent(from, to) {\n        if (from && from.isFlexContainer()) {\n            from._layout._changedChildren();\n        }\n\n        if (to && to.isFlexContainer()) {\n            this._enableFlexItem();\n            to._layout._changedChildren();\n        }\n        this._checkEnabled();\n    }\n\n    get flexParent() {\n        if (this._flexItemDisabled) {\n            return null;\n        }\n\n        const parent = this._target._parent;\n        if (parent && parent.isFlexContainer()) {\n            return parent._layout;\n        }\n        return null;\n    }\n\n    setVisible(v) {\n        const parent = this.flexParent;\n        if (parent) {\n            parent._changedChildren();\n        }\n    }\n\n    get items() {\n        if (!this._items) {\n            this._items = this._getFlexItems();\n        }\n        return this._items;\n    }\n\n    _getFlexItems() {\n        const items = [];\n        const children = this._target._children;\n        if (children) {\n            for (let i = 0, n = children.length; i < n; i++) {\n                const item = children[i];\n                if (item.visible) {\n                    if (item.isFlexItem()) {\n                        items.push(item.layout);\n                    }\n                }\n            }\n        }\n        return items;\n    }\n\n    _changedChildren() {\n        this._clearFlexItemsCache();\n        this.changedContents();\n    }\n\n    _clearFlexItemsCache() {\n        this._items = null;\n    }\n\n    setLayout(x, y, w, h) {\n        let originalX = this._originalX;\n        let originalY = this._originalY;\n        if (this.funcX) {\n            originalX = this.funcX(FlexUtils.getParentAxisSizeWithPadding(this, true));\n        }\n        if (this.funcY) {\n            originalY = this.funcY(FlexUtils.getParentAxisSizeWithPadding(this, false));\n        }\n\n        if (this.isFlexItemEnabled()) {\n            this.target.setLayout(x + originalX, y + originalY, w, h);\n        } else {\n            // Reuse the x,y 'settings'.\n            this.target.setLayout(originalX, originalY, w, h);\n        }\n    }\n\n    changedDimensions(changeWidth = true, changeHeight = true) {\n        this._updateRecalc(changeWidth, changeHeight);\n    }\n\n    changedContents() {\n        this._updateRecalc();\n    }\n\n    forceLayout() {\n        this._updateRecalc();\n    }\n\n    isChanged() {\n        return this._recalc > 0;\n    }\n\n    _updateRecalc(changeExternalWidth = false, changeExternalHeight = false) {\n        if (this.isFlexEnabled()) {\n            const layout = this._flex._layout;\n\n            // When something internal changes, it can have effect on the external dimensions.\n            changeExternalWidth = changeExternalWidth || layout.isAxisFitToContents(true);\n            changeExternalHeight = changeExternalHeight || layout.isAxisFitToContents(false);\n        }\n\n        const recalc = 1 + (changeExternalWidth ? 2 : 0) + (changeExternalHeight ? 4 : 0);\n        const newRecalcFlags = this.getNewRecalcFlags(recalc);\n        this._recalc |= recalc;\n        if (newRecalcFlags > 1) {\n            if (this.flexParent) {\n                this.flexParent._updateRecalcBottomUp(recalc);\n            } else {\n                this._target.triggerLayout();\n            }\n        } else {\n            this._target.triggerLayout();\n        }\n    }\n\n    getNewRecalcFlags(flags) {\n        return (7 - this._recalc) & flags;\n    }\n\n    _updateRecalcBottomUp(childRecalc) {\n        const newRecalc = this._getRecalcFromChangedChildRecalc(childRecalc);\n        const newRecalcFlags = this.getNewRecalcFlags(newRecalc);\n        this._recalc |= newRecalc;\n        if (newRecalcFlags > 1) {\n            const flexParent = this.flexParent;\n            if (flexParent) {\n                flexParent._updateRecalcBottomUp(newRecalc);\n            } else {\n                this._target.triggerLayout();\n            }\n        } else {\n            this._target.triggerLayout();\n        }\n    }\n\n    _getRecalcFromChangedChildRecalc(childRecalc) {\n        const layout = this._flex._layout;\n\n        const mainAxisRecalcFlag = layout._horizontal ? 1 : 2;\n        const crossAxisRecalcFlag = layout._horizontal ? 2 : 1;\n\n        const crossAxisDimensionsChangedInChild = (childRecalc & crossAxisRecalcFlag);\n        if (!crossAxisDimensionsChangedInChild) {\n            const mainAxisDimensionsChangedInChild = (childRecalc & mainAxisRecalcFlag);\n            if (mainAxisDimensionsChangedInChild) {\n                const mainAxisIsWrapping = layout.isWrapping();\n                if (mainAxisIsWrapping) {\n                    const crossAxisIsFitToContents = layout.isCrossAxisFitToContents();\n                    if (crossAxisIsFitToContents) {\n                        // Special case: due to wrapping, the cross axis size may be changed.\n                        childRecalc += crossAxisRecalcFlag;\n                    }\n                }\n            }\n        }\n\n        let isWidthDynamic = layout.isAxisFitToContents(true);\n        let isHeightDynamic = layout.isAxisFitToContents(false);\n\n        if (layout.shrunk) {\n            // If during previous layout this container was 'shrunk', any changes may change the 'min axis size' of the\n            // contents, leading to a different axis size on this container even when it was not 'fit to contents'.\n            if (layout._horizontal) {\n                isWidthDynamic = true;\n            } else {\n                isHeightDynamic = true;\n            }\n        }\n\n        const localRecalc = 1 + (isWidthDynamic ? 2 : 0) + (isHeightDynamic ? 4 : 0);\n\n        const combinedRecalc = childRecalc & localRecalc;\n        return combinedRecalc;\n    }\n\n    get recalc() {\n        return this._recalc;\n    }\n\n    clearRecalcFlag() {\n        this._recalc = 0;\n    }\n\n    enableLocalRecalcFlag() {\n        this._recalc = 1;\n    }\n\n    get originalX() {\n        return this._originalX;\n    }\n\n    setOriginalXWithoutUpdatingLayout(v) {\n        this._originalX = v;\n    }\n\n    get originalY() {\n        return this._originalY;\n    }\n\n    setOriginalYWithoutUpdatingLayout(v) {\n        this._originalY = v;\n    }\n\n    get originalWidth() {\n        return this._originalWidth;\n    }\n\n    set originalWidth(v) {\n        if (this._originalWidth !== v) {\n            this._originalWidth = v;\n            this.changedDimensions(true, false);\n        }\n    }\n\n    get originalHeight() {\n        return this._originalHeight;\n    }\n\n    set originalHeight(v) {\n        if (this._originalHeight !== v) {\n            this._originalHeight = v;\n            this.changedDimensions(false, true);\n        }\n    }\n\n    get funcX() {\n        return this._target.funcX;\n    }\n\n    get funcY() {\n        return this._target.funcY;\n    }\n\n    get funcW() {\n        return this._target.funcW;\n    }\n\n    get funcH() {\n        return this._target.funcH;\n    }\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class TextureSource {\n\n    constructor(manager, loader = null) {\n        this.id = TextureSource.id++;\n\n        this.manager = manager;\n\n        this.stage = manager.stage;\n\n        /**\n         * All enabled textures (textures that are used by visible elements).\n         * @type {Set<Texture>}\n         */\n        this.textures = new Set();\n\n        /**\n         * The number of active textures (textures that have at least one active element).\n         * @type {number}\n         * @private\n         */\n        this._activeTextureCount = 0;\n\n        /**\n         * The factory for the source of this texture.\n         * @type {Function}\n         */\n        this.loader = loader;\n\n        /**\n         * Identifier for reuse.\n         * @type {String}\n         */\n        this.lookupId = null;\n\n        /**\n         * If set, this.is called when the texture source is no longer displayed (this.components.size becomes 0).\n         * @type {Function}\n         */\n        this._cancelCb = null;\n\n        /**\n         * Loading since timestamp in millis.\n         * @type {number}\n         */\n        this.loadingSince = 0;\n\n        this.w = 0;\n        this.h = 0;\n\n        this._nativeTexture = null;\n\n        /**\n         * If true, then this.texture source is never freed from memory during garbage collection.\n         * @type {boolean}\n         */\n        this.permanent = false;\n\n        /**\n         * Sub-object with texture-specific rendering information.\n         * For images, contains the src property, for texts, contains handy rendering information.\n         * @type {Object}\n         */\n        this.renderInfo = null;\n\n        /**\n         * Generated for 'renderToTexture'.\n         * @type {boolean}\n         * @private\n         */\n        this._isResultTexture = !this.loader;\n\n        /**\n         * Contains the load error, if the texture source could previously not be loaded.\n         * @type {object}\n         * @private\n         */\n        this._loadError = null;\n\n        /**\n         *  Hold a reference to the javascript variable which contains the texture, this is not required for WebGL in WebBrowsers but is required for Spark runtime.\n         * @type {object}\n         * @private\n         */\n        this._imageRef = null;\n\n\n        /**\n         * Track whether or not there is an alpha channel in this source\n         * @type {boolean}\n         * @private\n         */\n         this._hasAlpha = false;\n    }\n\n    get hasAlpha() {\n        return this._hasAlpha;\n    }\n\n    get loadError() {\n        return this._loadError;\n    }\n\n    addTexture(v) {\n        if (!this.textures.has(v)) {\n            this.textures.add(v);\n        }\n    }\n\n    removeTexture(v) {\n        this.textures.delete(v);\n    }\n\n    incActiveTextureCount() {\n        this._activeTextureCount++;\n        if (this._activeTextureCount === 1) {\n            this.becomesUsed();\n        }\n    }\n\n    decActiveTextureCount() {\n        this._activeTextureCount--;\n        if (this._activeTextureCount === 0) {\n            this.becomesUnused();\n        }\n    }\n\n    get isResultTexture() {\n        return this._isResultTexture;\n    }\n\n    set isResultTexture(v) {\n        this._isResultTexture = v;\n    }\n\n    forEachEnabledElement(cb) {\n        this.textures.forEach(texture => {\n            texture.elements.forEach(cb);\n        });\n    }\n\n    hasEnabledElements() {\n        return this.textures.size > 0;\n    }\n\n    forEachActiveElement(cb) {\n        this.textures.forEach(texture => {\n            texture.elements.forEach(element => {\n                if (element.active) {\n                    cb(element);\n                }\n            });\n        });\n    }\n\n    getRenderWidth() {\n        return this.w;\n    }\n\n    getRenderHeight() {\n        return this.h;\n    }\n\n    allowCleanup() {\n        return !this.permanent && !this.isUsed();\n    }\n\n    becomesUsed() {\n        // Even while the texture is being loaded, make sure it is on the lookup map so that others can reuse it.\n        this.load();\n    }\n\n    becomesUnused() {\n        this.cancel();\n    }\n\n    cancel() {\n        if (this.isLoading()) {\n            if (this._cancelCb) {\n                this._cancelCb(this);\n\n                // Clear callback to avoid memory leaks.\n                this._cancelCb = null;\n            }\n            this.loadingSince = 0;\n        }\n    }\n\n    isLoaded() {\n        return !!this._nativeTexture;\n    }\n\n    isLoading() {\n        return (this.loadingSince > 0);\n    }\n\n    isError() {\n        return !!this._loadError;\n    }\n\n    reload() {\n        this.free();\n        if (this.isUsed()) {\n            this.load();\n        }\n    }\n\n    load(forceSync = false) {\n        // From the moment of loading (when a texture source becomes used by active elements)\n        if (this.isResultTexture) {\n            // Element result texture source, for which the loading is managed by the core.\n            return;\n        }\n\n        if (!this._nativeTexture && !this.isLoading()) {\n            this.loadingSince = (new Date()).getTime();\n            this._cancelCb = this.loader((err, options) => {\n                // Ignore loads that come in after a cancel.\n                if (this.isLoading()) {\n                    // Clear callback to avoid memory leaks.\n                    this._cancelCb = null;\n\n                    if (this.manager.stage.destroyed) {\n                        // Ignore async load when stage is destroyed.\n                        return;\n                    }\n                    if (err) {\n                        // Emit txError.\n                        this.onError(err);\n                    } else if (options && options.source) {\n                        if (!this.stage.isUpdatingFrame() && !forceSync && (options.throttle !== false)) {\n                            const textureThrottler = this.stage.textureThrottler;\n                            this._cancelCb = textureThrottler.genericCancelCb;\n                            textureThrottler.add(this, options);\n                        } else {\n                            this.processLoadedSource(options);\n                        }\n                    }\n                }\n            }, this);\n        }\n    }\n\n    processLoadedSource(options) {\n        this.loadingSince = 0;\n        this.setSource(options);\n    }\n\n    setSource(options) {\n        const source = options.source;\n\n        this._hasAlpha = (options ? (options.hasAlpha || false) : false);\n        this.w = source.width || (options && options.w) || 0;\n        this.h = source.height || (options && options.h) || 0;\n\n        if (options && options.renderInfo) {\n            // Assign to id in cache so that it can be reused.\n            this.renderInfo = options.renderInfo;\n        }\n\n        this.permanent = !!options.permanent;\n\n        if (options && options.imageRef)\n            this._imageRef = options.imageRef;\n        if (options && options.flipTextureY) {\n            this._flipTextureY = options.flipTextureY;\n        } else {\n            this._flipTextureY = false;\n        }\n\n        if (this._isNativeTexture(source)) {\n            // Texture managed by caller.\n            this._nativeTexture = source;\n\n            this.w = this.w || source.w;\n            this.h = this.h || source.h;\n\n            // WebGLTexture objects are by default;\n            this.permanent = options.hasOwnProperty('permanent') ? options.permanent : true;\n        } else {\n            this.manager.uploadTextureSource(this, options);\n        }\n\n        // Must be cleared when reload is succesful.\n        this._loadError = null;\n\n        this.onLoad();\n    }\n\n    isUsed() {\n        return this._activeTextureCount > 0;\n    }\n\n    onLoad() {\n        if (this.isUsed()) {\n            this.textures.forEach(texture => {\n                texture.onLoad();\n            });\n        }\n    }\n\n    forceRenderUpdate() {\n        // Userland should call this method after changing the nativeTexture manually outside of the framework\n        //  (using tex[Sub]Image2d for example).\n\n        if (this._nativeTexture) {\n            // Change 'update' flag. This is currently not used by the framework but is handy in userland.\n            this._nativeTexture.update = this.stage.frameCounter;\n        }\n\n        this.forEachActiveElement(function (element) {\n            element.forceRenderUpdate();\n        });\n\n    }\n\n    forceUpdateRenderCoords() {\n        this.forEachActiveElement(function (element) {\n            element._updateTextureCoords();\n        });\n    }\n\n    get nativeTexture() {\n        return this._nativeTexture;\n    }\n\n    clearNativeTexture() {\n        this._nativeTexture = null;\n        //also clear the reference to the texture variable.\n        this._imageRef = null;\n    }\n\n    /**\n     * Used for result textures.\n     */\n    replaceNativeTexture(newNativeTexture, w, h) {\n        let prevNativeTexture = this._nativeTexture;\n        // Loaded by core.\n        this._nativeTexture = newNativeTexture;\n        this.w = w;\n        this.h = h;\n\n        if (!prevNativeTexture && this._nativeTexture) {\n            this.forEachActiveElement(element => element.onTextureSourceLoaded());\n        }\n\n        if (!this._nativeTexture) {\n            this.forEachActiveElement(element => element._setDisplayedTexture(null));\n        }\n\n        // Dimensions must be updated also on enabled elements, as it may force it to go within bounds.\n        this.forEachEnabledElement(element => element._updateDimensions());\n\n        // Notice that the sprite map must never contain render textures.\n    }\n\n    onError(e) {\n        this._loadError = e;\n        this.loadingSince = 0;\n        console.error('[Lightning] texture load error', e, this.lookupId);\n        this.forEachActiveElement(element => element.onTextureSourceLoadError(e));\n    }\n\n    free() {\n        if (this.isLoaded()) {\n            this.manager.freeTextureSource(this);\n        }\n    }\n\n    _isNativeTexture(source) {\n        if (Utils.isNode) {\n            return source.constructor.name === \"WebGLTexture\";\n        }\n\n        if ('WebGLTexture' in window) {\n            return source instanceof WebGLTexture;\n        }\n\n        return false;\n    }\n\n}\n\nTextureSource.prototype.isTextureSource = true;\n\nTextureSource.id = 1;\n\nimport Utils from \"./Utils.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport TextureSource from '../TextureSource.mjs';\n\nexport default class ElementTexturizer {\n\n    constructor(elementCore) {\n\n        this._element = elementCore.element;\n        this._core = elementCore;\n\n        this.ctx = this._core.ctx;\n\n        this._enabled = false;\n        this.lazy = false;\n        this._colorize = false;\n\n        this._renderTexture = null;\n\n        this._renderTextureReused = false;\n\n        this._resultTextureSource = null;\n\n        this._renderOffscreen = false;\n\n        this.empty = false;\n    }\n\n    get enabled() {\n        return this._enabled;\n    }\n\n    set enabled(v) {\n        this._enabled = v;\n        this._core.updateRenderToTextureEnabled();\n    }\n\n    get renderOffscreen() {\n        return this._renderOffscreen;\n    }\n\n    set renderOffscreen(v) {\n        this._renderOffscreen = v;\n        this._core.setHasRenderUpdates(1);\n\n        // This enforces rechecking the 'within bounds'.\n        this._core._setRecalc(6);\n    }\n\n    get colorize() {\n        return this._colorize;\n    }\n\n    set colorize(v) {\n        if (this._colorize !== v) {\n            this._colorize = v;\n\n            // Only affects the finally drawn quad.\n            this._core.setHasRenderUpdates(1);\n        }\n    }\n\n    _getTextureSource() {\n        if (!this._resultTextureSource) {\n            this._resultTextureSource = new TextureSource(this._element.stage.textureManager);\n            this.updateResultTexture();\n        }\n        return this._resultTextureSource;\n    }\n\n    hasResultTexture() {\n        return !!this._resultTextureSource;\n    }\n\n    resultTextureInUse() {\n        return this._resultTextureSource && this._resultTextureSource.hasEnabledElements();\n    }\n\n    updateResultTexture() {\n        let resultTexture = this.getResultTexture();\n        if (this._resultTextureSource) {\n            if (this._resultTextureSource.nativeTexture !== resultTexture) {\n                let w = resultTexture ? resultTexture.w : 0;\n                let h = resultTexture ? resultTexture.h : 0;\n                this._resultTextureSource.replaceNativeTexture(resultTexture, w, h);\n            }\n\n            // Texture will be updated: all elements using the source need to be updated as well.\n            this._resultTextureSource.forEachEnabledElement(element => {\n                element._updateDimensions();\n                element.core.setHasRenderUpdates(3);\n            });\n        }\n    }\n\n    mustRenderToTexture() {\n        // Check if we must really render as texture.\n        if (this._enabled && !this.lazy) {\n            return true;\n        } else if (this._enabled && this.lazy && this._core._hasRenderUpdates < 3) {\n            // Static-only: if renderToTexture did not need to update during last drawn frame, generate it as a cache.\n            return true;\n        }\n        return false;\n    }\n\n    deactivate() {\n        this.release();\n    }\n\n    get renderTextureReused() {\n        return this._renderTextureReused;\n    }\n\n    release() {\n        this.releaseRenderTexture();\n    }\n\n    releaseRenderTexture() {\n        if (this._renderTexture) {\n            if (!this._renderTextureReused) {\n                this.ctx.releaseRenderTexture(this._renderTexture);\n            }\n            this._renderTexture = null;\n            this._renderTextureReused = false;\n            this.updateResultTexture();\n        }\n    }\n\n    // Reuses the specified texture as the render texture (in ancestor).\n    reuseTextureAsRenderTexture(nativeTexture) {\n        if (this._renderTexture !== nativeTexture) {\n            this.releaseRenderTexture();\n            this._renderTexture = nativeTexture;\n            this._renderTextureReused = true;\n        }\n    }\n\n    hasRenderTexture() {\n        return !!this._renderTexture;\n    }\n\n    getRenderTexture() {\n        if (!this._renderTexture) {\n            this._renderTexture = this.ctx.allocateRenderTexture(this._core._w, this._core._h);\n            this._renderTextureReused = false;\n        }\n        return this._renderTexture;\n    }\n\n    getResultTexture() {\n        return this._renderTexture;\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport FlexTarget from \"../../flex/FlexTarget.mjs\";\n\nexport default class ElementCore {\n\n    constructor(element) {\n        this._element = element;\n\n        this.ctx = element.stage.ctx;\n\n        // The memory layout of the internal variables is affected by their position in the constructor.\n        // It boosts performance to order them by usage of cpu-heavy functions (renderSimple and update).\n\n        this._recalc = 0;\n\n        this._parent = null;\n\n        this._onUpdate = null;\n\n        this._pRecalc = 0;\n\n        this._worldContext = new ElementCoreContext();\n\n        this._hasUpdates = false;\n\n        this._localAlpha = 1;\n\n        this._onAfterCalcs = null;\n\n        this._onAfterUpdate = null;\n\n        // All local translation/transform updates: directly propagated from x/y/w/h/scale/whatever.\n        this._localPx = 0;\n        this._localPy = 0;\n\n        this._localTa = 1;\n        this._localTb = 0;\n        this._localTc = 0;\n        this._localTd = 1;\n\n        this._isComplex = false;\n\n        this._dimsUnknown = false;\n\n        this._clipping = false;\n\n        // Used by both update and render.\n        this._zSort = false;\n\n        this._outOfBounds = 0;\n\n        /**\n         * The texture source to be displayed.\n         * @type {TextureSource}\n         */\n        this._displayedTextureSource = null;\n\n        this._zContextUsage = 0;\n\n        this._children = null;\n\n        this._hasRenderUpdates = 0;\n\n        this._zIndexedChildren = null;\n\n        this._renderContext = this._worldContext;\n\n        this.renderState = this.ctx.renderState;\n\n        this._scissor = null;\n\n        // The ancestor ElementCore that owns the inherited shader. Null if none is active (default shader).\n        this._shaderOwner = null;\n\n\n        this._updateTreeOrder = 0;\n\n        this._colorUl = this._colorUr = this._colorBl = this._colorBr = 0xFFFFFFFF;\n\n        this._x = 0;\n        this._y = 0;\n        this._w = 0;\n        this._h = 0;\n\n        this._optFlags = 0;\n        this._funcX = null;\n        this._funcY = null;\n        this._funcW = null;\n        this._funcH = null;\n\n        this._scaleX = 1;\n        this._scaleY = 1;\n        this._pivotX = 0.5;\n        this._pivotY = 0.5;\n        this._mountX = 0;\n        this._mountY = 0;\n        this._rotation = 0;\n\n        this._alpha = 1;\n        this._visible = true;\n\n        this._ulx = 0;\n        this._uly = 0;\n        this._brx = 1;\n        this._bry = 1;\n\n        this._zIndex = 0;\n        this._forceZIndexContext = false;\n        this._zParent = null;\n\n        this._isRoot = false;\n\n        /**\n         * Iff true, during zSort, this element should be 're-sorted' because either:\n         * - zIndex did chang\n         * - zParent did change\n         * - element was moved in the render tree\n         * @type {boolean}\n         */\n        this._zIndexResort = false;\n\n        this._shader = null;\n\n        // Element is rendered on another texture.\n        this._renderToTextureEnabled = false;\n\n        this._texturizer = null;\n\n        this._useRenderToTexture = false;\n\n        this._boundsMargin = null;\n\n        this._recBoundsMargin = null;\n\n        this._withinBoundsMargin = false;\n\n        this._viewport = null;\n\n        this._clipbox = true;\n\n        this.render = this._renderSimple;\n\n        this._layout = null;\n    }\n\n    get offsetX() {\n        if (this._funcX) {\n            return this._funcX;\n        } else {\n            if (this.hasFlexLayout()) {\n                return this._layout.originalX;\n            } else {\n                return this._x;\n            }\n        }\n    }\n\n    set offsetX(v) {\n        if (Utils.isFunction(v)) {\n            this.funcX = v;\n        } else {\n            this._disableFuncX();\n            if (this.hasFlexLayout()) {\n                this.x += (v - this._layout.originalX);\n                this._layout.setOriginalXWithoutUpdatingLayout(v);\n            } else {\n                this.x = v;\n            }\n        }\n    }\n\n    get x() {\n        return this._x;\n    }\n\n    set x(v) {\n        if (v !== this._x) {\n            this._updateLocalTranslateDelta(v - this._x, 0);\n            this._x = v;\n        }\n    }\n\n    get funcX() {\n        return (this._optFlags & 1 ? this._funcX : null);\n    }\n\n    set funcX(v) {\n        if (this._funcX !== v) {\n            this._optFlags |= 1;\n            this._funcX = v;\n            if (this.hasFlexLayout()) {\n                this._layout.setOriginalXWithoutUpdatingLayout(0);\n                this.layout.forceLayout();\n            } else {\n                this._x = 0;\n                this._triggerRecalcTranslate();\n            }\n        }\n    }\n\n    _disableFuncX() {\n        this._optFlags = this._optFlags & (0xFFFF - 1);\n        this._funcX = null;\n    }\n\n    get offsetY() {\n        if (this._funcY) {\n            return this._funcY;\n        } else {\n            if (this.hasFlexLayout()) {\n                return this._layout.originalY;\n            } else {\n                return this._y;\n            }\n        }\n    }\n\n    set offsetY(v) {\n        if (Utils.isFunction(v)) {\n            this.funcY = v;\n        } else {\n            this._disableFuncY();\n            if (this.hasFlexLayout()) {\n                this.y += (v - this._layout.originalY);\n                this._layout.setOriginalYWithoutUpdatingLayout(v);\n            } else {\n                this.y = v;\n            }\n        }\n    }\n\n    get y() {\n        return this._y;\n    }\n\n    set y(v) {\n        if (v !== this._y) {\n            this._updateLocalTranslateDelta(0, v - this._y);\n            this._y = v;\n        }\n    }\n\n    get funcY() {\n        return (this._optFlags & 2 ? this._funcY : null);\n    }\n\n    set funcY(v) {\n        if (this._funcY !== v) {\n            this._optFlags |= 2;\n            this._funcY = v;\n            if (this.hasFlexLayout()) {\n                this._layout.setOriginalYWithoutUpdatingLayout(0);\n                this.layout.forceLayout();\n            } else {\n                this._y = 0;\n                this._triggerRecalcTranslate();\n            }\n        }\n    }\n\n    _disableFuncY() {\n        this._optFlags = this._optFlags & (0xFFFF - 2);\n        this._funcY = null;\n    }\n\n    get funcW() {\n        return (this._optFlags & 4 ? this._funcW : null);\n    }\n\n    set funcW(v) {\n        if (this._funcW !== v) {\n            this._optFlags |= 4;\n            this._funcW = v;\n            if (this.hasFlexLayout()) {\n                this._layout._originalWidth = 0;\n                this.layout.changedDimensions(true, false);\n            } else {\n                this._w = 0;\n                this._triggerRecalcTranslate();\n            }\n        }\n    }\n\n    disableFuncW() {\n        this._optFlags = this._optFlags & (0xFFFF - 4);\n        this._funcW = null;\n    }\n\n    get funcH() {\n        return (this._optFlags & 8 ? this._funcH : null);\n    }\n\n    set funcH(v) {\n        if (this._funcH !== v) {\n            this._optFlags |= 8;\n            this._funcH = v;\n            if (this.hasFlexLayout()) {\n                this._layout._originalHeight = 0;\n                this.layout.changedDimensions(false, true);\n            } else {\n                this._h = 0;\n                this._triggerRecalcTranslate();\n            }\n        }\n    }\n\n    disableFuncH() {\n        this._optFlags = this._optFlags & (0xFFFF - 8);\n        this._funcH = null;\n    }\n\n    get w() {\n        return this._w;\n    }\n\n    getRenderWidth() {\n        if (this.hasFlexLayout()) {\n            return this._layout.originalWidth;\n        } else {\n            return this._w;\n        }\n    }\n\n    get h() {\n        return this._h;\n    }\n\n    getRenderHeight() {\n        if (this.hasFlexLayout()) {\n            return this._layout.originalHeight;\n        } else {\n            return this._h;\n        }\n    }\n\n    get scaleX() {\n        return this._scaleX;\n    }\n\n    set scaleX(v) {\n        if (this._scaleX !== v) {\n            this._scaleX = v;\n            this._updateLocalTransform();\n        }\n    }\n\n    get scaleY() {\n        return this._scaleY;\n    }\n\n    set scaleY(v) {\n        if (this._scaleY !== v) {\n            this._scaleY = v;\n            this._updateLocalTransform();\n        }\n    }\n\n    get scale() {\n        return this.scaleX;\n    }\n\n    set scale(v) {\n        if (this._scaleX !== v || this._scaleY !== v) {\n            this._scaleX = v;\n            this._scaleY = v;\n            this._updateLocalTransform();\n        }\n    }\n\n    get pivotX() {\n        return this._pivotX;\n    }\n\n    set pivotX(v) {\n        if (this._pivotX !== v) {\n            this._pivotX = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get pivotY() {\n        return this._pivotY;\n    }\n\n    set pivotY(v) {\n        if (this._pivotY !== v) {\n            this._pivotY = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get pivot() {\n        return this._pivotX;\n    }\n\n    set pivot(v) {\n        if (this._pivotX !== v || this._pivotY !== v) {\n            this._pivotX = v;\n            this._pivotY = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get mountX() {\n        return this._mountX;\n    }\n\n    set mountX(v) {\n        if (this._mountX !== v) {\n            this._mountX = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get mountY() {\n        return this._mountY;\n    }\n\n    set mountY(v) {\n        if (this._mountY !== v) {\n            this._mountY = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get mount() {\n        return this._mountX;\n    }\n\n    set mount(v) {\n        if (this._mountX !== v || this._mountY !== v) {\n            this._mountX = v;\n            this._mountY = v;\n            this._updateLocalTranslate();\n        }\n    }\n\n    get rotation() {\n        return this._rotation;\n    }\n\n    set rotation(v) {\n        if (this._rotation !== v) {\n            this._rotation = v;\n            this._updateLocalTransform();\n        }\n    }\n\n    get alpha() {\n        return this._alpha;\n    }\n\n    set alpha(v) {\n        // Account for rounding errors.\n        v = (v > 1 ? 1 : (v < 1e-14 ? 0 : v));\n        if (this._alpha !== v) {\n            let prev = this._alpha;\n            this._alpha = v;\n            this._updateLocalAlpha();\n            if ((prev === 0) !== (v === 0)) {\n                this._element._updateEnabledFlag();\n            }\n        }\n    }\n\n    get visible() {\n        return this._visible;\n    }\n\n    set visible(v) {\n        if (this._visible !== v) {\n            this._visible = v;\n            this._updateLocalAlpha();\n            this._element._updateEnabledFlag();\n\n            if (this.hasFlexLayout()) {\n                this.layout.setVisible(v);\n            }\n        }\n    }\n\n    _updateLocalTransform() {\n        if (this._rotation !== 0 && this._rotation % (2 * Math.PI)) {\n            // check to see if the rotation is the same as the previous render. This means we only need to use sin and cos when rotation actually changes\n            let _sr = Math.sin(this._rotation);\n            let _cr = Math.cos(this._rotation);\n\n            this._setLocalTransform(\n                _cr * this._scaleX,\n                -_sr * this._scaleY,\n                _sr * this._scaleX,\n                _cr * this._scaleY\n            );\n        } else {\n            this._setLocalTransform(\n                this._scaleX,\n                0,\n                0,\n                this._scaleY\n            );\n        }\n        this._updateLocalTranslate();\n    };\n\n    _updateLocalTranslate() {\n        this._recalcLocalTranslate();\n        this._triggerRecalcTranslate();\n    };\n\n    _recalcLocalTranslate() {\n        let pivotXMul = this._pivotX * this._w;\n        let pivotYMul = this._pivotY * this._h;\n        let px = this._x - (pivotXMul * this._localTa + pivotYMul * this._localTb) + pivotXMul;\n        let py = this._y - (pivotXMul * this._localTc + pivotYMul * this._localTd) + pivotYMul;\n        px -= this._mountX * this._w;\n        py -= this._mountY * this._h;\n        this._localPx = px;\n        this._localPy = py;\n    }\n\n    _updateLocalTranslateDelta(dx, dy) {\n        this._addLocalTranslate(dx, dy);\n    };\n\n    _updateLocalAlpha() {\n        this._setLocalAlpha(this._visible ? this._alpha : 0);\n    };\n\n    /**\n     * @param {number} type\n     * 0: no updates\n     * 1: re-invoke shader\n     * 3: re-create render texture and re-invoke shader\n     */\n    setHasRenderUpdates(type) {\n        if (this._worldContext.alpha) {\n            // Ignore if 'world invisible'. Render updates will be reset to 3 for every element that becomes visible.\n            let p = this;\n            p._hasRenderUpdates = Math.max(type, p._hasRenderUpdates);\n            while ((p = p._parent) && (p._hasRenderUpdates !== 3)) {\n                p._hasRenderUpdates = 3;\n            }\n        }\n    }\n\n    /**\n     * @param {Number} type\n     *   1: alpha\n     *   2: translate\n     *   4: transform\n     * 128: becomes visible\n     * 256: flex layout updated\n     */\n    _setRecalc(type) {\n        this._recalc |= type;\n\n        this._setHasUpdates();\n\n        // Any changes in descendants should trigger texture updates.\n        if (this._parent) {\n            this._parent.setHasRenderUpdates(3);\n        }\n    }\n\n    _setHasUpdates() {\n        let p = this;\n        while (p && !p._hasUpdates) {\n            p._hasUpdates = true;\n            p = p._parent;\n        }\n    }\n\n    getParent() {\n        return this._parent;\n    }\n\n    setParent(parent) {\n        if (parent !== this._parent) {\n            let prevIsZContext = this.isZContext();\n            let prevParent = this._parent;\n            this._parent = parent;\n\n            // Notify flex layout engine.\n            if (this._layout || (parent && parent.isFlexContainer())) {\n                this.layout.setParent(prevParent, parent);\n            }\n\n            if (prevParent) {\n                // When elements are deleted, the render texture must be re-rendered.\n                prevParent.setHasRenderUpdates(3);\n            }\n\n            this._setRecalc(1 + 2 + 4);\n\n            if (this._parent) {\n                // Force parent to propagate hasUpdates flag.\n                this._parent._setHasUpdates();\n            }\n\n            if (this._zIndex === 0) {\n                this.setZParent(parent);\n            } else {\n                this.setZParent(parent ? parent.findZContext() : null);\n            }\n\n            if (prevIsZContext !== this.isZContext()) {\n                if (!this.isZContext()) {\n                    this.disableZContext();\n                } else {\n                    this.enableZContext(prevParent.findZContext());\n                }\n            }\n\n            // Tree order did change: even if zParent stays the same, we must resort.\n            this._zIndexResort = true;\n            if (this._zParent) {\n                this._zParent.enableZSort();\n            }\n\n            if (!this._shader) {\n                let newShaderOwner = parent && !parent._renderToTextureEnabled ? parent._shaderOwner : null;\n                if (newShaderOwner !== this._shaderOwner) {\n                    this.setHasRenderUpdates(1);\n                    this._setShaderOwnerRecursive(newShaderOwner);\n                }\n            }\n        }\n    };\n\n    enableZSort(force = false) {\n        if (!this._zSort && this._zContextUsage > 0) {\n            this._zSort = true;\n            if (force) {\n                // ZSort must be done, even if this element is invisible.\n                // This is done to prevent memory leaks when removing element from inactive render branches.\n                this.ctx.forceZSort(this);\n            }\n        }\n    }\n\n    addChildAt(index, child) {\n        if (!this._children) this._children = [];\n        this._children.splice(index, 0, child);\n        child.setParent(this);\n    };\n\n    setChildAt(index, child) {\n        if (!this._children) this._children = [];\n        this._children[index].setParent(null);\n        this._children[index] = child;\n        child.setParent(this);\n    }\n\n    removeChildAt(index) {\n        let child = this._children[index];\n        this._children.splice(index, 1);\n        child.setParent(null);\n    };\n\n    removeChildren() {\n        if (this._children) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                this._children[i].setParent(null);\n            }\n\n            this._children.splice(0);\n\n            if (this._zIndexedChildren) {\n                this._zIndexedChildren.splice(0);\n            }\n        }\n    };\n\n    syncChildren(removed, added, order) {\n        this._children = order;\n        for (let i = 0, n = removed.length; i < n; i++) {\n            removed[i].setParent(null);\n        }\n        for (let i = 0, n = added.length; i < n; i++) {\n            added[i].setParent(this);\n        }\n    }\n\n    moveChild(fromIndex, toIndex) {\n        let c = this._children[fromIndex];\n        this._children.splice(fromIndex, 1);\n        this._children.splice(toIndex, 0, c);\n\n        // Tree order changed: must resort!;\n        this._zIndexResort = true;\n        if (this._zParent) {\n            this._zParent.enableZSort();\n        }\n    }\n\n    _setLocalTransform(a, b, c, d) {\n        this._setRecalc(4);\n        this._localTa = a;\n        this._localTb = b;\n        this._localTc = c;\n        this._localTd = d;\n\n        // We also regard negative scaling as a complex case, so that we can optimize the non-complex case better.\n        this._isComplex = (b !== 0) || (c !== 0) || (a < 0) || (d < 0);\n    };\n\n    _addLocalTranslate(dx, dy) {\n        this._localPx += dx;\n        this._localPy += dy;\n        this._triggerRecalcTranslate();\n    }\n\n    _setLocalAlpha(a) {\n        if (!this._worldContext.alpha && ((this._parent && this._parent._worldContext.alpha) && a)) {\n            // Element is becoming visible. We need to force update.\n            this._setRecalc(1 + 128);\n        } else {\n            this._setRecalc(1);\n        }\n\n        if (a < 1e-14) {\n            // Tiny rounding errors may cause failing visibility tests.\n            a = 0;\n        }\n\n        this._localAlpha = a;\n    };\n\n    setDimensions(w, h, isEstimate = this._dimsUnknown) {\n        // In case of an estimation, the update loop should perform different bound checks.\n        this._dimsUnknown = isEstimate;\n\n        if (this.hasFlexLayout()) {\n            this._layout.originalWidth = w;\n            this._layout.originalHeight = h;\n        } else {\n            if (this._w !== w || this._h !== h) {\n                this._updateDimensions(w, h);\n                return true;\n            }\n        }\n        return false;\n    };\n\n    _updateDimensions(w, h) {\n        if (this._w !== w || this._h !== h) {\n            this._w = w;\n            this._h = h;\n\n            this._triggerRecalcTranslate();\n\n            if (this._texturizer) {\n                this._texturizer.releaseRenderTexture();\n                this._texturizer.updateResultTexture();\n            }\n            // Due to width/height change: update the translation vector.\n            this._updateLocalTranslate();\n        }\n    }\n\n    setTextureCoords(ulx, uly, brx, bry) {\n        this.setHasRenderUpdates(3);\n\n        this._ulx = ulx;\n        this._uly = uly;\n        this._brx = brx;\n        this._bry = bry;\n    };\n\n    get displayedTextureSource() {\n        return this._displayedTextureSource;\n    }\n\n    setDisplayedTextureSource(textureSource) {\n        this.setHasRenderUpdates(3);\n        this._displayedTextureSource = textureSource;\n    };\n\n    get isRoot() {\n        return this._isRoot;\n    }\n\n    setAsRoot() {\n        // Use parent dummy.\n        this._parent = new ElementCore(this._element);\n\n        // After setting root, make sure it's updated.\n        this._parent._hasRenderUpdates = 3;\n        this._parent._hasUpdates = true;\n\n        // Root is, and will always be, the primary zContext.\n        this._isRoot = true;\n\n        this.ctx.root = this;\n\n        // Set scissor area of 'fake parent' to stage's viewport.\n        this._parent._viewport = [0, 0, this.ctx.stage.coordsWidth, this.ctx.stage.coordsHeight];\n        this._parent._scissor = this._parent._viewport;\n\n        // When recBoundsMargin is null, the defaults are used (100 for all sides).\n        this._parent._recBoundsMargin = null;\n\n        this._setRecalc(1 + 2 + 4);\n    };\n\n    isAncestorOf(c) {\n        let p = c;\n        while (p = p._parent) {\n            if (this === p) {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    isZContext() {\n        return (this._forceZIndexContext || this._renderToTextureEnabled || this._zIndex !== 0 || this._isRoot || !this._parent);\n    };\n\n    findZContext() {\n        if (this.isZContext()) {\n            return this;\n        } else {\n            return this._parent.findZContext();\n        }\n    };\n\n    setZParent(newZParent) {\n        if (this._zParent !== newZParent) {\n            if (this._zParent !== null) {\n                if (this._zIndex !== 0) {\n                    this._zParent.decZContextUsage();\n                }\n\n                // We must filter out this item upon the next resort.\n                this._zParent.enableZSort();\n            }\n\n            if (newZParent !== null) {\n                let hadZContextUsage = (newZParent._zContextUsage > 0);\n\n                // @pre: new parent's children array has already been modified.\n                if (this._zIndex !== 0) {\n                    newZParent.incZContextUsage();\n                }\n\n                if (newZParent._zContextUsage > 0) {\n                    if (!hadZContextUsage && (this._parent === newZParent)) {\n                        // This child was already in the children list.\n                        // Do not add double.\n                    } else {\n                        // Add new child to array.\n                        newZParent._zIndexedChildren.push(this);\n                    }\n\n                    // Order should be checked.\n                    newZParent.enableZSort();\n                }\n            }\n\n            this._zParent = newZParent;\n\n            // Newly added element must be marked for resort.\n            this._zIndexResort = true;\n        }\n    };\n\n    incZContextUsage() {\n        this._zContextUsage++;\n        if (this._zContextUsage === 1) {\n            if (!this._zIndexedChildren) {\n                this._zIndexedChildren = [];\n            }\n            if (this._children) {\n                // Copy.\n                for (let i = 0, n = this._children.length; i < n; i++) {\n                    this._zIndexedChildren.push(this._children[i]);\n                }\n                // Initially, children are already sorted properly (tree order).\n                this._zSort = false;\n            }\n        }\n    };\n\n    decZContextUsage() {\n        this._zContextUsage--;\n        if (this._zContextUsage === 0) {\n            this._zSort = false;\n            this._zIndexedChildren.splice(0);\n        }\n    };\n\n    get zIndex() {\n        return this._zIndex;\n    }\n\n    set zIndex(zIndex) {\n        if (this._zIndex !== zIndex) {\n            this.setHasRenderUpdates(1);\n\n            let newZParent = this._zParent;\n\n            let prevIsZContext = this.isZContext();\n            if (zIndex === 0 && this._zIndex !== 0) {\n                if (this._parent === this._zParent) {\n                    if (this._zParent) {\n                        this._zParent.decZContextUsage();\n                    }\n                } else {\n                    newZParent = this._parent;\n                }\n            } else if (zIndex !== 0 && this._zIndex === 0) {\n                newZParent = this._parent ? this._parent.findZContext() : null;\n                if (newZParent === this._zParent) {\n                    if (this._zParent) {\n                        this._zParent.incZContextUsage();\n                        this._zParent.enableZSort();\n                    }\n                }\n            } else if (zIndex !== this._zIndex) {\n                if (this._zParent && this._zParent._zContextUsage) {\n                    this._zParent.enableZSort();\n                }\n            }\n\n            if (newZParent !== this._zParent) {\n                this.setZParent(null);\n            }\n\n            this._zIndex = zIndex;\n\n            if (newZParent !== this._zParent) {\n                this.setZParent(newZParent);\n            }\n\n            if (prevIsZContext !== this.isZContext()) {\n                if (!this.isZContext()) {\n                    this.disableZContext();\n                } else {\n                    this.enableZContext(this._parent.findZContext());\n                }\n            }\n\n            // Make sure that resort is done.\n            this._zIndexResort = true;\n            if (this._zParent) {\n                this._zParent.enableZSort();\n            }\n        }\n    };\n\n    get forceZIndexContext() {\n        return this._forceZIndexContext;\n    }\n\n    set forceZIndexContext(v) {\n        this.setHasRenderUpdates(1);\n\n        let prevIsZContext = this.isZContext();\n        this._forceZIndexContext = v;\n\n        if (prevIsZContext !== this.isZContext()) {\n            if (!this.isZContext()) {\n                this.disableZContext();\n            } else {\n                this.enableZContext(this._parent.findZContext());\n            }\n        }\n    };\n\n    enableZContext(prevZContext) {\n        if (prevZContext && prevZContext._zContextUsage > 0) {\n            // Transfer from upper z context to this z context.\n            const results = this._getZIndexedDescs();\n            results.forEach((c) => {\n                if (this.isAncestorOf(c) && c._zIndex !== 0) {\n                    c.setZParent(this);\n                }\n            });\n        }\n    }\n\n    _getZIndexedDescs() {\n        const results = [];\n        if (this._children) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                this._children[i]._getZIndexedDescsRec(results);\n            }\n        }\n        return results;\n    }\n\n    _getZIndexedDescsRec(results) {\n        if (this._zIndex) {\n            results.push(this);\n        } else if (this._children && !this.isZContext()) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                this._children[i]._getZIndexedDescsRec(results);\n            }\n        }\n    }\n\n    disableZContext() {\n        // Transfer from this z context to upper z context.\n        if (this._zContextUsage > 0) {\n            let newZParent = this._parent.findZContext();\n\n            // Make sure that z-indexed children are up to date (old ones removed).\n            if (this._zSort) {\n                this.sortZIndexedChildren();\n            }\n\n            this._zIndexedChildren.slice().forEach(function (c) {\n                if (c._zIndex !== 0) {\n                    c.setZParent(newZParent);\n                }\n            });\n        }\n    };\n\n    get colorUl() {\n        return this._colorUl;\n    }\n\n    set colorUl(color) {\n        if (this._colorUl !== color) {\n            this.setHasRenderUpdates(this._displayedTextureSource ? 3 : 1);\n            this._colorUl = color;\n        }\n    }\n\n    get colorUr() {\n        return this._colorUr;\n    }\n\n    set colorUr(color) {\n        if (this._colorUr !== color) {\n            this.setHasRenderUpdates(this._displayedTextureSource ? 3 : 1);\n            this._colorUr = color;\n        }\n    };\n\n    get colorBl() {\n        return this._colorBl;\n    }\n\n    set colorBl(color) {\n        if (this._colorBl !== color) {\n            this.setHasRenderUpdates(this._displayedTextureSource ? 3 : 1);\n            this._colorBl = color;\n        }\n    };\n\n    get colorBr() {\n        return this._colorBr;\n    }\n\n    set colorBr(color) {\n        if (this._colorBr !== color) {\n            this.setHasRenderUpdates(this._displayedTextureSource ? 3 : 1);\n            this._colorBr = color;\n        }\n    };\n\n\n    set onUpdate(f) {\n        this._onUpdate = f;\n        this._setRecalc(7);\n    }\n\n    set onAfterUpdate(f) {\n        this._onAfterUpdate = f;\n        this._setRecalc(7);\n    }\n\n    set onAfterCalcs(f) {\n        this._onAfterCalcs = f;\n        this._setRecalc(7);\n    }\n\n    get shader() {\n        return this._shader;\n    }\n\n    set shader(v) {\n        this.setHasRenderUpdates(1);\n\n        let prevShader = this._shader;\n        this._shader = v;\n        if (!v && prevShader) {\n            // Disabled shader.\n            let newShaderOwner = (this._parent && !this._parent._renderToTextureEnabled ? this._parent._shaderOwner : null);\n            this._setShaderOwnerRecursive(newShaderOwner);\n        } else if (v) {\n            // Enabled shader.\n            this._setShaderOwnerRecursive(this);\n        }\n    }\n\n    get activeShader() {\n        return this._shaderOwner ? this._shaderOwner.shader : this.renderState.defaultShader;\n    }\n\n    get activeShaderOwner() {\n        return this._shaderOwner;\n    }\n\n    get clipping() {\n        return this._clipping;\n    }\n\n    set clipping(v) {\n        if (this._clipping !== v) {\n            this._clipping = v;\n\n            // Force update of scissor by updating translate.\n            // Alpha must also be updated because the scissor area may have been empty.\n            this._setRecalc(1 + 2);\n        }\n    }\n\n    get clipbox() {\n        return this._clipbox;\n    }\n\n    set clipbox(v) {\n        // In case of out-of-bounds element, all children will also be ignored.\n        // It will save us from executing the update/render loops for those.\n        // The optimization will be used immediately during the next frame.\n        this._clipbox = v;\n    }\n\n    _setShaderOwnerRecursive(elementCore) {\n        this._shaderOwner = elementCore;\n\n        if (this._children && !this._renderToTextureEnabled) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                let c = this._children[i];\n                if (!c._shader) {\n                    c._setShaderOwnerRecursive(elementCore);\n                    c._hasRenderUpdates = 3;\n                }\n            }\n        }\n    };\n\n    _setShaderOwnerChildrenRecursive(elementCore) {\n        if (this._children) {\n            for (let i = 0, n = this._children.length; i < n; i++) {\n                let c = this._children[i];\n                if (!c._shader) {\n                    c._setShaderOwnerRecursive(elementCore);\n                    c._hasRenderUpdates = 3;\n                }\n            }\n        }\n    };\n\n    _hasRenderContext() {\n        return this._renderContext !== this._worldContext;\n    }\n\n    get renderContext() {\n        return this._renderContext;\n    }\n\n    updateRenderToTextureEnabled() {\n        // Enforce texturizer initialisation.\n        let v = this.texturizer._enabled;\n\n        if (v) {\n            this._enableRenderToTexture();\n        } else {\n            this._disableRenderToTexture();\n            this._texturizer.releaseRenderTexture();\n        }\n    }\n\n    _enableRenderToTexture() {\n        if (!this._renderToTextureEnabled) {\n            let prevIsZContext = this.isZContext();\n\n            this._renderToTextureEnabled = true;\n\n            this._renderContext = new ElementCoreContext();\n\n            // If render to texture is active, a new shader context is started.\n            this._setShaderOwnerChildrenRecursive(null);\n\n            if (!prevIsZContext) {\n                // Render context forces z context.\n                this.enableZContext(this._parent ? this._parent.findZContext() : null);\n            }\n\n            this.setHasRenderUpdates(3);\n\n            // Make sure that the render coordinates get updated.\n            this._setRecalc(7);\n\n            this.render = this._renderAdvanced;\n        }\n    }\n\n    _disableRenderToTexture() {\n        if (this._renderToTextureEnabled) {\n            this._renderToTextureEnabled = false;\n\n            this._setShaderOwnerChildrenRecursive(this._shaderOwner);\n\n            this._renderContext = this._worldContext;\n\n            if (!this.isZContext()) {\n                this.disableZContext();\n            }\n\n            // Make sure that the render coordinates get updated.\n            this._setRecalc(7);\n\n            this.setHasRenderUpdates(3);\n\n            this.render = this._renderSimple;\n        }\n    }\n\n    isWhite() {\n        return (this._colorUl === 0xFFFFFFFF) && (this._colorUr === 0xFFFFFFFF) && (this._colorBl === 0xFFFFFFFF) && (this._colorBr === 0xFFFFFFFF);\n    }\n\n    hasSimpleTexCoords() {\n        return (this._ulx === 0) && (this._uly === 0) && (this._brx === 1) && (this._bry === 1);\n    }\n\n    _stashTexCoords() {\n        this._stashedTexCoords = [this._ulx, this._uly, this._brx, this._bry];\n        this._ulx = 0;\n        this._uly = 0;\n        this._brx = 1;\n        this._bry = 1;\n    }\n\n    _unstashTexCoords() {\n        this._ulx = this._stashedTexCoords[0];\n        this._uly = this._stashedTexCoords[1];\n        this._brx = this._stashedTexCoords[2];\n        this._bry = this._stashedTexCoords[3];\n        this._stashedTexCoords = null;\n    }\n\n    _stashColors() {\n        this._stashedColors = [this._colorUl, this._colorUr, this._colorBr, this._colorBl];\n        this._colorUl = 0xFFFFFFFF;\n        this._colorUr = 0xFFFFFFFF;\n        this._colorBr = 0xFFFFFFFF;\n        this._colorBl = 0xFFFFFFFF;\n    }\n\n    _unstashColors() {\n        this._colorUl = this._stashedColors[0];\n        this._colorUr = this._stashedColors[1];\n        this._colorBr = this._stashedColors[2];\n        this._colorBl = this._stashedColors[3];\n        this._stashedColors = null;\n    }\n\n    isVisible() {\n        return (this._localAlpha > 1e-14);\n    };\n\n    get outOfBounds() {\n        return this._outOfBounds;\n    }\n\n    set boundsMargin(v) {\n\n        /**\n         *  null: inherit from parent.\n         *  number[4]: specific margins: left, top, right, bottom.\n         */\n        this._boundsMargin = v ? v.slice() : null;\n\n        // We force recalc in order to set all boundsMargin recursively during the next update.\n        this._triggerRecalcTranslate();\n    }\n\n    get boundsMargin() {\n        return this._boundsMargin;\n    }\n\n    update() {\n        this._recalc |= this._parent._pRecalc;\n\n        if (this._layout && this._layout.isEnabled()) {\n            if (this._recalc & 256) {\n                this._layout.layoutFlexTree();\n            }\n        } else if ((this._recalc & 2) && this._optFlags) {\n            this._applyRelativeDimFuncs();\n        }\n\n        if (this._onUpdate) {\n            // Block all 'upwards' updates when changing things in this branch.\n            this._hasUpdates = true;\n            this._onUpdate(this.element, this);\n        }\n\n        const pw = this._parent._worldContext;\n        let w = this._worldContext;\n        const visible = (pw.alpha && this._localAlpha);\n\n        /**\n         * We must update if:\n         * - branch contains updates (even when invisible because it may contain z-indexed descendants)\n         * - there are (inherited) updates and this branch is visible\n         * - this branch becomes invisible (descs may be z-indexed so we must update all alpha values)\n         */\n        if (this._hasUpdates || (this._recalc && visible) || (w.alpha && !visible)) {\n            let recalc = this._recalc;\n\n            // Update world coords/alpha.\n            if (recalc & 1) {\n                if (!w.alpha && visible) {\n                    // Becomes visible.\n                    this._hasRenderUpdates = 3;\n                }\n                w.alpha = pw.alpha * this._localAlpha;\n\n                if (w.alpha < 1e-14) {\n                    // Tiny rounding errors may cause failing visibility tests.\n                    w.alpha = 0;\n                }\n            }\n\n            if (recalc & 6) {\n                w.px = pw.px + this._localPx * pw.ta;\n                w.py = pw.py + this._localPy * pw.td;\n                if (pw.tb !== 0) w.px += this._localPy * pw.tb;\n                if (pw.tc !== 0) w.py += this._localPx * pw.tc;\n            }\n\n            if (recalc & 4) {\n                w.ta = this._localTa * pw.ta;\n                w.tb = this._localTd * pw.tb;\n                w.tc = this._localTa * pw.tc;\n                w.td = this._localTd * pw.td;\n\n                if (this._isComplex) {\n                    w.ta += this._localTc * pw.tb;\n                    w.tb += this._localTb * pw.ta;\n                    w.tc += this._localTc * pw.td;\n                    w.td += this._localTb * pw.tc;\n                }\n            }\n\n            // Update render coords/alpha.\n            const pr = this._parent._renderContext;\n            if (this._parent._hasRenderContext()) {\n                const init = this._renderContext === this._worldContext;\n                if (init) {\n                    // First render context build: make sure that it is fully initialized correctly.\n                    // Otherwise, if we get into bounds later, the render context would not be initialized correctly.\n                    this._renderContext = new ElementCoreContext();\n                }\n\n                const r = this._renderContext;\n\n                // Update world coords/alpha.\n                if (init || (recalc & 1)) {\n                    r.alpha = pr.alpha * this._localAlpha;\n\n                    if (r.alpha < 1e-14) {\n                        r.alpha = 0;\n                    }\n                }\n\n                if (init || (recalc & 6)) {\n                    r.px = pr.px + this._localPx * pr.ta;\n                    r.py = pr.py + this._localPy * pr.td;\n                    if (pr.tb !== 0) r.px += this._localPy * pr.tb;\n                    if (pr.tc !== 0) r.py += this._localPx * pr.tc;\n                }\n\n                if (init) {\n                    // We set the recalc toggle, because we must make sure that the scissor is updated.\n                    recalc |= 2;\n                }\n\n                if (init || (recalc & 4)) {\n                    r.ta = this._localTa * pr.ta;\n                    r.tb = this._localTd * pr.tb;\n                    r.tc = this._localTa * pr.tc;\n                    r.td = this._localTd * pr.td;\n\n                    if (this._isComplex) {\n                        r.ta += this._localTc * pr.tb;\n                        r.tb += this._localTb * pr.ta;\n                        r.tc += this._localTc * pr.td;\n                        r.td += this._localTb * pr.tc;\n                    }\n                }\n            } else {\n                this._renderContext = this._worldContext;\n            }\n\n            if (this.ctx.updateTreeOrder === -1) {\n                this.ctx.updateTreeOrder = this._updateTreeOrder + 1;\n            } else {\n                this._updateTreeOrder = this.ctx.updateTreeOrder++;\n            }\n\n            // Determine whether we must use a 'renderTexture'.\n            const useRenderToTexture = this._renderToTextureEnabled && this._texturizer.mustRenderToTexture();\n            if (this._useRenderToTexture !== useRenderToTexture) {\n                // Coords must be changed.\n                this._recalc |= 2 + 4;\n\n                // Scissor may change: force update.\n                recalc |= 2;\n\n                if (!this._useRenderToTexture) {\n                    // We must release the texture.\n                    this._texturizer.release();\n                }\n            }\n            this._useRenderToTexture = useRenderToTexture;\n\n            const r = this._renderContext;\n\n            const bboxW = this._dimsUnknown ? 2048 : this._w;\n            const bboxH = this._dimsUnknown ? 2048 : this._h;\n\n            // Calculate a bbox for this element.\n            let sx, sy, ex, ey;\n            const rComplex = (r.tb !== 0) || (r.tc !== 0) || (r.ta < 0) || (r.td < 0);\n            if (rComplex) {\n                sx = Math.min(0, bboxW * r.ta, bboxW * r.ta + bboxH * r.tb, bboxH * r.tb) + r.px;\n                ex = Math.max(0, bboxW * r.ta, bboxW * r.ta + bboxH * r.tb, bboxH * r.tb) + r.px;\n                sy = Math.min(0, bboxW * r.tc, bboxW * r.tc + bboxH * r.td, bboxH * r.td) + r.py;\n                ey = Math.max(0, bboxW * r.tc, bboxW * r.tc + bboxH * r.td, bboxH * r.td) + r.py;\n            } else {\n                sx = r.px;\n                ex = r.px + r.ta * bboxW;\n                sy = r.py;\n                ey = r.py + r.td * bboxH;\n            }\n\n            if (this._dimsUnknown && (rComplex || this._localTa < 1 || this._localTb < 1)) {\n                // If we are dealing with a non-identity matrix, we must extend the bbox so that withinBounds and\n                //  scissors will include the complete range of (positive) dimensions up to ,lh.\n                const nx = this._x * pr.ta + this._y * pr.tb + pr.px;\n                const ny = this._x * pr.tc + this._y * pr.td + pr.py;\n                if (nx < sx) sx = nx;\n                if (ny < sy) sy = ny;\n                if (nx > ex) ex = nx;\n                if (ny > ey) ey = ny;\n            }\n\n            if (recalc & 6 || !this._scissor /* initial */) {\n                // Determine whether we must 'clip'.\n                if (this._clipping && r.isSquare()) {\n                    // If the parent renders to a texture, it's scissor should be ignored;\n                    const area = this._parent._useRenderToTexture ? this._parent._viewport : this._parent._scissor;\n                    if (area) {\n                        // Merge scissor areas.\n                        const lx = Math.max(area[0], sx);\n                        const ly = Math.max(area[1], sy);\n                        this._scissor = [\n                            lx,\n                            ly,\n                            Math.min(area[2] + area[0], ex) - lx,\n                            Math.min(area[3] + area[1], ey) - ly\n                        ];\n                    } else {\n                        this._scissor = [sx, sy, ex - sx, ey - sy];\n                    }\n                } else {\n                    // No clipping: reuse parent scissor.\n                    this._scissor = this._parent._useRenderToTexture ? this._parent._viewport : this._parent._scissor;\n                }\n            }\n\n            // Calculate the outOfBounds margin.\n            if (this._boundsMargin) {\n                this._recBoundsMargin = this._boundsMargin;\n            } else {\n                this._recBoundsMargin = this._parent._recBoundsMargin;\n            }\n\n            if (this._onAfterCalcs) {\n                // After calcs may change render coords, scissor and/or recBoundsMargin.\n                if (this._onAfterCalcs(this.element)) {\n                    // Recalculate bbox.\n                    if (rComplex) {\n                        sx = Math.min(0, bboxW * r.ta, bboxW * r.ta + bboxH * r.tb, bboxH * r.tb) + r.px;\n                        ex = Math.max(0, bboxW * r.ta, bboxW * r.ta + bboxH * r.tb, bboxH * r.tb) + r.px;\n                        sy = Math.min(0, bboxW * r.tc, bboxW * r.tc + bboxH * r.td, bboxH * r.td) + r.py;\n                        ey = Math.max(0, bboxW * r.tc, bboxW * r.tc + bboxH * r.td, bboxH * r.td) + r.py;\n                    } else {\n                        sx = r.px;\n                        ex = r.px + r.ta * bboxW;\n                        sy = r.py;\n                        ey = r.py + r.td * bboxH;\n                    }\n\n                    if (this._dimsUnknown && (rComplex || this._localTa < 1 || this._localTb < 1)) {\n                        const nx = this._x * pr.ta + this._y * pr.tb + pr.px;\n                        const ny = this._x * pr.tc + this._y * pr.td + pr.py;\n                        if (nx < sx) sx = nx;\n                        if (ny < sy) sy = ny;\n                        if (nx > ex) ex = nx;\n                        if (ny > ey) ey = ny;\n                    }\n                }\n            }\n\n            if (this._parent._outOfBounds === 2) {\n                // Inherit parent out of boundsness.\n                this._outOfBounds = 2;\n\n                if (this._withinBoundsMargin) {\n                    this._withinBoundsMargin = false;\n                    this.element._disableWithinBoundsMargin();\n                }\n            } else {\n                if (recalc & 6) {\n                    // Recheck if element is out-of-bounds (all settings that affect this should enable recalc bit 2 or 4).\n                    this._outOfBounds = 0;\n                    let withinMargin = true;\n\n                    // Offscreens are always rendered as long as the parent is within bounds.\n                    if (!this._renderToTextureEnabled || !this._texturizer || !this._texturizer.renderOffscreen) {\n                        if (this._scissor && (this._scissor[2] <= 0 || this._scissor[3] <= 0)) {\n                            // Empty scissor area.\n                            this._outOfBounds = 2;\n                        } else {\n                            // Use bbox to check out-of-boundness.\n                            if ((this._scissor[0] > ex) ||\n                                (this._scissor[1] > ey) ||\n                                (sx > (this._scissor[0] + this._scissor[2])) ||\n                                (sy > (this._scissor[1] + this._scissor[3]))\n                            ) {\n                                this._outOfBounds = 1;\n                            }\n\n                            if (this._outOfBounds) {\n                                if (this._clipping || this._useRenderToTexture || (this._clipbox && (bboxW && bboxH))) {\n                                    this._outOfBounds = 2;\n                                }\n                            }\n                        }\n\n                        withinMargin = (this._outOfBounds === 0);\n                        if (!withinMargin) {\n                            // Re-test, now with margins.\n                            if (this._recBoundsMargin) {\n                                withinMargin = !((ex < this._scissor[0] - this._recBoundsMargin[2]) ||\n                                    (ey < this._scissor[1] - this._recBoundsMargin[3]) ||\n                                    (sx > this._scissor[0] + this._scissor[2] + this._recBoundsMargin[0]) ||\n                                    (sy > this._scissor[1] + this._scissor[3] + this._recBoundsMargin[1]));\n                            } else {\n                                withinMargin = !((ex < this._scissor[0] - 100) ||\n                                    (ey < this._scissor[1] - 100) ||\n                                    (sx > this._scissor[0] + this._scissor[2] + 100) ||\n                                    (sy > this._scissor[1] + this._scissor[3] + 100));\n                            }\n                            if (withinMargin && this._outOfBounds === 2) {\n                                // Children must be visited because they may contain elements that are within margin, so must be visible.\n                                this._outOfBounds = 1;\n                            }\n                        }\n                    }\n\n                    if (this._withinBoundsMargin !== withinMargin) {\n                        this._withinBoundsMargin = withinMargin;\n\n                        if (this._withinBoundsMargin) {\n                            // This may update things (txLoaded events) in the element itself, but also in descendants and ancestors.\n\n                            // Changes in ancestors should be executed during the next call of the stage update. But we must\n                            // take care that the _recalc and _hasUpdates flags are properly registered. That's why we clear\n                            // both before entering the children, and use _pRecalc to transfer inherited updates instead of\n                            // _recalc directly.\n\n                            // Changes in descendants are automatically executed within the current update loop, though we must\n                            // take care to not update the hasUpdates flag unnecessarily in ancestors. We achieve this by making\n                            // sure that the hasUpdates flag of this element is turned on, which blocks it for ancestors.\n                            this._hasUpdates = true;\n\n                            const recalc = this._recalc;\n                            this._recalc = 0;\n                            this.element._enableWithinBoundsMargin();\n\n                            if (this._recalc) {\n                                // This element needs to be re-updated now, because we want the dimensions (and other changes) to be updated.\n                                return this.update();\n                            }\n\n                            this._recalc = recalc;\n                        } else {\n                            this.element._disableWithinBoundsMargin();\n                        }\n                    }\n                }\n            }\n\n            if (this._useRenderToTexture) {\n                // Set viewport necessary for children scissor calculation.\n                if (this._viewport) {\n                    this._viewport[2] = bboxW;\n                    this._viewport[3] = bboxH;\n                } else {\n                    this._viewport = [0, 0, bboxW, bboxH];\n                }\n            }\n\n            // Filter out bits that should not be copied to the children (currently all are).\n            this._pRecalc = (this._recalc & 135);\n\n            // Clear flags so that future updates are properly detected.\n            this._recalc = 0;\n            this._hasUpdates = false;\n\n            if (this._outOfBounds < 2) {\n                if (this._useRenderToTexture) {\n                    if (this._worldContext.isIdentity()) {\n                        // Optimization.\n                        // The world context is already identity: use the world context as render context to prevents the\n                        // ancestors from having to update the render context.\n                        this._renderContext = this._worldContext;\n                    } else {\n                        // Temporarily replace the render coord attribs by the identity matrix.\n                        // This allows the children to calculate the render context.\n                        this._renderContext = ElementCoreContext.IDENTITY;\n                    }\n                }\n\n                if (this._children) {\n                    for (let i = 0, n = this._children.length; i < n; i++) {\n                        this._children[i].update();\n                    }\n                }\n\n                if (this._useRenderToTexture) {\n                    this._renderContext = r;\n                }\n            } else {\n                if (this._children) {\n                    for (let i = 0, n = this._children.length; i < n; i++) {\n                        if (this._children[i]._hasUpdates) {\n                            this._children[i].update();\n                        } else {\n                            // Make sure we don't lose the 'inherited' updates.\n                            this._children[i]._recalc |= this._pRecalc;\n                            this._children[i].updateOutOfBounds();\n                        }\n                    }\n                }\n            }\n\n            if (this._onAfterUpdate) {\n                this._onAfterUpdate(this.element);\n            }\n        } else {\n            if (this.ctx.updateTreeOrder === -1 || this._updateTreeOrder >= this.ctx.updateTreeOrder) {\n                // If new tree order does not interfere with the current (gaps allowed) there's no need to traverse the branch.\n                this.ctx.updateTreeOrder = -1;\n            } else {\n                this.updateTreeOrder();\n            }\n        }\n    }\n\n    _applyRelativeDimFuncs() {\n        if (this._optFlags & 1) {\n            const x = this._funcX(this._parent.w);\n            if (x !== this._x) {\n                this._localPx += (x - this._x);\n                this._x = x;\n            }\n        }\n        if (this._optFlags & 2) {\n            const y = this._funcY(this._parent.h);\n            if (y !== this._y) {\n                this._localPy += (y - this._y);\n                this._y = y;\n            }\n        }\n\n        let changedDims = false;\n        if (this._optFlags & 4) {\n            const w = this._funcW(this._parent.w);\n            if (w !== this._w) {\n                this._w = w;\n                changedDims = true;\n            }\n        }\n        if (this._optFlags & 8) {\n            const h = this._funcH(this._parent.h);\n            if (h !== this._h) {\n                this._h = h;\n                changedDims = true;\n            }\n        }\n\n        if (changedDims) {\n            // Recalc mount, scale position.\n            this._recalcLocalTranslate();\n\n            this.element.onDimensionsChanged(this._w, this._h);\n        }\n    }\n\n    updateOutOfBounds() {\n        // Propagate outOfBounds flag to descendants (necessary because of z-indexing).\n        // Invisible elements are not drawn anyway. When alpha is updated, so will _outOfBounds.\n        if (this._outOfBounds !== 2 && this._renderContext.alpha > 0) {\n\n            // Inherit parent out of boundsness.\n            this._outOfBounds = 2;\n\n            if (this._withinBoundsMargin) {\n                this._withinBoundsMargin = false;\n                this.element._disableWithinBoundsMargin();\n            }\n\n            if (this._children) {\n                for (let i = 0, n = this._children.length; i < n; i++) {\n                    this._children[i].updateOutOfBounds();\n                }\n            }\n        }\n    }\n\n    updateTreeOrder() {\n        if (this._localAlpha && (this._outOfBounds !== 2)) {\n            this._updateTreeOrder = this.ctx.updateTreeOrder++;\n\n            if (this._children) {\n                for (let i = 0, n = this._children.length; i < n; i++) {\n                    this._children[i].updateTreeOrder();\n                }\n            }\n        }\n    }\n\n    _renderSimple() {\n        this._hasRenderUpdates = 0;\n\n        if (this._zSort) {\n            this.sortZIndexedChildren();\n        }\n\n        if (this._outOfBounds < 2 && this._renderContext.alpha) {\n            let renderState = this.renderState;\n\n            if ((this._outOfBounds === 0) && this._displayedTextureSource) {\n                renderState.setShader(this.activeShader, this._shaderOwner);\n                renderState.setScissor(this._scissor);\n                this.renderState.addQuad(this);\n            }\n\n            // Also add children to the VBO.\n            if (this._children) {\n                if (this._zContextUsage) {\n                    for (let i = 0, n = this._zIndexedChildren.length; i < n; i++) {\n                        this._zIndexedChildren[i].render();\n                    }\n                } else {\n                    for (let i = 0, n = this._children.length; i < n; i++) {\n                        if (this._children[i]._zIndex === 0) {\n                            // If zIndex is set, this item already belongs to a zIndexedChildren array in one of the ancestors.\n                            this._children[i].render();\n                        }\n\n                    }\n                }\n            }\n        }\n    }\n\n    _renderAdvanced() {\n        const hasRenderUpdates = this._hasRenderUpdates;\n\n        // We must clear the hasRenderUpdates flag before rendering, because updating result textures in combination\n        // with z-indexing may trigger render updates on a render branch that is 'half done'.\n        // We need to ensure that the full render branch is marked for render updates, not only half (leading to freeze).\n        this._hasRenderUpdates = 0;\n\n        if (this._zSort) {\n            this.sortZIndexedChildren();\n        }\n\n        if (this._outOfBounds < 2 && this._renderContext.alpha) {\n            let renderState = this.renderState;\n\n            let mustRenderChildren = true;\n            let renderTextureInfo;\n            let prevRenderTextureInfo;\n            if (this._useRenderToTexture) {\n                if (this._w === 0 || this._h === 0) {\n                    // Ignore this branch and don't draw anything.\n                    return;\n                } else if (!this._texturizer.hasRenderTexture() || (hasRenderUpdates >= 3)) {\n                    // Tell the renderer we're rendering a renderToTexture element in this frame\n                    this.ctx.renderToTextureCount++;\n                    // Switch to default shader for building up the render texture.\n                    renderState.setShader(renderState.defaultShader, this);\n\n                    prevRenderTextureInfo = renderState.renderTextureInfo;\n\n                    renderTextureInfo = {\n                        nativeTexture: null,\n                        offset: 0,  // Set by CoreRenderState.\n                        w: this._w,\n                        h: this._h,\n                        empty: true,\n                        cleared: false,\n                        ignore: false,\n                        cache: false\n                    };\n\n                    if (this._texturizer.hasResultTexture() || (!renderState.isCachingTexturizer && (hasRenderUpdates < 3))) {\n                        /**\n                         * We don't always cache render textures.\n                         *\n                         * The rule is, that caching for a specific render texture is only enabled if:\n                         * - There is a result texture to be updated.\n                         * - There were no render updates -within the contents- since last frame (ElementCore.hasRenderUpdates < 3)\n                         * - AND there are no ancestors that are being cached during this frame (CoreRenderState.isCachingTexturizer)\n                         *   If an ancestor is cached anyway, it's probably not necessary to keep deeper caches. If the top level is to\n                         *   change while a lower one is not, that lower level will be cached instead.\n                         *\n                         * In case of the fast blur element, this prevents having to cache all blur levels and stages, saving a huge amount\n                         * of GPU memory!\n                         *\n                         * Especially when using multiple stacked layers of the same dimensions that are RTT this will have a very\n                         * noticable effect on performance as less render textures need to be allocated.\n                         */\n                        renderTextureInfo.cache = true;\n                        renderState.isCachingTexturizer = true;\n                    }\n\n                    if (!this._texturizer.hasResultTexture()) {\n                        // We can already release the current texture to the pool, as it will be rebuild anyway.\n                        // In case of multiple layers of 'filtering', this may save us from having to create one\n                        //  render-to-texture layer.\n                        // Notice that we don't do this when there is a result texture, as any other element may rely on\n                        //  that result texture being filled.\n                        this._texturizer.releaseRenderTexture();\n                    }\n\n                    renderState.setRenderTextureInfo(renderTextureInfo);\n                    renderState.setScissor(null);\n\n                    if (this._displayedTextureSource) {\n                        let r = this._renderContext;\n\n                        // Use an identity context for drawing the displayed texture to the render texture.\n                        this._renderContext = ElementCoreContext.IDENTITY;\n\n                        // Add displayed texture source in local coordinates.\n                        this.renderState.addQuad(this);\n\n                        this._renderContext = r;\n                    }\n                } else {\n                    mustRenderChildren = false;\n                }\n            } else {\n                if ((this._outOfBounds === 0) && this._displayedTextureSource) {\n                    renderState.setShader(this.activeShader, this._shaderOwner);\n                    renderState.setScissor(this._scissor);\n                    this.renderState.addQuad(this);\n                }\n            }\n\n            // Also add children to the VBO.\n            if (mustRenderChildren && this._children) {\n                if (this._zContextUsage) {\n                    for (let i = 0, n = this._zIndexedChildren.length; i < n; i++) {\n                        this._zIndexedChildren[i].render();\n                    }\n                } else {\n                    for (let i = 0, n = this._children.length; i < n; i++) {\n                        if (this._children[i]._zIndex === 0) {\n                            // If zIndex is set, this item already belongs to a zIndexedChildren array in one of the ancestors.\n                            this._children[i].render();\n                        }\n                    }\n                }\n            }\n\n            if (this._useRenderToTexture) {\n                let updateResultTexture = false;\n                if (mustRenderChildren) {\n                    // Finished refreshing renderTexture.\n                    renderState.finishedRenderTexture();\n\n                    // If nothing was rendered, we store a flag in the texturizer and prevent unnecessary\n                    //  render-to-texture and filtering.\n                    this._texturizer.empty = renderTextureInfo.empty;\n\n                    if (renderTextureInfo.empty) {\n                        // We ignore empty render textures and do not draw the final quad.\n\n                        // The following cleans up memory and enforces that the result texture is also cleared.\n                        this._texturizer.releaseRenderTexture();\n                    } else if (renderTextureInfo.nativeTexture) {\n                        // If nativeTexture is set, we can reuse that directly instead of creating a new render texture.\n                        this._texturizer.reuseTextureAsRenderTexture(renderTextureInfo.nativeTexture);\n\n                        renderTextureInfo.ignore = true;\n                    } else {\n                        if (this._texturizer.renderTextureReused) {\n                            // Quad operations must be written to a render texture actually owned.\n                            this._texturizer.releaseRenderTexture();\n                        }\n                        // Just create the render texture.\n                        renderTextureInfo.nativeTexture = this._texturizer.getRenderTexture();\n                    }\n\n                    // Restore the parent's render texture.\n                    renderState.setRenderTextureInfo(prevRenderTextureInfo);\n\n                    updateResultTexture = true;\n                }\n\n                if (!this._texturizer.empty) {\n                    let resultTexture = this._texturizer.getResultTexture();\n                    if (updateResultTexture) {\n                        if (resultTexture) {\n                            // Logging the update frame can be handy for userland.\n                            resultTexture.update = renderState.stage.frameCounter;\n                        }\n                        this._texturizer.updateResultTexture();\n                    }\n\n                    if (!this._texturizer.renderOffscreen) {\n                        // Render result texture to the actual render target.\n                        renderState.setShader(this.activeShader, this._shaderOwner);\n                        renderState.setScissor(this._scissor);\n\n                        // If no render texture info is set, the cache can be reused.\n                        const cache = !renderTextureInfo || renderTextureInfo.cache;\n\n                        renderState.setTexturizer(this._texturizer, cache);\n                        this._stashTexCoords();\n                        if (!this._texturizer.colorize) this._stashColors();\n                        this.renderState.addQuad(this, true);\n                        if (!this._texturizer.colorize) this._unstashColors();\n                        this._unstashTexCoords();\n                        renderState.setTexturizer(null);\n                    }\n                }\n            }\n\n            if (renderTextureInfo && renderTextureInfo.cache) {\n                // Allow siblings to cache.\n                renderState.isCachingTexturizer = false;\n            }\n        }\n    }\n\n    get zSort() {\n        return this._zSort;\n    }\n\n    sortZIndexedChildren() {\n        /**\n         * We want to avoid resorting everything. Instead, we do a single pass of the full array:\n         * - filtering out elements with a different zParent than this (were removed)\n         * - filtering out, but also gathering (in a temporary array) the elements that have zIndexResort flag\n         * - then, finally, we merge-sort both the new array and the 'old' one\n         * - element may have been added 'double', so when merge-sorting also check for doubles.\n         * - if the old one is larger (in size) than it should be, splice off the end of the array.\n         */\n\n        const n = this._zIndexedChildren.length;\n        let ptr = 0;\n        const a = this._zIndexedChildren;\n\n        // Notice that items may occur multiple times due to z-index changing.\n        const b = [];\n        for (let i = 0; i < n; i++) {\n            if (a[i]._zParent === this) {\n                if (a[i]._zIndexResort) {\n                    b.push(a[i]);\n                } else {\n                    if (ptr !== i) {\n                        a[ptr] = a[i];\n                    }\n                    ptr++;\n                }\n            }\n        }\n\n        const m = b.length;\n        if (m) {\n            for (let j = 0; j < m; j++) {\n                b[j]._zIndexResort = false;\n            }\n\n            b.sort(ElementCore.sortZIndexedChildren);\n            const n = ptr;\n            if (!n) {\n                ptr = 0;\n                let j = 0;\n                do {\n                    a[ptr++] = b[j++];\n                } while (j < m);\n\n                if (a.length > ptr) {\n                    // Slice old (unnecessary) part off array.\n                    a.splice(ptr);\n                }\n            } else {\n                a.splice(n); // Remove items that were sorted in b array, so that we can sort a\n+               // Beware that the function passed here to Array.sort must be stable\n+               a.sort(ElementCore.sortZIndexedChildren); // Needed because items with same _zIndex may not be ordered by _updateTreeOrder\n                // Merge-sort arrays;\n                ptr = 0;\n                let i = 0;\n                let j = 0;\n                const mergeResult = [];\n                do {\n                    const v = (a[i]._zIndex === b[j]._zIndex ? a[i]._updateTreeOrder - b[j]._updateTreeOrder : a[i]._zIndex - b[j]._zIndex);\n\n                    const add = v > 0 ? b[j++] : a[i++];\n\n                    if (ptr === 0 || (mergeResult[ptr - 1] !== add)) {\n                        mergeResult[ptr++] = add;\n                    }\n\n                    if (i >= n) {\n                        do {\n                            const add = b[j++];\n                            if (ptr === 0 || (mergeResult[ptr - 1] !== add)) {\n                                mergeResult[ptr++] = add;\n                            }\n                        } while (j < m);\n                        break;\n                    } else if (j >= m) {\n                        do {\n                            const add = a[i++];\n                            if (ptr === 0 || (mergeResult[ptr - 1] !== add)) {\n                                mergeResult[ptr++] = add;\n                            }\n                        } while (i < n);\n                        break;\n                    }\n                } while (true);\n\n                this._zIndexedChildren = mergeResult;\n            }\n        } else {\n            if (a.length > ptr) {\n                // Slice old (unnecessary) part off array.\n                a.splice(ptr);\n            }\n        }\n\n        this._zSort = false;\n    };\n\n    get localTa() {\n        return this._localTa;\n    };\n\n    get localTb() {\n        return this._localTb;\n    };\n\n    get localTc() {\n        return this._localTc;\n    };\n\n    get localTd() {\n        return this._localTd;\n    };\n\n    get element() {\n        return this._element;\n    }\n\n    get renderUpdates() {\n        return this._hasRenderUpdates;\n    }\n\n    get texturizer() {\n        if (!this._texturizer) {\n            this._texturizer = new ElementTexturizer(this);\n        }\n        return this._texturizer;\n    }\n\n    getCornerPoints() {\n        let w = this._worldContext;\n\n        return [\n            w.px,\n            w.py,\n            w.px + this._w * w.ta,\n            w.py + this._w * w.tc,\n            w.px + this._w * w.ta + this._h * w.tb,\n            w.py + this._w * w.tc + this._h * w.td,\n            w.px + this._h * w.tb,\n            w.py + this._h * w.td\n        ];\n    };\n\n    getRenderTextureCoords(relX, relY) {\n        let r = this._renderContext;\n        return [\n            r.px + r.ta * relX + r.tb * relY,\n            r.py + r.tc * relX + r.td * relY\n        ];\n    }\n\n    getAbsoluteCoords(relX, relY) {\n        let w = this._renderContext;\n        return [\n            w.px + w.ta * relX + w.tb * relY,\n            w.py + w.tc * relX + w.td * relY\n        ];\n    }\n\n    collectAtCoord(x, y, children) {\n        // return when branch is hidden\n        if (this._renderContext.alpha === 0) {\n            return;\n        }\n\n        if (this.inBound(x, y)) {\n            if (this._scissor) {\n                if (this.inScissor()) {\n                    children.push(this);\n                }\n            } else {\n                children.push(this);\n            }\n        }\n\n        if (this._children) {\n            const j = this._children.length;\n            for (let i = 0; i < j; i++) {\n                this._children[i].collectAtCoord(x, y, children);\n            }\n        }\n\n        return children.sort(ElementCore.sortZIndexedChildren);\n    }\n\n    inBound(tx, ty) {\n        const c = this.getCornerPoints();\n        return tx > c[0] && tx < c[2] && ty > c[1] && ty < c[7];\n    }\n\n    inScissor() {\n        const sc = this._scissor;\n        const c = this.getCornerPoints();\n\n        return c[2] >= sc[0] && c[0] <= sc[0] + sc[2] && c[7] >= sc[1] && c[1] <= sc[1] + sc[3];\n    }\n\n    get layout() {\n        this._ensureLayout();\n        return this._layout;\n    }\n\n    get flex() {\n        return this._layout ? this._layout.flex : null;\n    }\n\n    set flex(v) {\n        this.layout.flex = v;\n    }\n\n    get flexItem() {\n        return this._layout ? this._layout.flexItem : null;\n    }\n\n    set flexItem(v) {\n        this.layout.flexItem = v;\n    }\n\n    isFlexItem() {\n        return !!this._layout && this._layout.isFlexItemEnabled();\n    }\n\n    isFlexContainer() {\n        return !!this._layout && this._layout.isFlexEnabled();\n    }\n\n    enableFlexLayout() {\n        this._ensureLayout();\n    }\n\n    _ensureLayout() {\n        if (!this._layout) {\n            this._layout = new FlexTarget(this);\n        }\n    }\n\n    disableFlexLayout() {\n        this._triggerRecalcTranslate();\n    }\n\n    hasFlexLayout() {\n        return (this._layout && this._layout.isEnabled());\n    }\n\n    setLayout(x, y, w, h) {\n        this.x = x;\n        this.y = y;\n        this._updateDimensions(w, h);\n    }\n\n    triggerLayout() {\n        this._setRecalc(256);\n    }\n\n    _triggerRecalcTranslate() {\n        this._setRecalc(2);\n    }\n\n}\n\nclass ElementCoreContext {\n\n    constructor() {\n        this.alpha = 1;\n\n        this.px = 0;\n        this.py = 0;\n\n        this.ta = 1;\n        this.tb = 0;\n        this.tc = 0;\n        this.td = 1;\n    }\n\n    isIdentity() {\n        return this.alpha === 1 &&\n            this.px === 0 &&\n            this.py === 0 &&\n            this.ta === 1 &&\n            this.tb === 0 &&\n            this.tc === 0 &&\n            this.td === 1;\n    }\n\n    isSquare() {\n        return this.tb === 0 && this.tc === 0;\n    }\n\n}\n\nElementCoreContext.IDENTITY = new ElementCoreContext();\nElementCore.sortZIndexedChildren = function (a, b) {\n    return (a._zIndex === b._zIndex ? a._updateTreeOrder - b._updateTreeOrder : a._zIndex - b._zIndex);\n};\n\nimport ElementTexturizer from \"./ElementTexturizer.mjs\";\nimport Utils from \"../Utils.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * This is a partial (and more efficient) implementation of the event emitter.\n * It attempts to maintain a one-to-one mapping between events and listeners, skipping an array lookup.\n * Only if there are multiple listeners, they are combined in an array.\n */\nexport default class EventEmitter {\n\n    constructor() {\n        // This is set (and kept) to true when events are used at all.\n        this._hasEventListeners = false;\n    }\n\n    on(name, listener) {\n        if (!this._hasEventListeners) {\n            this._eventFunction = {}\n            this._eventListeners = {}\n            this._hasEventListeners = true;\n        }\n\n        const current = this._eventFunction[name];\n        if (!current) {\n            this._eventFunction[name] = listener;\n        } else {\n            if (this._eventFunction[name] !== EventEmitter.combiner) {\n                this._eventListeners[name] = [this._eventFunction[name], listener];\n                this._eventFunction[name] = EventEmitter.combiner;\n            } else {\n                this._eventListeners[name].push(listener);\n            }\n        }\n    }\n\n    once(name, listener) {\n        const wrapper = (arg1, arg2, arg3) => {\n            listener(arg1, arg2, arg3);\n            this.off(name, wrapper);\n        }\n        wrapper.__originalFunc = listener;\n        this.on(name, wrapper);\n    }\n\n    has(name, listener) {\n        if (this._hasEventListeners) {\n            const current = this._eventFunction[name];\n            if (current) {\n                if (current === EventEmitter.combiner) {\n                    const listeners = this._eventListeners[name];\n                    for (const l of listeners) {\n                        if (l === listener || l.__originalFunc == listener) {\n                            return true;\n                        }\n                    }\n                } else if (this._eventFunction[name] === listener || this._eventFunction[name].__originalFunc === listener) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    off(name, listener) {\n        if (this._hasEventListeners) {\n            const current = this._eventFunction[name];\n            if (current) {\n                if (current === EventEmitter.combiner) {\n                    const listeners = this._eventListeners[name];\n                    let index = listeners.indexOf(listener);\n                    if (index >= 0) {\n                        listeners.splice(index, 1);\n                    }\n                    index = listeners.map((l) => l.__originalFunc).indexOf(listener);\n                    if (index >= 0) {\n                        listeners.splice(index, 1);\n                    }\n                    if (listeners.length === 1) {\n                        this._eventFunction[name] = listeners[0];\n                        this._eventListeners[name] = undefined;\n                    }\n                } else if (this._eventFunction[name] === listener || this._eventFunction[name].__originalFunc === listener) {\n                    this._eventFunction[name] = undefined;\n                }\n            }\n        }\n    }\n\n    removeListener(name, listener) {\n        this.off(name, listener);\n    }\n\n    emit(name, arg1, arg2, arg3) {\n        if (this._hasEventListeners) {\n            const func = this._eventFunction[name];\n            if (func) {\n                if (func === EventEmitter.combiner) {\n                    func(this, name, arg1, arg2, arg3);\n                } else {\n                    func(arg1, arg2, arg3);\n                }\n            }\n        }\n    }\n\n    listenerCount(name) {\n        if (this._hasEventListeners) {\n            const func = this._eventFunction[name];\n            if (func) {\n                if (func === EventEmitter.combiner) {\n                    return this._eventListeners[name].length;\n                } else {\n                    return 1;\n                }\n            }\n        }\n        return 0;\n    }\n\n    removeAllListeners(name) {\n        if (this._hasEventListeners) {\n            delete this._eventFunction[name];\n            delete this._eventListeners[name];\n        }\n    }\n\n}\n\nEventEmitter.combiner = function(object, name, arg1, arg2, arg3) {\n    const listeners = object._eventListeners[name];\n    if (listeners) {\n        /* Because listener may detach itself while being invoked and therefore invalidate the iterator,\n           we need to create a copy to loop over it */\n        for (const listener of [...listeners]) {\n            listener(arg1, arg2, arg3);\n        }\n    }\n}\n\nEventEmitter.addAsMixin = function(cls) {\n    cls.prototype.on = EventEmitter.prototype.on;\n    cls.prototype.once = EventEmitter.prototype.once;\n    cls.prototype.has = EventEmitter.prototype.has;\n    cls.prototype.off = EventEmitter.prototype.off;\n    cls.prototype.removeListener = EventEmitter.prototype.removeListener;\n    cls.prototype.emit = EventEmitter.prototype.emit;\n    cls.prototype.listenerCount = EventEmitter.prototype.listenerCount;\n    cls.prototype.removeAllListeners = EventEmitter.prototype.removeAllListeners;\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"./Utils.mjs\";\nimport Base from \"./Base.mjs\";\n\nexport default class Shader {\n\n    constructor(coreContext) {\n        this._initialized = false;\n\n        this.ctx = coreContext;\n\n        /**\n         * The (enabled) elements that use this shader.\n         * @type {Set<ElementCore>}\n         */\n        this._elements = new Set();\n    }\n\n    static create(stage, v) {\n        let shader;\n        if (Utils.isObjectLiteral(v)) {\n            if (v.type) {\n                shader = stage.renderer.createShader(stage.ctx, v);\n            } else {\n                shader = this.shader;\n            }\n\n            if (shader) {\n                Base.patchObject(shader, v);\n            }\n        } else if (v === null) {\n            shader = stage.ctx.renderState.defaultShader;\n        } else if (v === undefined) {\n            shader = null;\n        } else {\n            if (v.isShader) {\n                if (!stage.renderer.isValidShaderType(v.constructor)) {\n                    console.error(\"[Lightning] Invalid shader type\");\n                    v = null;\n                }\n                shader = v;\n            } else {\n                console.error(\"[Lightning] Please specify a shader type.\");\n                return;\n            }\n        }\n\n        return shader;\n    }\n\n    static getWebGL() {\n        return undefined;\n    }\n\n    static getC2d() {\n        return undefined;\n    }\n\n    addElement(elementCore) {\n        this._elements.add(elementCore);\n    }\n\n    removeElement(elementCore) {\n        this._elements.delete(elementCore);\n        if (!this._elements) {\n            this.cleanup();\n        }\n    }\n\n    redraw() {\n        this._elements.forEach(elementCore => {\n            elementCore.setHasRenderUpdates(2);\n        });\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n    useDefault() {\n        // Should return true if this shader is configured (using it's properties) to not have any effect.\n        // This may allow the render engine to avoid unnecessary shader program switches or even texture copies.\n        return false;\n    }\n\n    addEmpty() {\n        // Draws this shader even if there are no quads to be added.\n        // This is handy for custom shaders.\n        return false;\n    }\n\n    cleanup() {\n        // Called when no more enabled elements have this shader.\n    }\n\n    get isShader() {\n        return true;\n    }\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class Texture {\n\n    /**\n     * @param {Stage} stage\n     */\n    constructor(stage) {\n        this.stage = stage;\n\n        this.manager = this.stage.textureManager;\n\n        this.id = Texture.id++;\n\n        /**\n         * All enabled elements that use this texture object (either as texture or displayedTexture).\n         * @type {Set<Element>}\n         */\n        this.elements = new Set();\n\n        /**\n         * The number of enabled elements that are active.\n         * @type {number}\n         */\n        this._activeCount = 0;\n\n        /**\n         * The associated texture source.\n         * Should not be changed.\n         * @type {TextureSource}\n         */\n        this._source = null;\n\n        /**\n         * A resize mode can be set to cover or contain a certain area.\n         * It will reset the texture clipping settings.\n         * When manual texture clipping is performed, the resizeMode is reset.\n         * @type {{type: string, width: number, height: number}}\n         * @private\n         */\n        this._resizeMode = null;\n\n        /**\n         * The texture clipping x-offset.\n         * @type {number}\n         */\n        this._x = 0;\n\n        /**\n         * The texture clipping y-offset.\n         * @type {number}\n         */\n        this._y = 0;\n\n        /**\n         * The texture clipping width. If 0 then full width.\n         * @type {number}\n         */\n        this._w = 0;\n\n        /**\n         * The texture clipping height. If 0 then full height.\n         * @type {number}\n         */\n        this._h = 0;\n\n        /**\n         * Render precision (0.5 = fuzzy, 1 = normal, 2 = sharp even when scaled twice, etc.).\n         * @type {number}\n         * @private\n         */\n        this._precision = 1;\n\n        /**\n         * The (maximum) expected texture source width. Used for within bounds determination while texture is not yet loaded.\n         * If not set, 2048 is used by ElementCore.update.\n         * @type {number}\n         */\n        this.mw = 0;\n\n        /**\n         * The (maximum) expected texture source height. Used for within bounds determination while texture is not yet loaded.\n         * If not set, 2048 is used by ElementCore.update.\n         * @type {number}\n         */\n        this.mh = 0;\n\n        /**\n         * Indicates if Texture.prototype.texture uses clipping.\n         * @type {boolean}\n         */\n        this.clipping = false;\n\n        /**\n         * Indicates whether this texture must update (when it becomes used again).\n         * @type {boolean}\n         * @private\n         */\n        this._mustUpdate = true;\n\n    }\n\n    get source() {\n        if (this._mustUpdate || this.stage.hasUpdateSourceTexture(this)) {\n            this._performUpdateSource(true);\n            this.stage.removeUpdateSourceTexture(this);\n        }\n        return this._source;\n    }\n\n    addElement(v) {\n        if (!this.elements.has(v)) {\n            this.elements.add(v);\n\n            if (this.elements.size === 1) {\n                if (this._source) {\n                    this._source.addTexture(this);\n                }\n            }\n\n            if (v.active) {\n                this.incActiveCount();\n            }\n        }\n    }\n\n    removeElement(v) {\n        if (this.elements.delete(v)) {\n            if (this.elements.size === 0) {\n                if (this._source) {\n                    this._source.removeTexture(this);\n                }\n            }\n\n            if (v.active) {\n                this.decActiveCount();\n            }\n        }\n    }\n\n    incActiveCount() {\n        // Ensure that texture source's activeCount has transferred ownership.\n        const source = this.source;\n\n        if (source) {\n            this._checkForNewerReusableTextureSource();\n        }\n\n        this._activeCount++;\n        if (this._activeCount === 1) {\n            this.becomesUsed();\n        }\n    }\n\n    decActiveCount() {\n        const source = this.source; // Force updating the source.\n        this._activeCount--;\n        if (!this._activeCount) {\n            this.becomesUnused();\n        }\n    }\n\n    becomesUsed() {\n        if (this.source) {\n            this.source.incActiveTextureCount();\n        }\n    }\n\n    onLoad() {\n        if (this._resizeMode) {\n            this._applyResizeMode();\n        }\n\n        this.elements.forEach(element => {\n            if (element.active) {\n                element.onTextureSourceLoaded();\n            }\n        });\n    }\n\n    _checkForNewerReusableTextureSource() {\n        // When this source became unused and cleaned up, it may have disappeared from the reusable texture map.\n        // In the meantime another texture may have been generated loaded with the same lookup id.\n        // If this is the case, use that one instead to make sure only one active texture source per lookup id exists.\n        const source = this.source;\n        if (!source.isLoaded()) {\n            const reusable = this._getReusableTextureSource();\n            if (reusable && reusable.isLoaded() && (reusable !== source)) {\n                this._replaceTextureSource(reusable);\n            }\n        } else {\n            if (this._resizeMode) {\n                this._applyResizeMode();\n            }\n        }\n    }\n\n    becomesUnused() {\n        if (this.source) {\n            this.source.decActiveTextureCount();\n        }\n    }\n\n    isUsed() {\n        return this._activeCount > 0;\n    }\n\n    /**\n     * Returns the lookup id for the current texture settings, to be able to reuse it.\n     * @returns {string|null}\n     */\n    _getLookupId() {\n        // Default: do not reuse texture.\n        return null;\n    }\n\n    /**\n     * Generates a loader function that is able to generate the texture for the current settings of this texture.\n     * It should return a function that receives a single callback argument.\n     * That callback should be called with the following arguments:\n     *   - err\n     *   - options: object\n     *     - source: ArrayBuffer|WebGlTexture|ImageData|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement|ImageBitmap\n     *     - w: Number\n     *     - h: Number\n     *     - permanent: Boolean\n     *     - hasAlpha: boolean\n     *     - permultiplyAlpha: boolean\n     *     - flipBlueRed: boolean\n     *     - renderInfo: object\n     * The loader itself may return a Function that is called when loading of the texture is cancelled. This can be used\n     * to stop fetching an image when it is no longer in element, for example.\n     */\n    _getSourceLoader() {\n        throw new Error(\"Texture.generate must be implemented.\");\n    }\n\n    get isValid() {\n        return this._getIsValid();\n    }\n\n    /**\n     * If texture is not 'valid', no source can be created for it.\n     * @returns {boolean}\n     */\n    _getIsValid() {\n        return true;\n    }\n\n    /**\n     * This must be called when the texture source must be re-generated.\n     */\n    _changed() {\n        // If no element is actively using this texture, ignore it altogether.\n        if (this.isUsed()) {\n            this._updateSource();\n        } else {\n            this._mustUpdate = true;\n        }\n    }\n\n    _updateSource() {\n        // We delay all updateSource calls to the next drawFrame, so that we can bundle them.\n        // Otherwise we may reload a texture more often than necessary, when, for example, patching multiple text\n        // properties.\n        this.stage.addUpdateSourceTexture(this);\n    }\n\n    _performUpdateSource(force = false) {\n        // If, in the meantime, the texture was no longer used, just remember that it must update until it becomes used\n        // again.\n        if (force || this.isUsed()) {\n            this._mustUpdate = false;\n            let source = this._getTextureSource();\n            this._replaceTextureSource(source);\n        }\n    }\n\n    _getTextureSource() {\n        let source = null;\n        if (this._getIsValid()) {\n            const lookupId = this._getLookupId();\n            source = this._getReusableTextureSource(lookupId);\n            if (!source) {\n                source = this.manager.getTextureSource(this._getSourceLoader(), lookupId);\n            }\n        }\n        return source;\n    }\n\n    _getReusableTextureSource(lookupId = this._getLookupId()) {\n        if (this._getIsValid()) {\n            if (lookupId) {\n                return this.manager.getReusableTextureSource(lookupId);\n            }\n        }\n        return null;\n    }\n\n    _replaceTextureSource(newSource = null) {\n        let oldSource = this._source;\n\n        this._source = newSource;\n\n        if (this.elements.size) {\n            if (oldSource) {\n                if (this._activeCount) {\n                    oldSource.decActiveTextureCount();\n                }\n\n                oldSource.removeTexture(this);\n\n                // free up unused TextTextures immediately as they are not reused anyway\n                if(this['text'] && !oldSource.isUsed()) {\n                    this.manager.freeTextureSource(oldSource);\n                }\n            }\n\n            if (newSource) {\n                // Must happen before setDisplayedTexture to ensure sprite map texcoords are used.\n                newSource.addTexture(this);\n                if (this._activeCount) {\n                    newSource.incActiveTextureCount();\n                }\n            }\n        }\n\n        if (this.isUsed()) {\n            if (newSource) {\n                if (newSource.isLoaded()) {\n\n                    // Apply resizeMode\n                    if (this._resizeMode) {\n                        this._applyResizeMode();\n                    }\n\n                    this.elements.forEach(element => {\n                        if (element.active) {\n                            element._setDisplayedTexture(this);\n                        }\n                    });\n                } else {\n                    const loadError = newSource.loadError;\n                    if (loadError) {\n                        this.elements.forEach(element => {\n                            if (element.active) {\n                                element.onTextureSourceLoadError(loadError);\n                            }\n                        });\n                    }\n                }\n            } else {\n                this.elements.forEach(element => {\n                    if (element.active) {\n                        element._setDisplayedTexture(null);\n                    }\n                });\n            }\n        }\n    }\n\n    load() {\n        // Make sure that source is up to date.\n        if (this.source) {\n            if (!this.isLoaded()) {\n                this.source.load(true);\n            }\n        }\n    }\n\n    isLoaded() {\n        return this._source && this._source.isLoaded();\n    }\n\n    get loadError() {\n        return this._source && this._source.loadError;\n    }\n\n    free() {\n        if (this._source) {\n            this._source.free();\n        }\n    }\n\n    set resizeMode({type = \"cover\", w = 0, h = 0, clipX = 0.5, clipY = 0.5}) {\n        this._resizeMode = {type, w, h, clipX, clipY};\n        if (this.isLoaded()) {\n            this._applyResizeMode();\n        }\n    }\n\n    get resizeMode() {\n        return this._resizeMode;\n    }\n\n    _clearResizeMode() {\n        this._resizeMode = null;\n    }\n\n    _applyResizeMode() {\n        if (this._resizeMode.type === \"cover\") {\n            this._applyResizeCover();\n        } else if (this._resizeMode.type === \"contain\") {\n            this._applyResizeContain();\n        }\n        this._updatePrecision();\n        this._updateClipping();\n    }\n\n    _applyResizeCover() {\n        const scaleX = this._resizeMode.w / this._source.w;\n        const scaleY = this._resizeMode.h / this._source.h;\n        let scale = Math.max(scaleX, scaleY);\n        if (!scale) return;\n        this._precision = 1/scale;\n        if (scaleX && scaleX < scale) {\n            const desiredSize = this._precision * this._resizeMode.w;\n            const choppedOffPixels = this._source.w - desiredSize;\n            this._x = choppedOffPixels * this._resizeMode.clipX;\n            this._w = this._source.w - choppedOffPixels;\n        }\n        if (scaleY && scaleY < scale) {\n            const desiredSize = this._precision * this._resizeMode.h;\n            const choppedOffPixels = this._source.h - desiredSize;\n            this._y = choppedOffPixels * this._resizeMode.clipY;\n            this._h = this._source.h - choppedOffPixels;\n        }\n    }\n\n    _applyResizeContain() {\n        const scaleX = this._resizeMode.w / this._source.w;\n        const scaleY = this._resizeMode.h / this._source.h;\n        let scale = scaleX;\n        if (!scale || scaleY < scale) {\n            scale = scaleY;\n        }\n        if (!scale) return;\n        this._precision = 1/scale;\n    }\n\n    enableClipping(x, y, w, h) {\n        this._clearResizeMode();\n\n        x *= this._precision;\n        y *= this._precision;\n        w *= this._precision;\n        h *= this._precision;\n        if (this._x !== x || this._y !== y || this._w !== w || this._h !== h) {\n            this._x = x;\n            this._y = y;\n            this._w = w;\n            this._h = h;\n\n            this._updateClipping(true);\n        }\n    }\n\n    disableClipping() {\n        this._clearResizeMode();\n\n        if (this._x || this._y || this._w || this._h) {\n            this._x = 0;\n            this._y = 0;\n            this._w = 0;\n            this._h = 0;\n\n            this._updateClipping();\n        }\n    }\n\n    _updateClipping() {\n        this.clipping = !!(this._x || this._y || this._w || this._h);\n\n        let self = this;\n        this.elements.forEach(function(element) {\n            // Ignore if not the currently displayed texture.\n            if (element.displayedTexture === self) {\n                element.onDisplayedTextureClippingChanged();\n            }\n        });\n    }\n\n    _updatePrecision() {\n        let self = this;\n        this.elements.forEach(function(element) {\n            // Ignore if not the currently displayed texture.\n            if (element.displayedTexture === self) {\n                element.onPrecisionChanged();\n            }\n        });\n    }\n\n    getNonDefaults() {\n        let nonDefaults = {};\n        nonDefaults['type'] = this.constructor.name;\n        if (this.x !== 0) nonDefaults['x'] = this.x;\n        if (this.y !== 0) nonDefaults['y'] = this.y;\n        if (this.w !== 0) nonDefaults['w'] = this.w;\n        if (this.h !== 0) nonDefaults['h'] = this.h;\n        if (this.precision !== 1) nonDefaults['precision'] = this.precision;\n        return nonDefaults;\n    }\n\n    get px() {\n        return this._x;\n    }\n\n    get py() {\n        return this._y;\n    }\n\n    get pw() {\n        return this._w;\n    }\n\n    get ph() {\n        return this._h;\n    }\n\n    get x() {\n        return this._x / this._precision;\n    }\n    set x(v) {\n        this._clearResizeMode();\n        v = v * this._precision;\n        if (this._x !== v) {\n            this._x = v;\n            this._updateClipping();\n        }\n    }\n\n    get y() {\n        return this._y / this._precision;\n    }\n    set y(v) {\n        this._clearResizeMode();\n        v = v * this._precision;\n        if (this._y !== v) {\n            this._y = v;\n            this._updateClipping();\n        }\n    }\n\n    get w() {\n        return this._w / this._precision;\n    }\n\n    set w(v) {\n        this._clearResizeMode();\n        v = v * this._precision;\n        if (this._w !== v) {\n            this._w = v;\n            this._updateClipping();\n        }\n    }\n\n    get h() {\n        return this._h / this._precision;\n    }\n\n    set h(v) {\n        this._clearResizeMode();\n        v = v * this._precision;\n        if (this._h !== v) {\n            this._h = v;\n            this._updateClipping();\n        }\n    }\n\n    get precision() {\n        return this._precision;\n    }\n\n    set precision(v) {\n        this._clearResizeMode();\n        if (this._precision !== v) {\n            this._precision = v;\n            this._updatePrecision();\n        }\n    }\n\n    isAutosizeTexture() {\n        return true;\n    }\n\n    getRenderWidth() {\n        if (!this.isAutosizeTexture()) {\n            // In case of the rectangle texture, we'd prefer to not cause a 1x1 w,h as it would interfere with flex layout fit-to-contents.\n            return 0;\n        }\n\n        // If dimensions are unknown (texture not yet loaded), use maximum width as a fallback as render width to allow proper bounds checking.\n        return (this._w || (this._source ? this._source.getRenderWidth() - this._x : 0)) / this._precision;\n    }\n\n    getRenderHeight() {\n        if (!this.isAutosizeTexture()) {\n            // In case of the rectangle texture, we'd prefer to not cause a 1x1 w,h as it would interfere with flex layout fit-to-contents.\n            return 0;\n        }\n\n        return (this._h || (this._source ? this._source.getRenderHeight() - this._y : 0)) / this._precision;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n}\n\nTexture.prototype.isTexture = true;\n\nTexture.id = 0;\n\nimport Base from \"./Base.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class ImageTexture extends Texture {\n\n    constructor(stage) {\n        super(stage);\n\n        this._src = undefined;\n        this._hasAlpha = false;\n    }\n\n    get src() {\n        return this._src;\n    }\n\n    set src(v) {\n        if (this._src !== v) {\n            this._src = v;\n            this._changed();\n        }\n    }\n\n    get hasAlpha() {\n        return this._hasAlpha;\n    }\n\n    set hasAlpha(v) {\n        if (this._hasAlpha !== v) {\n            this._hasAlpha = v;\n            this._changed();\n        }\n    }\n\n    _getIsValid() {\n        return !!this._src;\n    }\n\n    _getLookupId() {\n        return this._src;\n    }\n\n    _getSourceLoader() {\n        let src = this._src;\n        let hasAlpha = this._hasAlpha;\n        if (this.stage.getOption('srcBasePath')) {\n            var fc = src.charCodeAt(0);\n            if ((src.indexOf(\"//\") === -1) && ((fc >= 65 && fc <= 90) || (fc >= 97 && fc <= 122) || fc == 46)) {\n                // Alphabetical or dot: prepend base path.\n                src = this.stage.getOption('srcBasePath') + src;\n            }\n        }\n\n        return (cb) => {\n            return this.stage.platform.loadSrcTexture({src: src, hasAlpha: hasAlpha}, cb);\n        }\n    }\n\n    getNonDefaults() {\n        const obj = super.getNonDefaults();\n        if (this._src) {\n            obj.src = this._src;\n        }\n        return obj;\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns CSS font setting string for use in canvas context.\n *\n * @param fontFace\n * @param fontStyle\n * @param fontSize\n * @param precision\n * @param defaultFontFace\n * @returns\n */\nexport function getFontSetting(\n    fontFace: string | string[],\n    fontStyle: string,\n    fontSize: number,\n    precision: number,\n    defaultFontFace: string\n): string {\n    let ff = fontFace;\n\n    if (!Array.isArray(ff)) {\n        ff = [ff];\n    }\n\n    let ffs = [];\n    for (let i = 0, n = ff.length; i < n; i++) {\n        let curFf = ff[i];\n        // Replace the default font face `null` with the actual default font face set\n        // on the stage.\n        if (curFf == null) {\n            curFf = defaultFontFace;\n        }\n        if (curFf.indexOf(' ') < 0) {\n            ffs.push(curFf);\n        } else {\n            ffs.push(`\"${curFf}\"`);\n        }\n    }\n\n    return `${fontStyle} ${fontSize * precision}px ${ffs.join(\",\")}`\n}\n\n/**\n * Returns true if the given character is a zero-width space.\n *\n * @param space\n */\nexport function isZeroWidthSpace(space: string): boolean {\n    return space === '' || space === '\\u200B';\n}\n\n/**\n * Returns true if the given character is a zero-width space or a regular space.\n *\n * @param space\n */\nexport function isSpace(space: string): boolean {\n    return isZeroWidthSpace(space) || space === ' ';\n}\n\n/**\n * Converts a string into an array of tokens and the words between them.\n *\n * @param tokenRegex\n * @param text\n */\nexport function tokenizeString(tokenRegex: RegExp, text: string): string[] {\n    const delimeters = text.match(tokenRegex) || [];\n    const words = text.split(tokenRegex) || [];\n\n    let final: string[] = [];\n    for (let i = 0; i < words.length; i++) {\n        final.push(words[i]!, delimeters[i]!)\n    }\n    final.pop()\n    return final.filter((word) => word != '');\n}\n\n/**\n * Measure the width of a string accounting for letter spacing.\n *\n * @param context\n * @param word\n * @param space\n */\nexport function measureText(context: CanvasRenderingContext2D, word: string, space: number = 0): number {\n    if (!space) {\n        return context.measureText(word).width;\n    }\n    return word.split('').reduce((acc, char) => {\n        // Zero-width spaces should not include letter spacing.\n        // And since we know the width of a zero-width space is 0, we can skip\n        // measuring it.\n        if (isZeroWidthSpace(char)) {\n            return acc;\n        }\n        return acc + context.measureText(char).width + space;\n    }, 0);\n}\n\nexport interface WrapTextResult {\n    l: string[];\n    n: number[];\n}\n\n/**\n * Applies newlines to a string to have it optimally fit into the horizontal\n * bounds set by the Text object's wordWrapWidth property.\n *\n * @param context\n * @param text\n * @param wordWrapWidth\n * @param letterSpacing\n * @param indent\n */\nexport function wrapText(\n    context: CanvasRenderingContext2D,\n    text: string,\n    wordWrapWidth: number,\n    letterSpacing: number,\n    indent: number\n): WrapTextResult {\n    // Greedy wrapping algorithm that will wrap words as the line grows longer.\n    // than its horizontal bounds.\n    const spaceRegex = / |\\u200B/g;\n    let lines = text.split(/\\r?\\n/g);\n    let allLines: string[] = [];\n    let realNewlines: number[] = [];\n    for (let i = 0; i < lines.length; i++) {\n        let resultLines: string[] = [];\n        let result = '';\n        let spaceLeft = wordWrapWidth - indent;\n        let words = lines[i]!.split(spaceRegex);\n        let spaces = lines[i]!.match(spaceRegex) || [];\n        for (let j = 0; j < words.length; j++) {\n            const space = spaces[j - 1] || '';\n            const word = words[j]!;\n            const wordWidth = measureText(context, word, letterSpacing);\n            const wordWidthWithSpace = wordWidth + measureText(context, space, letterSpacing);\n            if (j === 0 || wordWidthWithSpace > spaceLeft) {\n                // Skip printing the newline if it's the first word of the line that is.\n                // greater than the word wrap width.\n                if (j > 0) {\n                    resultLines.push(result);\n                    result = '';\n                }\n                result += word;\n                spaceLeft = wordWrapWidth - wordWidth - (j === 0 ? indent : 0);\n            }\n            else {\n                spaceLeft -= wordWidthWithSpace;\n                result += space + word;\n            }\n        }\n\n        resultLines.push(result);\n        result = '';\n\n        allLines = allLines.concat(resultLines);\n\n        if (i < lines.length - 1) {\n            realNewlines.push(allLines.length);\n        }\n    }\n\n    return {l: allLines, n: realNewlines};\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\nimport { getFontSetting, measureText, wrapText } from \"./TextTextureRendererUtils.mjs\";\n\nexport default class TextTextureRenderer {\n\n    constructor(stage, canvas, settings) {\n        this._stage = stage;\n        this._canvas = canvas;\n        this._context = this._canvas.getContext('2d');\n        this._settings = settings;\n    }\n\n    getPrecision() {\n        return this._settings.precision;\n    };\n\n    setFontProperties() {\n        this._context.font = getFontSetting(\n            this._settings.fontFace,\n            this._settings.fontStyle,\n            this._settings.fontSize,\n            this.getPrecision(),\n            this._stage.getOption('defaultFontFace'),\n        );\n        this._context.textBaseline = this._settings.textBaseline;\n        this._context.direction = this._settings.rtl ? \"rtl\" : \"ltr\";\n    };\n\n    _load() {\n        if (Utils.isWeb && document.fonts) {\n            const fontSetting = getFontSetting(\n                this._settings.fontFace,\n                this._settings.fontStyle,\n                this._settings.fontSize,\n                this.getPrecision(),\n                this._stage.getOption('defaultFontFace')\n            );\n            try {\n                if (!document.fonts.check(fontSetting, this._settings.text)) {\n                    // Use a promise that waits for loading.\n                    return document.fonts.load(fontSetting, this._settings.text).catch(err => {\n                        // Just load the fallback font.\n                        console.warn('[Lightning] Font load error', err, fontSetting);\n                    }).then(() => {\n                        if (!document.fonts.check(fontSetting, this._settings.text)) {\n                            console.warn('[Lightning] Font not found', fontSetting);\n                        }\n                    });\n                }\n            } catch(e) {\n                console.warn(\"[Lightning] Can't check font loading for \" + fontSetting);\n            }\n        }\n    }\n\n    draw() {\n        // We do not use a promise so that loading is performed syncronous when possible.\n        const loadPromise = this._load();\n        if (!loadPromise) {\n            return Utils.isSpark ? this._stage.platform.drawText(this) : this._draw();\n        } else {\n            return loadPromise.then(() => {\n                return Utils.isSpark ? this._stage.platform.drawText(this) : this._draw();\n            });\n        }\n    }\n\n    _calculateRenderInfo() {\n        let renderInfo = {};\n\n        const precision = this.getPrecision();\n\n        const paddingLeft = this._settings.paddingLeft * precision;\n        const paddingRight = this._settings.paddingRight * precision;\n        const fontSize = this._settings.fontSize * precision;\n        let offsetY = this._settings.offsetY === null ? null : (this._settings.offsetY * precision);\n        let lineHeight = this._settings.lineHeight * precision;\n        const w = this._settings.w * precision;\n        const h = this._settings.h * precision;\n        let wordWrapWidth = this._settings.wordWrapWidth * precision;\n        const cutSx = this._settings.cutSx * precision;\n        const cutEx = this._settings.cutEx * precision;\n        const cutSy = this._settings.cutSy * precision;\n        const cutEy = this._settings.cutEy * precision;\n        const letterSpacing = (this._settings.letterSpacing || 0) * precision;\n        const textIndent = this._settings.textIndent * precision;\n\n        // Set font properties.\n        this.setFontProperties();\n\n        // Total width.\n        let width = w || this._stage.getOption('w');\n\n        // Inner width.\n        let innerWidth = width - (paddingLeft);\n        if (innerWidth < 10) {\n            width += (10 - innerWidth);\n            innerWidth = 10;\n        }\n\n        if (!wordWrapWidth) {\n            wordWrapWidth = innerWidth\n        }\n\n        // Text overflow\n        if (this._settings.textOverflow && !this._settings.wordWrap) {\n            let suffix;\n            switch (this._settings.textOverflow) {\n                case 'clip':\n                    suffix = '';\n                    break;\n                case 'ellipsis':\n                    suffix = this._settings.maxLinesSuffix;\n                    break;\n                default:\n                    suffix = this._settings.textOverflow;\n            }\n            this._settings.text = this.wrapWord(this._settings.text, wordWrapWidth - textIndent, suffix)\n        }\n\n        // word wrap\n        // preserve original text\n        let linesInfo;\n        if (this._settings.wordWrap) {\n            linesInfo = this.wrapText(this._settings.text, wordWrapWidth, letterSpacing, textIndent);\n        } else {\n            linesInfo = {l: this._settings.text.split(/(?:\\r\\n|\\r|\\n)/), n: []};\n            let i, n = linesInfo.l.length;\n            for (let i = 0; i < n - 1; i++) {\n                linesInfo.n.push(i);\n            }\n        }\n        let lines = linesInfo.l;\n\n        if (this._settings.maxLines && lines.length > this._settings.maxLines) {\n            let usedLines = lines.slice(0, this._settings.maxLines);\n\n            let otherLines = null;\n            if (this._settings.maxLinesSuffix) {\n                // Wrap again with max lines suffix enabled.\n                let w = this._settings.maxLinesSuffix ? this.measureText(this._settings.maxLinesSuffix) : 0;\n                let al = this.wrapText(usedLines[usedLines.length - 1], wordWrapWidth - w, letterSpacing, textIndent);\n                usedLines[usedLines.length - 1] = al.l[0] + this._settings.maxLinesSuffix;\n                otherLines = [al.l.length > 1 ? al.l[1] : ''];\n            } else {\n                otherLines = [''];\n            }\n\n            // Re-assemble the remaining text.\n            let i, n = lines.length;\n            let j = 0;\n            let m = linesInfo.n.length;\n            for (i = this._settings.maxLines; i < n; i++) {\n                otherLines[j] += (otherLines[j] ? \" \" : \"\") + lines[i];\n                if (i + 1 < m && linesInfo.n[i + 1]) {\n                    j++;\n                }\n            }\n\n            renderInfo.remainingText = otherLines.join(\"\\n\");\n\n            renderInfo.moreTextLines = true;\n\n            lines = usedLines;\n        } else {\n            renderInfo.moreTextLines = false;\n            renderInfo.remainingText = \"\";\n        }\n\n        // calculate text width\n        let maxLineWidth = 0;\n        let lineWidths = [];\n        for (let i = 0; i < lines.length; i++) {\n            let lineWidth = this.measureText(lines[i], letterSpacing) + (i === 0 ? textIndent : 0);\n            lineWidths.push(lineWidth);\n            maxLineWidth = Math.max(maxLineWidth, lineWidth);\n        }\n\n        renderInfo.lineWidths = lineWidths;\n\n        if (!w) {\n            // Auto-set width to max text length.\n            width = maxLineWidth + paddingLeft + paddingRight;\n            innerWidth = maxLineWidth;\n        }\n\n        // calculate text height\n        lineHeight = lineHeight || fontSize;\n\n        let height;\n        if (h) {\n            height = h;\n        } else {\n            const baselineOffset = (this._settings.textBaseline != 'bottom') ? 0.5 * fontSize : 0;\n            height = lineHeight * (lines.length - 1) + baselineOffset + Math.max(lineHeight, fontSize) + offsetY;\n        }\n\n        if (offsetY === null) {\n            offsetY = fontSize;\n        }\n\n        renderInfo.w = width;\n        renderInfo.h = height;\n        renderInfo.lines = lines;\n        renderInfo.precision = precision;\n\n        if (!width) {\n            // To prevent canvas errors.\n            width = 1;\n        }\n\n        if (!height) {\n            // To prevent canvas errors.\n            height = 1;\n        }\n\n        if (cutSx || cutEx) {\n            width = Math.min(width, cutEx - cutSx);\n        }\n\n        if (cutSy || cutEy) {\n            height = Math.min(height, cutEy - cutSy);\n        }\n\n        renderInfo.width = width;\n        renderInfo.innerWidth = innerWidth;\n        renderInfo.height = height;\n        renderInfo.fontSize = fontSize;\n        renderInfo.cutSx = cutSx;\n        renderInfo.cutSy = cutSy;\n        renderInfo.cutEx = cutEx;\n        renderInfo.cutEy = cutEy;\n        renderInfo.lineHeight = lineHeight;\n        renderInfo.lineWidths = lineWidths;\n        renderInfo.offsetY = offsetY;\n        renderInfo.paddingLeft = paddingLeft;\n        renderInfo.paddingRight = paddingRight;\n        renderInfo.letterSpacing = letterSpacing;\n        renderInfo.textIndent = textIndent;\n\n        return renderInfo;\n    }\n\n    _draw() {\n        const renderInfo = this._calculateRenderInfo();\n        const precision = this.getPrecision();\n\n        // Add extra margin to prevent issue with clipped text when scaling.\n        this._canvas.width = Math.ceil(renderInfo.width + this._stage.getOption('textRenderIssueMargin'));\n        this._canvas.height = Math.ceil(renderInfo.height);\n\n        // Canvas context has been reset.\n        this.setFontProperties();\n\n        if (renderInfo.fontSize >= 128) {\n            // WpeWebKit bug: must force compositing because cairo-traps-compositor will not work with text first.\n            this._context.globalAlpha = 0.01;\n            this._context.fillRect(0, 0, 0.01, 0.01);\n            this._context.globalAlpha = 1.0;\n        }\n\n        if (renderInfo.cutSx || renderInfo.cutSy) {\n            this._context.translate(-renderInfo.cutSx, -renderInfo.cutSy);\n        }\n\n        let linePositionX;\n        let linePositionY;\n\n        let drawLines = [];\n\n        // Draw lines line by line.\n        for (let i = 0, n = renderInfo.lines.length; i < n; i++) {\n            linePositionX = i === 0 ? renderInfo.textIndent : 0;\n\n            // By default, text is aligned to top\n            linePositionY = (i * renderInfo.lineHeight) + renderInfo.offsetY;\n\n            if (this._settings.verticalAlign == 'middle') {\n                linePositionY += (renderInfo.lineHeight - renderInfo.fontSize) / 2;\n            } else if (this._settings.verticalAlign == 'bottom') {\n                linePositionY += renderInfo.lineHeight - renderInfo.fontSize;\n            }\n\n            if (this._settings.textAlign === 'right') {\n                linePositionX += (renderInfo.innerWidth - renderInfo.lineWidths[i]);\n            } else if (this._settings.textAlign === 'center') {\n                linePositionX += ((renderInfo.innerWidth - renderInfo.lineWidths[i]) / 2);\n            }\n            linePositionX += renderInfo.paddingLeft;\n            if (this._settings.rtl) {\n                linePositionX += renderInfo.lineWidths[i];\n            }\n\n            drawLines.push({text: renderInfo.lines[i], x: linePositionX, y: linePositionY, w: renderInfo.lineWidths[i]});\n        }\n\n        // Highlight.\n        if (this._settings.highlight) {\n            let color = this._settings.highlightColor || 0x00000000;\n\n            let hlHeight = (this._settings.highlightHeight * precision || renderInfo.fontSize * 1.5);\n            const offset = this._settings.highlightOffset * precision;\n            const hlPaddingLeft = (this._settings.highlightPaddingLeft !== null ? this._settings.highlightPaddingLeft * precision : renderInfo.paddingLeft);\n            const hlPaddingRight = (this._settings.highlightPaddingRight !== null ? this._settings.highlightPaddingRight * precision : renderInfo.paddingRight);\n\n            this._context.fillStyle = StageUtils.getRgbaString(color);\n            for (let i = 0; i < drawLines.length; i++) {\n                let drawLine = drawLines[i];\n                this._context.fillRect((drawLine.x - hlPaddingLeft), (drawLine.y - renderInfo.offsetY + offset), (drawLine.w + hlPaddingRight + hlPaddingLeft), hlHeight);\n            }\n        }\n\n        // Text shadow.\n        let prevShadowSettings = null;\n        if (this._settings.shadow) {\n            prevShadowSettings = [this._context.shadowColor, this._context.shadowOffsetX, this._context.shadowOffsetY, this._context.shadowBlur];\n\n            this._context.shadowColor = StageUtils.getRgbaString(this._settings.shadowColor);\n            this._context.shadowOffsetX = this._settings.shadowOffsetX * precision;\n            this._context.shadowOffsetY = this._settings.shadowOffsetY * precision;\n            this._context.shadowBlur = this._settings.shadowBlur * precision;\n        }\n\n        this._context.fillStyle = StageUtils.getRgbaString(this._settings.textColor);\n        for (let i = 0, n = drawLines.length; i < n; i++) {\n            let drawLine = drawLines[i];\n\n            if (renderInfo.letterSpacing === 0) {\n                this._context.fillText(drawLine.text, drawLine.x, drawLine.y);\n            } else {\n                const textSplit = drawLine.text.split('');\n                let x = drawLine.x;\n                for (let i = 0, j = textSplit.length; i < j; i++) {\n                    this._context.fillText(textSplit[i], x, drawLine.y);\n                    x += this.measureText(textSplit[i], renderInfo.letterSpacing);\n                }\n            }\n        }\n\n        if (prevShadowSettings) {\n            this._context.shadowColor = prevShadowSettings[0];\n            this._context.shadowOffsetX = prevShadowSettings[1];\n            this._context.shadowOffsetY = prevShadowSettings[2];\n            this._context.shadowBlur = prevShadowSettings[3];\n        }\n\n        if (renderInfo.cutSx || renderInfo.cutSy) {\n            this._context.translate(renderInfo.cutSx, renderInfo.cutSy);\n        }\n\n        this.renderInfo = renderInfo;\n    };\n\n    wrapWord(word, wordWrapWidth, suffix) {\n        const suffixWidth = this.measureText(suffix);\n        const wordLen = word.length\n        const wordWidth = this.measureText(word);\n\n        /* If word fits wrapWidth, do nothing */\n        if (wordWidth <= wordWrapWidth) {\n            return word;\n        }\n\n        /* Make initial guess for text cuttoff */\n        let cutoffIndex = Math.floor((wordWrapWidth * wordLen) / wordWidth);\n        let truncWordWidth = this.measureText(word.substring(0, cutoffIndex)) + suffixWidth;\n\n        /* In case guess was overestimated, shrink it letter by letter. */\n        if (truncWordWidth > wordWrapWidth) {\n            while (cutoffIndex > 0) {\n                truncWordWidth = this.measureText(word.substring(0, cutoffIndex)) + suffixWidth;\n                if (truncWordWidth > wordWrapWidth) {\n                    cutoffIndex -= 1;\n                } else {\n                    break;\n                }\n            }\n\n        /* In case guess was underestimated, extend it letter by letter. */\n        } else {\n            while (cutoffIndex < wordLen) {\n                truncWordWidth = this.measureText(word.substring(0, cutoffIndex)) + suffixWidth;\n                if (truncWordWidth < wordWrapWidth) {\n                    cutoffIndex += 1;\n                } else {\n                    // Finally, when bound is crossed, retract last letter.\n                    cutoffIndex -=1;\n                    break;\n                }\n            }\n        }\n\n        /* If wrapWidth is too short to even contain suffix alone, return empty string */\n        return word.substring(0, cutoffIndex) + (wordWrapWidth >= suffixWidth ? suffix : '');\n    }\n\n    /**\n     * See {@link wrapText}\n     *\n     * @param {string} text\n     * @param {number} wordWrapWidth\n     * @param {number} letterSpacing\n     * @param {number} indent\n     * @returns\n     */\n    wrapText(text, wordWrapWidth, letterSpacing, indent = 0) {\n        return wrapText(this._context, text, wordWrapWidth, letterSpacing, indent);\n    };\n\n    /**\n     * See {@link measureText}\n     *\n     * @param {string} word\n     * @param {number} space\n     * @returns {number}\n     */\n    measureText(word, space = 0) {\n        return measureText(this._context, word, space);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\nimport { getFontSetting, isSpace, measureText, tokenizeString } from \"./TextTextureRendererUtils.mjs\";\n\nexport default class TextTextureRendererAdvanced {\n\n    constructor(stage, canvas, settings) {\n        this._stage = stage;\n        this._canvas = canvas;\n        this._context = this._canvas.getContext('2d');\n        this._settings = settings;\n    }\n\n    getPrecision() {\n        return this._settings.precision;\n    };\n\n    setFontProperties() {\n        const font = getFontSetting(\n            this._settings.fontFace,\n            this._settings.fontStyle,\n            this._settings.fontSize,\n            this.getPrecision(),\n            this._stage.getOption('defaultFontFace')\n        );\n        this._context.font = font;\n        this._context.textBaseline = this._settings.textBaseline;\n        return font;\n    };\n\n    _load() {\n        if (Utils.isWeb && document.fonts) {\n            const fontSetting = getFontSetting(\n                this._settings.fontFace,\n                this._settings.fontStyle,\n                this._settings.fontSize,\n                this.getPrecision(),\n                this._stage.getOption('defaultFontFace')\n            );\n            try {\n                if (!document.fonts.check(fontSetting, this._settings.text)) {\n                    // Use a promise that waits for loading.\n                    return document.fonts.load(fontSetting, this._settings.text).catch(err => {\n                        // Just load the fallback font.\n                        console.warn('Font load error', err, fontSetting);\n                    }).then(() => {\n                        if (!document.fonts.check(fontSetting, this._settings.text)) {\n                            console.warn('Font not found', fontSetting);\n                        }\n                    });\n                }\n            } catch(e) {\n                console.warn(\"Can't check font loading for \" + fontSetting);\n            }\n        }\n    }\n\n    draw() {\n        // We do not use a promise so that loading is performed syncronous when possible.\n        const loadPromise = this._load();\n        if (!loadPromise) {\n            return Utils.isSpark ? this._stage.platform.drawText(this) : this._draw();\n        } else {\n            return loadPromise.then(() => {\n                return Utils.isSpark ? this._stage.platform.drawText(this) : this._draw();\n            });\n        }\n    }\n\n    _calculateRenderInfo() {\n        let renderInfo = {};\n\n        const precision = this.getPrecision();\n\n        const paddingLeft = this._settings.paddingLeft * precision;\n        const paddingRight = this._settings.paddingRight * precision;\n        const fontSize = this._settings.fontSize * precision;\n        // const offsetY = this._settings.offsetY === null ? null : (this._settings.offsetY * precision);\n        const lineHeight = this._settings.lineHeight * precision || fontSize;\n        const w = this._settings.w != 0 ? this._settings.w * precision : this._stage.getOption('w');\n        // const h = this._settings.h * precision;\n        const wordWrapWidth = this._settings.wordWrapWidth * precision;\n        const cutSx = this._settings.cutSx * precision;\n        const cutEx = this._settings.cutEx * precision;\n        const cutSy = this._settings.cutSy * precision;\n        const cutEy = this._settings.cutEy * precision;\n        const letterSpacing = this._settings.letterSpacing || 0;\n\n        // Set font properties.\n        renderInfo.baseFont = this.setFontProperties();\n\n        renderInfo.w = w;\n        renderInfo.width = w;\n        renderInfo.text = this._settings.text;\n        renderInfo.precision = precision;\n        renderInfo.fontSize = fontSize;\n        renderInfo.fontBaselineRatio = this._settings.fontBaselineRatio;\n        renderInfo.lineHeight = lineHeight;\n        renderInfo.letterSpacing = letterSpacing;\n        renderInfo.textAlign = this._settings.textAlign;\n        renderInfo.textColor = this._settings.textColor;\n        renderInfo.verticalAlign = this._settings.verticalAlign;\n        renderInfo.highlight = this._settings.highlight;\n        renderInfo.highlightColor = this._settings.highlightColor;\n        renderInfo.highlightHeight = this._settings.highlightHeight;\n        renderInfo.highlightPaddingLeft = this._settings.highlightPaddingLeft;\n        renderInfo.highlightPaddingRight = this._settings.highlightPaddingRight;\n        renderInfo.highlightOffset = this._settings.highlightOffset;\n        renderInfo.paddingLeft = this._settings.paddingLeft;\n        renderInfo.paddingRight = this._settings.paddingRight;\n        renderInfo.maxLines = this._settings.maxLines;\n        renderInfo.maxLinesSuffix = this._settings.maxLinesSuffix;\n        renderInfo.textOverflow = this._settings.textOverflow;\n        renderInfo.wordWrap = this._settings.wordWrap;\n        renderInfo.wordWrapWidth = wordWrapWidth;\n        renderInfo.shadow = this._settings.shadow;\n        renderInfo.shadowColor = this._settings.shadowColor;\n        renderInfo.shadowOffsetX = this._settings.shadowOffsetX;\n        renderInfo.shadowOffsetY = this._settings.shadowOffsetY;\n        renderInfo.shadowBlur = this._settings.shadowBlur;\n        renderInfo.cutSx = cutSx;\n        renderInfo.cutEx = cutEx;\n        renderInfo.cutSy = cutSy;\n        renderInfo.cutEy = cutEy;\n        renderInfo.textIndent = this._settings.textIndent * precision;\n        renderInfo.wordBreak = this._settings.wordBreak;\n\n        let text = renderInfo.text;\n        let wrapWidth = renderInfo.wordWrap ? (renderInfo.wordWrapWidth || renderInfo.width) : renderInfo.width;\n\n        // Text overflow\n        if (renderInfo.textOverflow && !renderInfo.wordWrap) {\n            let suffix;\n            switch (this._settings.textOverflow) {\n                case 'clip':\n                    suffix = '';\n                    break;\n                case 'ellipsis':\n                    suffix = this._settings.maxLinesSuffix;\n                    break;\n                default:\n                    suffix = this._settings.textOverflow;\n            }\n            text = this.wrapWord(text, wordWrapWidth || renderInfo.w, suffix);\n        }\n\n        text = this.tokenize(text);\n        text = this.parse(text);\n        text = this.measure(text, letterSpacing, renderInfo.baseFont);\n\n        if (renderInfo.textIndent) {\n            text = this.indent(text, renderInfo.textIndent);\n        }\n\n        if (renderInfo.wordBreak) {\n            text = text.reduce((acc, t) => acc.concat(this.wordBreak(t, wrapWidth, renderInfo.baseFont)), [])\n            this.resetFontStyle()\n        }\n\n        // Calculate detailed drawing information\n        let x = paddingLeft;\n        let lineNo = 0;\n\n        for (const t of text) {\n            // Wrap text\n            if (renderInfo.wordWrap && x + t.width > wrapWidth || t.text == '\\n') {\n                x = paddingLeft;\n                lineNo += 1;\n            }\n            t.lineNo = lineNo;\n\n            if (t.text == '\\n') {\n                continue;\n            }\n\n            t.x = x;\n            x += t.width;\n        }\n        renderInfo.lineNum = lineNo + 1;\n\n        if (this._settings.h) {\n            renderInfo.h = this._settings.h;\n        } else if (renderInfo.maxLines && renderInfo.maxLines < renderInfo.lineNum) {\n            renderInfo.h = renderInfo.maxLines * renderInfo.lineHeight + fontSize / 2;\n        } else {\n            renderInfo.h = renderInfo.lineNum * renderInfo.lineHeight + fontSize / 2;\n        }\n\n        // This calculates the baseline offset in pixels from the font size.\n        // To retrieve this ratio, you would do this calculation:\n        //     (FontUnitsPerEm − hhea.Ascender − hhea.Descender) / (2 × FontUnitsPerEm)\n        //\n        // This give you the ratio for the baseline, which is then used to figure out\n        // where the baseline is relative to the bottom of the text bounding box.\n        const baselineOffsetInPx = renderInfo.fontBaselineRatio * renderInfo.fontSize;\n\n        // Vertical align\n        let vaOffset = 0;\n        if (renderInfo.verticalAlign == 'top' && this._context.textBaseline == 'alphabetic') {\n            vaOffset = -baselineOffsetInPx;\n        } else if (renderInfo.verticalAlign == 'middle') {\n            vaOffset = (renderInfo.lineHeight - renderInfo.fontSize - baselineOffsetInPx) / 2;\n        } else if (this._settings.verticalAlign == 'bottom') {\n            vaOffset = renderInfo.lineHeight - renderInfo.fontSize;\n        }\n\n        // Calculate lines information\n        renderInfo.lines = []\n        for (let i = 0; i < renderInfo.lineNum; i++) {\n            renderInfo.lines[i] = {\n                width: 0,\n                x: 0,\n                y: renderInfo.lineHeight * i + vaOffset,\n                text: [],\n            }\n        }\n\n        for (let t of text) {\n            renderInfo.lines[t.lineNo].text.push(t);\n        }\n\n        // Filter out white spaces at beginning and end of each line\n        for (const l of renderInfo.lines) {\n            if (l.text.length == 0) {\n                continue;\n            }\n\n            const firstWord = l.text[0].text;\n            const lastWord = l.text[l.text.length - 1].text;\n\n            if (firstWord == '\\n') {\n                l.text.shift();\n            }\n            if (isSpace(lastWord) || lastWord == '\\n') {\n                l.text.pop();\n            }\n        }\n\n\n        // Calculate line width\n        for (let l of renderInfo.lines) {\n            l.width = l.text.reduce((acc, t) => acc + t.width, 0);\n        }\n\n        renderInfo.width = this._settings.w != 0 ? this._settings.w * precision : Math.max(...renderInfo.lines.map((l) => l.width)) + paddingRight;\n        renderInfo.w = renderInfo.width;\n\n        // Apply maxLinesSuffix\n        if (renderInfo.maxLines && renderInfo.lineNum > renderInfo.maxLines && renderInfo.maxLinesSuffix) {\n            const index = renderInfo.maxLines - 1;\n            let lastLineText = text.filter((t) => t.lineNo == index)\n            let suffix = renderInfo.maxLinesSuffix;\n            suffix = this.tokenize(suffix);\n            suffix = this.parse(suffix);\n            suffix = this.measure(suffix, renderInfo.letterSpacing, renderInfo.baseFont);\n            for (const s of suffix) {\n                s.lineNo = index;\n                s.x = 0;\n                lastLineText.push(s)\n            }\n\n            const spl = suffix.length + 1\n            let _w = lastLineText.reduce((acc, t) => acc + t.width, 0);\n            while (_w > renderInfo.width || isSpace(lastLineText[lastLineText.length - spl].text)) {\n                lastLineText.splice(lastLineText.length - spl, 1);\n                _w = lastLineText.reduce((acc, t) => acc + t.width, 0);\n                if (lastLineText.length < spl) {\n                    break;\n                }\n            }\n            this.alignLine(lastLineText, lastLineText[0].x)\n\n            renderInfo.lines[index].text = lastLineText;\n            renderInfo.lines[index].width = _w;\n        }\n\n        // Horizontal alignment offset\n        if (renderInfo.textAlign == 'center') {\n            for (let l of renderInfo.lines) {\n                l.x = (renderInfo.width - l.width - paddingLeft) / 2;\n            }\n        } else if (renderInfo.textAlign == 'right') {\n            for (let l of renderInfo.lines) {\n                l.x = renderInfo.width - l.width - paddingLeft;\n            }\n        }\n\n        return renderInfo;\n    }\n\n    _draw() {\n        const renderInfo = this._calculateRenderInfo();\n        const precision = this.getPrecision();\n        const paddingLeft = renderInfo.paddingLeft * precision;\n\n        // Set canvas dimensions\n        let canvasWidth = renderInfo.w || renderInfo.width;\n        if (renderInfo.cutSx || renderInfo.cutEx) {\n            canvasWidth = Math.min(renderInfo.w, renderInfo.cutEx - renderInfo.cutSx);\n        }\n\n        let canvasHeight = renderInfo.h;\n        if (renderInfo.cutSy || renderInfo.cutEy) {\n            canvasHeight = Math.min(renderInfo.h, renderInfo.cutEy - renderInfo.cutSy);\n        }\n\n        this._canvas.width = Math.ceil(canvasWidth + this._stage.getOption('textRenderIssueMargin'));\n        this._canvas.height = Math.ceil(canvasHeight);\n\n        // Canvas context has been reset.\n        this.setFontProperties();\n\n        if (renderInfo.fontSize >= 128) {\n            // WpeWebKit bug: must force compositing because cairo-traps-compositor will not work with text first.\n            this._context.globalAlpha = 0.01;\n            this._context.fillRect(0, 0, 0.01, 0.01);\n            this._context.globalAlpha = 1.0;\n        }\n\n        // Cut\n        if (renderInfo.cutSx || renderInfo.cutSy) {\n            this._context.translate(-renderInfo.cutSx, -renderInfo.cutSy);\n        }\n\n        // Highlight\n        if (renderInfo.highlight) {\n            const hlColor = renderInfo.highlightColor || 0x00000000;\n            const hlHeight = renderInfo.highlightHeight ? renderInfo.highlightHeight * precision :  renderInfo.fontSize * 1.5;\n            const hlOffset = renderInfo.highlightOffset ? renderInfo.highlightOffset * precision : 0;\n            const hlPaddingLeft = (renderInfo.highlightPaddingLeft !== null ? renderInfo.highlightPaddingLeft * precision : renderInfo.paddingLeft);\n            const hlPaddingRight = (renderInfo.highlightPaddingRight !== null ? renderInfo.highlightPaddingRight * precision : renderInfo.paddingRight);\n\n            this._context.fillStyle = StageUtils.getRgbaString(hlColor);\n            const lineNum = renderInfo.maxLines ? Math.min(renderInfo.maxLines, renderInfo.lineNum) : renderInfo.lineNum;\n            for (let i = 0; i < lineNum; i++) {\n                const l = renderInfo.lines[i];\n                this._context.fillRect(l.x - hlPaddingLeft + paddingLeft, l.y + hlOffset, l.width + hlPaddingLeft + hlPaddingRight, hlHeight);\n            }\n        }\n\n        // Text shadow.\n        let prevShadowSettings = null;\n        if (this._settings.shadow) {\n            prevShadowSettings = [this._context.shadowColor, this._context.shadowOffsetX, this._context.shadowOffsetY, this._context.shadowBlur];\n\n            this._context.shadowColor = StageUtils.getRgbaString(this._settings.shadowColor);\n            this._context.shadowOffsetX = this._settings.shadowOffsetX * precision;\n            this._context.shadowOffsetY = this._settings.shadowOffsetY * precision;\n            this._context.shadowBlur = this._settings.shadowBlur * precision;\n        }\n\n        // Draw text\n        const defaultColor = StageUtils.getRgbaString(this._settings.textColor);\n        let currentColor = defaultColor;\n        this._context.fillStyle = defaultColor;\n        for (const line of renderInfo.lines) {\n            for (const t of line.text) {\n                let lx = 0;\n\n                if (t.text == '\\n') {\n                    continue;\n                }\n\n                if (renderInfo.maxLines && t.lineNo >= renderInfo.maxLines) {\n                    continue;\n                }\n\n                if (t.color != currentColor) {\n                    currentColor = t.color;\n                    this._context.fillStyle = currentColor;\n                }\n\n                this._context.font = t.fontStyle;\n\n                // Draw with letter spacing\n                if (t.letters) {\n                    for (let l of t.letters) {\n                        const _x = renderInfo.lines[t.lineNo].x + t.x + lx;\n                        this._context.fillText(l.text, _x, renderInfo.lines[t.lineNo].y + renderInfo.fontSize);\n                        lx += l.width;\n                    }\n                // Standard drawing\n                } else {\n                    const _x = renderInfo.lines[t.lineNo].x + t.x;\n                    this._context.fillText(t.text, _x, renderInfo.lines[t.lineNo].y + renderInfo.fontSize);\n                }\n            }\n        }\n\n        // Reset text shadow\n        if (prevShadowSettings) {\n            this._context.shadowColor = prevShadowSettings[0];\n            this._context.shadowOffsetX = prevShadowSettings[1];\n            this._context.shadowOffsetY = prevShadowSettings[2];\n            this._context.shadowBlur = prevShadowSettings[3];\n        }\n\n        // Reset cut translation\n        if (renderInfo.cutSx || renderInfo.cutSy) {\n            this._context.translate(renderInfo.cutSx, renderInfo.cutSy);\n        }\n\n        // Postprocess renderInfo.lines to be compatible with standard version\n        renderInfo.lines = renderInfo.lines.map((l) => l.text.reduce((acc, v) => acc + v.text, ''));\n        if (renderInfo.maxLines) {\n            renderInfo.lines = renderInfo.lines.slice(0, renderInfo.maxLines);\n        }\n\n\n        this.renderInfo = renderInfo;\n\n    };\n\n    /**\n     * See {@link measureText}\n     *\n     * @param {string} word\n     * @param {number} space\n     * @returns {number}\n     */\n    measureText(word, space = 0) {\n        return measureText(this._context, word, space);\n    }\n\n    tokenize(text) {\n        return tokenizeString(/ |\\u200B|\\n|<i>|<\\/i>|<b>|<\\/b>|<color=0[xX][0-9a-fA-F]{8}>|<\\/color>/g, text);\n    }\n\n    parse(tokens) {\n        let italic = 0;\n        let bold = 0;\n        let colorStack = [StageUtils.getRgbaString(this._settings.textColor)];\n        let color = 0;\n\n        const colorRegexp = /<color=(0[xX][0-9a-fA-F]{8})>/;\n\n        return tokens.map((t) => {\n            if (t == '<i>') {\n                italic += 1;\n                t = '';\n            } else if (t == '</i>' && italic > 0) {\n                italic -= 1;\n                t = '';\n            } else if (t == '<b>') {\n                bold += 1;\n                t = '';\n            } else if (t == '</b>' && bold > 0) {\n                bold -= 1;\n                t = '';\n            } else if (t == '</color>') {\n                if (colorStack.length > 1) {\n                    color -= 1;\n                    colorStack.pop();\n                }\n                t = '';\n            } else if (colorRegexp.test(t)) {\n                const matched = colorRegexp.exec(t);\n                colorStack.push(\n                    StageUtils.getRgbaString(parseInt(matched[1]))\n                );\n                color += 1;\n                t = '';\n\n            }\n\n            return {\n                text: t,\n                italic: italic,\n                bold: bold,\n                color: colorStack[color],\n            }\n        })\n        .filter((o) => o.text != '');\n    }\n\n    applyFontStyle(word, baseFont) {\n        let font = baseFont;\n        if (word.bold) {\n            font = 'bold ' + font;\n        }\n        if (word.italic) {\n            font = 'italic ' + font;\n        }\n        this._context.font = font\n        word.fontStyle = font;\n    }\n\n    resetFontStyle(baseFont) {\n        this._context.font = baseFont;\n    }\n\n    measure(parsed, letterSpacing = 0, baseFont) {\n        for (const p of parsed) {\n            this.applyFontStyle(p, baseFont);\n            p.width = this.measureText(p.text, letterSpacing);\n\n            // Letter by letter detail for letter spacing\n            if (letterSpacing > 0) {\n                p.letters = p.text.split('').map((l) => {return {text: l}});\n                for (let l of p.letters) {\n                    l.width = this.measureText(l.text, letterSpacing);\n                }\n            }\n\n        }\n        this.resetFontStyle(baseFont);\n        return parsed;\n    }\n\n    indent(parsed, textIndent) {\n        parsed.splice(0, 0, {text: \"\", width: textIndent});\n        return parsed;\n    }\n\n    wrapWord(word, wordWrapWidth, suffix) {\n        const suffixWidth = this.measureText(suffix);\n        const wordLen = word.length\n        const wordWidth = this.measureText(word);\n\n        /* If word fits wrapWidth, do nothing */\n        if (wordWidth <= wordWrapWidth) {\n            return word;\n        }\n\n        /* Make initial guess for text cuttoff */\n        let cutoffIndex = Math.floor((wordWrapWidth * wordLen) / wordWidth);\n        let truncWordWidth = this.measureText(word.substring(0, cutoffIndex)) + suffixWidth;\n\n        /* In case guess was overestimated, shrink it letter by letter. */\n        if (truncWordWidth > wordWrapWidth) {\n            while (cutoffIndex > 0) {\n                truncWordWidth = this.measureText(word.substring(0, cutoffIndex)) + suffixWidth;\n                if (truncWordWidth > wordWrapWidth) {\n                    cutoffIndex -= 1;\n                } else {\n                    break;\n                }\n            }\n\n        /* In case guess was underestimated, extend it letter by letter. */\n        } else {\n            while (cutoffIndex < wordLen) {\n                truncWordWidth = this.measureText(word.substring(0, cutoffIndex)) + suffixWidth;\n                if (truncWordWidth < wordWrapWidth) {\n                    cutoffIndex += 1;\n                } else {\n                    // Finally, when bound is crossed, retract last letter.\n                    cutoffIndex -=1;\n                    break;\n                }\n            }\n        }\n\n        /* If wrapWidth is too short to even contain suffix alone, return empty string */\n        return word.substring(0, cutoffIndex) + (wordWrapWidth >= suffixWidth ? suffix : '')\n    }\n\n    _getBreakIndex(word, width) {\n        const wordLen = word.length;\n        const wordWidth = this.measureText(word);\n\n        if (wordWidth <= width) {\n            return {breakIndex: word.length, truncWordWidth: wordWidth};\n        }\n\n        let breakIndex = Math.floor((width * wordLen) / wordWidth);\n        let truncWordWidth = this.measureText(word.substring(0, breakIndex))\n\n        /* In case guess was overestimated, shrink it letter by letter. */\n        if (truncWordWidth > width) {\n            while (breakIndex > 0) {\n                truncWordWidth = this.measureText(word.substring(0, breakIndex));\n                if (truncWordWidth > width) {\n                    breakIndex -= 1;\n                } else {\n                    break;\n                }\n            }\n\n        /* In case guess was underestimated, extend it letter by letter. */\n        } else {\n            while (breakIndex < wordLen) {\n                truncWordWidth = this.measureText(word.substring(0, breakIndex));\n                if (truncWordWidth < width) {\n                    breakIndex += 1;\n                } else {\n                    // Finally, when bound is crossed, retract last letter.\n                    breakIndex -=1;\n                    truncWordWidth = this.measureText(word.substring(0, breakIndex));\n                    break;\n                }\n            }\n        }\n        return {breakIndex, truncWordWidth};\n\n    }\n\n    wordBreak(word, width, baseFont) {\n        if (!word.text) {\n            return word\n        }\n        this.applyFontStyle(word, baseFont)\n        const parts = [];\n        let text = word.text;\n        if (!word.letters) {\n            while (true) {\n                const {breakIndex, truncWordWidth} = this._getBreakIndex(text, width);\n                parts.push({...word});\n                parts[parts.length - 1].text = text.slice(0, breakIndex);\n                parts[parts.length - 1].width = truncWordWidth;\n\n                if (breakIndex === text.length) {\n                    break;\n                }\n\n                text = text.slice(breakIndex);\n            }\n        } else {\n            let totalWidth = 0;\n            let letters = [];\n            let breakIndex = 0;\n            for (const l of word.letters) {\n                if (totalWidth + l.width >= width) {\n                    parts.push({...word});\n                    parts[parts.length - 1].text = text.slice(0, breakIndex);\n                    parts[parts.length - 1].width = totalWidth;\n                    parts[parts.length - 1].letters = letters;\n                    text = text.slice(breakIndex);\n                    totalWidth = 0;\n                    letters = [];\n                    breakIndex = 0;\n\n                } else {\n                    breakIndex += 1;\n                    letters.push(l);\n                    totalWidth += l.width;\n                }\n            }\n\n            if (totalWidth > 0) {\n                parts.push({...word});\n                parts[parts.length - 1].text = text.slice(0, breakIndex);\n                parts[parts.length - 1].width = totalWidth;\n                parts[parts.length - 1].letters = letters;\n            }\n        }\n\n        return parts;\n    }\n\n    alignLine(parsed, initialX = 0) {\n        let prevWidth = 0;\n        let prevX = initialX;\n        for (const word of parsed) {\n            if (word.text == '\\n') {\n                continue;\n            }\n            word.x = prevX + prevWidth;\n            prevX = word.x;\n            prevWidth = word.width;\n        }\n\n    }\n}","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\n\nexport default class TextTexture extends Texture {\n\n    constructor(stage) {\n        super(stage);\n\n        // We use the stage precision as the default precision in case of a text texture.\n        this._precision = this.stage.getOption('precision');\n    }\n\n    static renderer(stage, canvas, settings) {\n        if (settings.advancedRenderer) {\n            return new TextTextureRendererAdvanced(stage, canvas, settings);\n        } else {\n            return new TextTextureRenderer(stage, canvas, settings);\n        }\n    }\n\n    get text() {\n        return this._text;\n    }\n\n    set text(v) {\n        if (this._text !== v) {\n            this._text = \"\" + v;\n            this._changed();\n        }\n    }\n\n    get w() {\n        return this._w;\n    }\n\n    set w(v) {\n        if (this._w !== v) {\n            this._w = v;\n            this._changed();\n        }\n    }\n\n    get h() {\n        return this._h;\n    }\n\n    set h(v) {\n        if (this._h !== v) {\n            this._h = v;\n            this._changed();\n        }\n    }\n\n    get fontStyle() {\n        return this._fontStyle;\n    }\n\n    set fontStyle(v) {\n        if (this._fontStyle !== v) {\n            this._fontStyle = v;\n            this._changed();\n        }\n    }\n\n    get fontBaselineRatio() {\n        return this._fontBaselineRatio;\n    }\n    \n    set fontBaselineRatio(v) {\n        if (this._fontBaselineRatio !== v) {\n            this._fontBaselineRatio = v;\n            this._changed();\n        }\n    }\n\n    get fontSize() {\n        return this._fontSize;\n    }\n\n    set fontSize(v) {\n        if (this._fontSize !== v) {\n            this._fontSize = v;\n            this._changed();\n        }\n    }\n\n    get fontFace() {\n        return this._fontFace;\n    }\n\n    set fontFace(v) {\n        if (this._fontFace !== v) {\n            this._fontFace = v;\n            this._changed();\n        }\n    }\n\n    get wordWrap() {\n        return this._wordWrap;\n    }\n\n    set wordWrap(v) {\n        if (this._wordWrap !== v) {\n            this._wordWrap = v;\n            this._changed();\n        }\n    }\n\n    get wordWrapWidth() {\n        return this._wordWrapWidth;\n    }\n\n    set wordWrapWidth(v) {\n        if (this._wordWrapWidth !== v) {\n            this._wordWrapWidth = v;\n            this._changed();\n        }\n    }\n\n    get wordBreak() {\n        return this._wordBreak;\n    }\n\n    set wordBreak(v) {\n        if (this._wordBreak !== v) {\n            this._wordBreak = v;\n            this._changed();\n        }\n    }\n\n    get textOverflow() {\n        return this._textOverflow;\n    }\n\n    set textOverflow(v) {\n        if (v != this._textOverflow) {\n            this._textOverflow = v;\n            this._changed();\n        }\n    }\n\n    get lineHeight() {\n        return this._lineHeight;\n    }\n\n    set lineHeight(v) {\n        if (this._lineHeight !== v) {\n            this._lineHeight = v;\n            this._changed();\n        }\n    }\n\n    get textBaseline() {\n        return this._textBaseline;\n    }\n\n    set textBaseline(v) {\n        if (this._textBaseline !== v) {\n            this._textBaseline = v;\n            this._changed();\n        }\n    }\n\n    get textAlign() {\n        return this._textAlign;\n    }\n\n    set textAlign(v) {\n        if (this._textAlign !== v) {\n            this._textAlign = v;\n            this._changed();\n        }\n    }\n\n    get verticalAlign() {\n        return this._verticalAlign;\n    }\n\n    set verticalAlign(v) {\n        if (this._verticalAlign !== v) {\n            this._verticalAlign = v;\n            this._changed();\n        }\n    }\n\n    get offsetY() {\n        return this._offsetY;\n    }\n\n    set offsetY(v) {\n        if (this._offsetY !== v) {\n            this._offsetY = v;\n            this._changed();\n        }\n    }\n\n    get maxLines() {\n        return this._maxLines;\n    }\n\n    set maxLines(v) {\n        if (this._maxLines !== v) {\n            this._maxLines = v;\n            this._changed();\n        }\n    }\n\n    get maxLinesSuffix() {\n        return this._maxLinesSuffix;\n    }\n\n    set maxLinesSuffix(v) {\n        if (this._maxLinesSuffix !== v) {\n            this._maxLinesSuffix = v;\n            this._changed();\n        }\n    }\n\n    get textColor() {\n        return this._textColor;\n    }\n\n    set textColor(v) {\n        if (this._textColor !== v) {\n            this._textColor = v;\n            this._changed();\n        }\n    }\n\n    get paddingLeft() {\n        return this._paddingLeft;\n    }\n\n    set paddingLeft(v) {\n        if (this._paddingLeft !== v) {\n            this._paddingLeft = v;\n            this._changed();\n        }\n    }\n\n    get paddingRight() {\n        return this._paddingRight;\n    }\n\n    set paddingRight(v) {\n        if (this._paddingRight !== v) {\n            this._paddingRight = v;\n            this._changed();\n        }\n    }\n\n    get shadow() {\n        return this._shadow;\n    }\n\n    set shadow(v) {\n        if (this._shadow !== v) {\n            this._shadow = v;\n            this._changed();\n        }\n    }\n\n    get shadowColor() {\n        return this._shadowColor;\n    }\n\n    set shadowColor(v) {\n        if (this._shadowColor !== v) {\n            this._shadowColor = v;\n            this._changed();\n        }\n    }\n\n    get shadowOffsetX() {\n        return this._shadowOffsetX;\n    }\n\n    set shadowOffsetX(v) {\n        if (this._shadowOffsetX !== v) {\n            this._shadowOffsetX = v;\n            this._changed();\n        }\n    }\n\n    get shadowOffsetY() {\n        return this._shadowOffsetY;\n    }\n\n    set shadowOffsetY(v) {\n        if (this._shadowOffsetY !== v) {\n            this._shadowOffsetY = v;\n            this._changed();\n        }\n    }\n\n    get shadowBlur() {\n        return this._shadowBlur;\n    }\n\n    set shadowBlur(v) {\n        if (this._shadowBlur !== v) {\n            this._shadowBlur = v;\n            this._changed();\n        }\n    }\n\n    get highlight() {\n        return this._highlight;\n    }\n\n    set highlight(v) {\n        if (this._highlight !== v) {\n            this._highlight = v;\n            this._changed();\n        }\n    }\n\n    get highlightHeight() {\n        return this._highlightHeight;\n    }\n\n    set highlightHeight(v) {\n        if (this._highlightHeight !== v) {\n            this._highlightHeight = v;\n            this._changed();\n        }\n    }\n\n    get highlightColor() {\n        return this._highlightColor;\n    }\n\n    set highlightColor(v) {\n        if (this._highlightColor !== v) {\n            this._highlightColor = v;\n            this._changed();\n        }\n    }\n\n    get highlightOffset() {\n        return this._highlightOffset;\n    }\n\n    set highlightOffset(v) {\n        if (this._highlightOffset !== v) {\n            this._highlightOffset = v;\n            this._changed();\n        }\n    }\n\n    get highlightPaddingLeft() {\n        return this._highlightPaddingLeft;\n    }\n\n    set highlightPaddingLeft(v) {\n        if (this._highlightPaddingLeft !== v) {\n            this._highlightPaddingLeft = v;\n            this._changed();\n        }\n    }\n\n    get highlightPaddingRight() {\n        return this._highlightPaddingRight;\n    }\n\n    set highlightPaddingRight(v) {\n        if (this._highlightPaddingRight !== v) {\n            this._highlightPaddingRight = v;\n            this._changed();\n        }\n    }\n\n    get cutSx() {\n        return this._cutSx;\n    }\n\n    set cutSx(v) {\n        if (this._cutSx !== v) {\n            this._cutSx = v;\n            this._changed();\n        }\n    }\n\n    get cutEx() {\n        return this._cutEx;\n    }\n\n    set cutEx(v) {\n        if (this._cutEx !== v) {\n            this._cutEx = v;\n            this._changed();\n        }\n    }\n\n    get cutSy() {\n        return this._cutSy;\n    }\n\n    set cutSy(v) {\n        if (this._cutSy !== v) {\n            this._cutSy = v;\n            this._changed();\n        }\n    }\n\n    get cutEy() {\n        return this._cutEy;\n    }\n\n    set cutEy(v) {\n        if (this._cutEy !== v) {\n            this._cutEy = v;\n            this._changed();\n        }\n    }\n\n    get advancedRenderer() {\n        return this._advancedRenderer;\n    }\n\n    set advancedRenderer(v) {\n        if (this._advancedRenderer !== v) {\n            this._advancedRenderer = v;\n            this._changed();\n        }\n    }\n\n    set letterSpacing(v) {\n        if (this._letterSpacing !== v) {\n            this._letterSpacing = v;\n            this._changed();\n        }\n    }\n\n    get letterSpacing() {\n        return this._letterSpacing;\n    }\n\n    set textIndent(v) {\n        if (this._textIndent !== v) {\n            this._textIndent = v;\n            this._changed();\n        }\n    }\n\n    get textIndent() {\n        return this._textIndent;\n    }\n\n    set rtl(v) {\n        if (this._rtl !== v) {\n            this._rtl = v;\n            this._changed();\n        }\n    }\n\n    get rtl() {\n        return this._rtl;\n    }\n\n    get precision() {\n        return super.precision;\n    }\n\n    set precision(v) {\n        // We actually draw differently when the precision changes.\n        if (this.precision !== v) {\n            super.precision = v;\n            this._changed();\n        }\n    }\n\n    _getIsValid() {\n        return !!this.text;\n    }\n\n    _getLookupId() {\n        let parts = [];\n\n        if (this.w !== 0) parts.push(\"w \" + this.w);\n        if (this.h !== 0) parts.push(\"h \" + this.h);\n        if (this.fontStyle !== \"normal\") parts.push(\"fS\" + this.fontStyle);\n        if (this.fontSize !== 40) parts.push(\"fs\" + this.fontSize);\n        if (this.fontBaselineRatio !== 0) parts.push('fb' + this.fontBaselineRatio);\n        if (this.fontFace !== null) parts.push(\"ff\" + (Array.isArray(this.fontFace) ? this.fontFace.join(\",\") : this.fontFace));\n        if (this.wordWrap !== true) parts.push(\"wr\" + (this.wordWrap ? 1 : 0));\n        if (this.wordWrapWidth !== 0) parts.push(\"ww\" + this.wordWrapWidth);\n        if (this.wordBreak !== false) parts.push(\"wb\" + this.wordBreak ? 1 : 0);\n        if (this.textOverflow != \"\") parts.push(\"to\" + this.textOverflow);\n        if (this.lineHeight !== null) parts.push(\"lh\" + this.lineHeight);\n        if (this.textBaseline !== \"alphabetic\") parts.push(\"tb\" + this.textBaseline);\n        if (this.textAlign !== \"left\") parts.push(\"ta\" + this.textAlign);\n        if (this.verticalAlign !== \"top\") parts.push(\"va\" + this.verticalAlign);\n        if (this.offsetY !== null) parts.push(\"oy\" + this.offsetY);\n        if (this.maxLines !== 0) parts.push(\"ml\" + this.maxLines);\n        if (this.maxLinesSuffix !== \"..\") parts.push(\"ms\" + this.maxLinesSuffix);\n        parts.push(\"pc\" + this.precision);\n        if (this.textColor !== 0xffffffff) parts.push(\"co\" + this.textColor.toString(16));\n        if (this.paddingLeft !== 0) parts.push(\"pl\" + this.paddingLeft);\n        if (this.paddingRight !== 0) parts.push(\"pr\" + this.paddingRight);\n        if (this.shadow !== false) parts.push(\"sh\" + (this.shadow ? 1 : 0));\n        if (this.shadowColor !== 0xff000000) parts.push(\"sc\" + this.shadowColor.toString(16));\n        if (this.shadowOffsetX !== 0) parts.push(\"sx\" + this.shadowOffsetX);\n        if (this.shadowOffsetY !== 0) parts.push(\"sy\" + this.shadowOffsetY);\n        if (this.shadowBlur !== 5) parts.push(\"sb\" + this.shadowBlur);\n        if (this.highlight !== false) parts.push(\"hL\" + (this.highlight ? 1 : 0));\n        if (this.highlightHeight !== 0) parts.push(\"hh\" + this.highlightHeight);\n        if (this.highlightColor !== 0xff000000) parts.push(\"hc\" + this.highlightColor.toString(16));\n        if (this.highlightOffset !== null) parts.push(\"ho\" + this.highlightOffset);\n        if (this.highlightPaddingLeft !== null) parts.push(\"hl\" + this.highlightPaddingLeft);\n        if (this.highlightPaddingRight !== null) parts.push(\"hr\" + this.highlightPaddingRight);\n        if (this.letterSpacing !== null) parts.push(\"ls\" + this.letterSpacing);\n        if (this.textIndent !== null) parts.push(\"ti\" + this.textIndent);\n\n        if (this.cutSx) parts.push(\"csx\" + this.cutSx);\n        if (this.cutEx) parts.push(\"cex\" + this.cutEx);\n        if (this.cutSy) parts.push(\"csy\" + this.cutSy);\n        if (this.cutEy) parts.push(\"cey\" + this.cutEy);\n\n        if (this.advancedRenderer) parts.push(\"aR\" + this.advancedRenderer ? 1 : 0);\n\n        let id = \"TX$\" + parts.join(\"|\") + \":\" + this.text;\n        return id;\n    }\n\n    _getSourceLoader() {\n        const args = this.cloneArgs();\n\n        const gl = this.stage.gl;\n\n        return function (cb) {\n            const canvas = this.stage.platform.getDrawingCanvas();\n            const renderer = TextTexture.renderer(this.stage, canvas, args);\n            \n            const p = renderer.draw();\n\n            const texParams = {};\n\n            const sharpCfg = this.stage.getOption('fontSharp');\n            let sharpen = false;\n\n            // Prevent text blur when text texture is downscaled\n            if (Utils.isBoolean(sharpCfg)) {\n                sharpen = sharpCfg;\n            } else if (Utils.isObject(sharpCfg)) {\n                const precision = this.stage.getRenderPrecision();\n                sharpen = precision <= sharpCfg.precision && args.fontSize <= sharpCfg.fontSize;\n            }\n\n            if (gl && sharpen) {\n                texParams[gl.TEXTURE_MAG_FILTER] = gl.NEAREST;\n            }\n\n            if (p) {\n                p.then(() => {\n                    /* FIXME: on some platforms (e.g. RPI), throttling text textures cause artifacts */\n                    cb(null, Object.assign({\n                        renderInfo: renderer.renderInfo,\n                        throttle: false,\n                        texParams: texParams,\n                    }, this.stage.platform.getTextureOptionsForDrawingCanvas(canvas)));\n                }).catch((err) => {\n                    cb(err);\n                });\n            } else {\n                cb(null, Object.assign({\n                    renderInfo: renderer.renderInfo,\n                    throttle: false,\n                    texParams: texParams,\n                }, this.stage.platform.getTextureOptionsForDrawingCanvas(canvas)));\n            }\n        };\n    }\n\n\n    getNonDefaults() {\n        const nonDefaults = super.getNonDefaults();\n        if (this.text !== \"\") nonDefaults['text'] = this.text;\n        if (this.w !== 0) nonDefaults['w'] = this.w;\n        if (this.h !== 0) nonDefaults['h'] = this.h;\n        if (this.fontStyle !== \"normal\") nonDefaults['fontStyle'] = this.fontStyle;\n        if (this.fontSize !== 40) nonDefaults[\"fontSize\"] = this.fontSize;\n        if (this.fontBaselineRatio !== 0) nonDefaults['fontBaselineRatio'] = this.fontBaselineRatio;\n        if (this.fontFace !== null) nonDefaults[\"fontFace\"] = this.fontFace;\n        if (this.wordWrap !== true) nonDefaults[\"wordWrap\"] = this.wordWrap;\n        if (this.wordWrapWidth !== 0) nonDefaults[\"wordWrapWidth\"] = this.wordWrapWidth;\n        if (this.wordBreak !== false) nonDefaults[\"wordBreak\"] = this.wordBreak;\n        if (this.textOverflow != \"\") nonDefaults[\"textOverflow\"] = this.textOverflow;\n        if (this.lineHeight !== null) nonDefaults[\"lineHeight\"] = this.lineHeight;\n        if (this.textBaseline !== \"alphabetic\") nonDefaults[\"textBaseline\"] = this.textBaseline;\n        if (this.textAlign !== \"left\") nonDefaults[\"textAlign\"] = this.textAlign;\n        if (this.verticalAlign !== \"top\") nonDefaults[\"verticalAlign\"] = this.verticalAlign;\n        if (this.offsetY !== null) nonDefaults[\"offsetY\"] = this.offsetY;\n        if (this.maxLines !== 0) nonDefaults[\"maxLines\"] = this.maxLines;\n        if (this.maxLinesSuffix !== \"..\") nonDefaults[\"maxLinesSuffix\"] = this.maxLinesSuffix;\n        if (this.precision !== this.stage.getOption('precision')) nonDefaults[\"precision\"] = this.precision;\n        if (this.textColor !== 0xffffffff) nonDefaults[\"textColor\"] = this.textColor;\n        if (this.paddingLeft !== 0) nonDefaults[\"paddingLeft\"] = this.paddingLeft;\n        if (this.paddingRight !== 0) nonDefaults[\"paddingRight\"] = this.paddingRight;\n        if (this.shadow !== false) nonDefaults[\"shadow\"] = this.shadow;\n        if (this.shadowColor !== 0xff000000) nonDefaults[\"shadowColor\"] = this.shadowColor;\n        if (this.shadowOffsetX !== 0) nonDefaults[\"shadowOffsetX\"] = this.shadowOffsetX;\n        if (this.shadowOffsetY !== 0) nonDefaults[\"shadowOffsetY\"] = this.shadowOffsetY;\n        if (this.shadowBlur !== 5) nonDefaults[\"shadowBlur\"] = this.shadowBlur;\n        if (this.highlight !== false) nonDefaults[\"highlight\"] = this.highlight;\n        if (this.highlightHeight !== 0) nonDefaults[\"highlightHeight\"] = this.highlightHeight;\n        if (this.highlightColor !== 0xff000000) nonDefaults[\"highlightColor\"] = this.highlightColor;\n        if (this.highlightOffset !== 0) nonDefaults[\"highlightOffset\"] = this.highlightOffset;\n        if (this.highlightPaddingLeft !== 0) nonDefaults[\"highlightPaddingLeft\"] = this.highlightPaddingLeft;\n        if (this.highlightPaddingRight !== 0) nonDefaults[\"highlightPaddingRight\"] = this.highlightPaddingRight;\n        if (this.letterSpacing !== 0) nonDefaults[\"letterSpacing\"] = this.letterSpacing;\n        if (this.textIndent !== 0) nonDefaults[\"textIndent\"] = this.textIndent;\n        if (this.rtl !== 0) nonDefaults[\"rtl\"] = this.rtl;\n\n        if (this.cutSx) nonDefaults[\"cutSx\"] = this.cutSx;\n        if (this.cutEx) nonDefaults[\"cutEx\"] = this.cutEx;\n        if (this.cutSy) nonDefaults[\"cutSy\"] = this.cutSy;\n        if (this.cutEy) nonDefaults[\"cutEy\"] = this.cutEy;\n\n        if (this.advancedRenderer) nonDefaults[\"renderer\"] = this.advancedRenderer;\n        return nonDefaults;\n    }\n\n    cloneArgs() {\n        let obj = {};\n        obj.text = this._text;\n        obj.w = this._w;\n        obj.h = this._h;\n        obj.fontStyle = this._fontStyle;\n        obj.fontSize = this._fontSize;\n        obj.fontBaselineRatio = this._fontBaselineRatio;\n        obj.fontFace = this._fontFace;\n        obj.wordWrap = this._wordWrap;\n        obj.wordWrapWidth = this._wordWrapWidth;\n        obj.wordBreak = this._wordBreak;\n        obj.textOverflow = this._textOverflow;\n        obj.lineHeight = this._lineHeight;\n        obj.textBaseline = this._textBaseline;\n        obj.textAlign = this._textAlign;\n        obj.verticalAlign = this._verticalAlign;\n        obj.offsetY = this._offsetY;\n        obj.maxLines = this._maxLines;\n        obj.maxLinesSuffix = this._maxLinesSuffix;\n        obj.precision = this._precision;\n        obj.textColor = this._textColor;\n        obj.paddingLeft = this._paddingLeft;\n        obj.paddingRight = this._paddingRight;\n        obj.shadow = this._shadow;\n        obj.shadowColor = this._shadowColor;\n        obj.shadowOffsetX = this._shadowOffsetX;\n        obj.shadowOffsetY = this._shadowOffsetY;\n        obj.shadowBlur = this._shadowBlur;\n        obj.highlight = this._highlight;\n        obj.highlightHeight = this._highlightHeight;\n        obj.highlightColor = this._highlightColor;\n        obj.highlightOffset = this._highlightOffset;\n        obj.highlightPaddingLeft = this._highlightPaddingLeft;\n        obj.highlightPaddingRight = this._highlightPaddingRight;\n        obj.letterSpacing = this._letterSpacing;\n        obj.textIndent = this._textIndent;\n        obj.rtl = this._rtl;\n        obj.cutSx = this._cutSx;\n        obj.cutEx = this._cutEx;\n        obj.cutSy = this._cutSy;\n        obj.cutEy = this._cutEy;\n        obj.advancedRenderer = this._advancedRenderer;\n        return obj;\n    }\n\n\n}\n\n// Because there are so many properties, we prefer to use the prototype for default values.\n// This causes a decrease in performance, but also a decrease in memory usage.\nlet proto = TextTexture.prototype;\nproto._text = \"\";\nproto._w = 0;\nproto._h = 0;\nproto._fontStyle = \"normal\";\nproto._fontSize = 40;\nproto._fontFace = null;\nproto._wordWrap = true;\nproto._wordWrapWidth = 0;\nproto._wordBreak = false;\nproto._textOverflow = \"\";\nproto._lineHeight = null;\nproto._textBaseline = \"alphabetic\";\nproto._textAlign = \"left\";\nproto._verticalAlign = \"top\";\nproto._offsetY = null;\nproto._maxLines = 0;\nproto._maxLinesSuffix = \"..\";\nproto._textColor = 0xFFFFFFFF;\nproto._paddingLeft = 0;\nproto._paddingRight = 0;\nproto._shadow = false;\nproto._shadowColor = 0xFF000000;\nproto._shadowOffsetX = 0;\nproto._shadowOffsetY = 0;\nproto._shadowBlur = 5;\nproto._highlight = false;\nproto._highlightHeight = 0;\nproto._highlightColor = 0xFF000000;\nproto._highlightOffset = 0;\nproto._highlightPaddingLeft = 0;\nproto._highlightPaddingRight = 0;\nproto._letterSpacing = 0;\nproto._textIndent = 0;\nproto._rtl = 0;\nproto._cutSx = 0;\nproto._cutEx = 0;\nproto._cutSy = 0;\nproto._cutEy = 0;\nproto._advancedRenderer = false;\nproto._fontBaselineRatio = 0;\n\n\nimport TextTextureRenderer from \"./TextTextureRenderer.mjs\";\nimport TextTextureRendererAdvanced from \"./TextTextureRendererAdvanced.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class SourceTexture extends Texture {\n\n    constructor(stage) {\n        super(stage);\n\n        this._textureSource = undefined;\n    }\n\n    get textureSource() {\n        return this._textureSource;\n    }\n\n    set textureSource(v) {\n        if (v !== this._textureSource) {\n            if (v.isResultTexture) {\n                // In case of a result texture, automatically inherit the precision.\n                this._precision = this.stage.getRenderPrecision();\n            }\n            this._textureSource = v;\n            this._changed();\n        }\n    }\n\n    _getTextureSource() {\n        return this._textureSource;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport EventEmitter from \"../EventEmitter.mjs\";\n\nexport default class Transition extends EventEmitter {\n\n    constructor(manager, settings, element, property) {\n        super();\n\n        this.manager = manager;\n\n        this._settings = settings;\n\n        this._element = element;\n\n        this._getter = element.constructor.getGetter(property);\n        this._setter = element.constructor.getSetter(property);\n\n        this._merger = settings.merger;\n\n        if (!this._merger) {\n            this._merger = element.constructor.getMerger(property);\n        }\n\n        this._startValue = this._getter(this._element);\n        this._targetValue = this._startValue;\n\n        this._p = 1;\n        this._delayLeft = 0;\n    }\n\n    start(targetValue) {\n        this._startValue = this._getter(this._element);\n\n        if (!this.isAttached()) {\n            // We don't support transitions on non-attached elements. Just set value without invoking listeners.\n            this._targetValue = targetValue;\n            this._p = 1;\n            this._updateDrawValue();\n        } else {\n            if (targetValue === this._startValue) {\n                this.reset(targetValue, 1);\n            } else {\n                this._targetValue = targetValue;\n                this._p = 0;\n                this._delayLeft = this._settings.delay;\n                this.emit('start');\n                this.add();\n            }\n        }\n    }\n\n    finish() {\n        if (this._p < 1) {\n            // Value setting and will must be invoked (async) upon next transition cycle.\n            this._p = 1;\n        }\n    }\n\n    stop() {\n        // Just stop where the transition is at.\n        this.emit('stop');\n        this.manager.removeActive(this);\n    }\n\n    pause() {\n        this.stop();\n    }\n\n    play() {\n        this.manager.addActive(this);\n    }\n\n    reset(targetValue, p) {\n        if (!this.isAttached()) {\n            // We don't support transitions on non-attached elements. Just set value without invoking listeners.\n            this._startValue = this._getter(this._element);\n            this._targetValue = targetValue;\n            this._p = 1;\n            this._updateDrawValue();\n        } else {\n            this._startValue = this._getter(this._element);\n            this._targetValue = targetValue;\n            this._p = p;\n            this.add();\n        }\n    }\n\n    _updateDrawValue() {\n        this._setter(this._element, this.getDrawValue());\n    }\n\n    add() {\n        this.manager.addActive(this);\n    }\n\n    isAttached() {\n        return this._element.attached;\n    }\n\n    isRunning() {\n        return (this._p < 1.0);\n    }\n\n    progress(dt) {\n        if (!this.isAttached()) {\n            // Skip to end of transition so that it is removed.\n            this._p = 1;\n        }\n\n        if (this.p < 1) {\n            if (this.delayLeft > 0) {\n                this._delayLeft -= dt;\n\n                if (this.delayLeft < 0) {\n                    dt = -this.delayLeft;\n                    this._delayLeft = 0;\n\n                    this.emit('delayEnd');\n                } else {\n                    return;\n                }\n            }\n\n            if (this._settings.duration == 0) {\n                this._p = 1;\n            } else {\n                this._p += dt / this._settings.duration;\n            }\n            if (this._p >= 1) {\n                // Finished!;\n                this._p = 1;\n            }\n        }\n\n        this._updateDrawValue();\n\n        this.invokeListeners();\n    }\n\n    invokeListeners() {\n        this.emit('progress', this.p);\n        if (this.p === 1) {\n            this.emit('finish');\n        }\n    }\n\n    updateTargetValue(targetValue) {\n        let t = this._settings.timingFunctionImpl(this.p);\n        if (t === 1) {\n            this._targetValue = targetValue;\n        } else if (t === 0) {\n            this._startValue = this._targetValue;\n            this._targetValue = targetValue;\n        } else {\n            this._startValue = targetValue - ((targetValue - this._targetValue) / (1 - t));\n            this._targetValue = targetValue;\n        }\n    }\n\n    getDrawValue() {\n        if (this.p >= 1) {\n            return this.targetValue;\n        } else {\n            let v = this._settings._timingFunctionImpl(this.p);\n            return this._merger(this.targetValue, this.startValue, v);\n        }\n    }\n\n    skipDelay() {\n        this._delayLeft = 0;\n    }\n\n    get startValue() {\n        return this._startValue;\n    }\n\n    get targetValue() {\n        return this._targetValue;\n    }\n\n    get p() {\n        return this._p;\n    }\n\n    get delayLeft() {\n        return this._delayLeft;\n    }\n\n    get element() {\n        return this._element;\n    }\n\n    get settings() {\n        return this._settings;\n    }\n\n    set settings(v) {\n        this._settings = v;\n    }\n\n}\n\nTransition.prototype.isTransition = true;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Manages a list of objects.\n * Objects may be patched. Then, they can be referenced using the 'ref' (string) property.\n */\nexport default class ObjectList {\n\n    constructor() {\n        this._items = [];\n        this._refs = {}\n    }\n\n    get() {\n        return this._items;\n    }\n\n    get first() {\n        return this._items[0];\n    }\n\n    get last() {\n        return this._items.length ? this._items[this._items.length - 1] : undefined;\n    }\n\n    add(item) {\n        this.addAt(item, this._items.length);\n    }\n\n    addAt(item, index) {\n        if (index >= 0 && index <= this._items.length) {\n            let currentIndex = this._items.indexOf(item);\n            if (currentIndex === index) {\n                return item;\n            }\n\n            if (Utils.isObjectLiteral(item)) {\n                const o = item;\n                item = this.createItem(o);\n                item.patch(o);\n            }\n\n            if (currentIndex != -1) {\n                this.setAt(item, index);\n            } else {\n                if (item.ref) {\n                    this._refs[item.ref] = item;\n                }\n                this._items.splice(index, 0, item);\n                this.onAdd(item, index);\n            }\n        } else {\n            throw new Error('addAt: The index ' + index + ' is out of bounds ' + this._items.length);\n        }\n    }\n\n    replaceByRef(item) {\n        if (item.ref) {\n            const existingItem = this.getByRef(item.ref);\n            if (!existingItem) {\n                throw new Error('replaceByRef: no item found with reference: ' + item.ref);\n            }\n            this.replace(item, existingItem);\n        } else {\n            throw new Error('replaceByRef: no ref specified in item');\n        }\n        this.addAt(item, this._items.length);\n\n    }\n\n    replace(item, prevItem) {\n        const index = this.getIndex(prevItem);\n        if (index === -1) {\n            throw new Error('replace: The previous item does not exist');\n        }\n        this.setAt(item, index);\n    }\n\n    setAt(item, index) {\n        if (index >= 0 && index <= this._items.length) {\n\n            if (Utils.isObjectLiteral(item)) {\n                const o = item;\n                item = this.createItem(o);\n                item.patch(o);\n            }\n\n            let currentIndex = this._items.indexOf(item);\n            if (currentIndex != -1) {\n                if (currentIndex !== index) {\n                    const fromIndex = currentIndex;\n                    if (fromIndex !== index) {\n                        this._items.splice(fromIndex, 1);\n                        this._items.splice(index, 0, item);\n                        this.onMove(item, fromIndex, index);\n                    }\n                }\n            } else {\n                if( index < this._items.length){\n\n                    if (this._items[index].ref) {\n                        this._refs[this._items[index].ref] = undefined;\n                    }\n\n                    const prevItem = this._items[index];\n\n                    // Doesn't exist yet: overwrite current.\n                    this._items[index] = item;\n\n                    if (item.ref) {\n                        this._refs[item.ref] = item;\n                    }\n\n                    this.onSet(item, index, prevItem);\n                } else {\n                    throw new Error('setAt: The index ' + index + ' is out of bounds ' + this._items.length);\n                }\n            }\n        } else {\n            throw new Error('setAt: The index ' + index + ' is out of bounds ' + this._items.length);\n        }\n    }\n\n    getAt(index) {\n        return this._items[index];\n    }\n\n    getIndex(item) {\n        return this._items.indexOf(item);\n    }\n\n    remove(item) {\n        let index = this._items.indexOf(item);\n\n        if (index !== -1) {\n            this.removeAt(index);\n        }\n    };\n\n    removeAt(index) {\n        if (index >= 0 && index < this._items.length) {\n            const item = this._items[index];\n\n            if (item.ref) {\n                this._refs[item.ref] = undefined;\n            }\n\n            this._items.splice(index, 1);\n\n            this.onRemove(item, index);\n\n            return item;\n        } else {\n            throw new Error(`removeAt: The index ${index} is out of bounds ${this._items.length - 1}`);\n        }\n    };\n\n    clear() {\n        let n = this._items.length;\n        if (n) {\n            let prev = this._items;\n            this._items = [];\n            this._refs = {}\n            this.onSync(prev, [], []);\n        }\n    };\n\n    a(o) {\n        if (Utils.isObjectLiteral(o)) {\n            let c = this.createItem(o);\n            c.patch(o);\n            this.add(c);\n            return c;\n        } else if (Array.isArray(o)) {\n            for (let i = 0, n = o.length; i < n; i++) {\n                this.a(o[i]);\n            }\n            return null;\n        } else if (this.isItem(o)) {\n            this.add(o);\n            return o;\n        }\n    };\n\n    get length() {\n        return this._items.length;\n    }\n\n    _getRefs() {\n        return this._refs;\n    }\n\n    getByRef(ref) {\n        return this._refs[ref];\n    }\n\n    clearRef(ref) {\n        delete this._refs[ref];\n    }\n\n    setRef(ref, child) {\n        this._refs[ref] = child;\n    }\n\n    patch(settings) {\n        if (Utils.isObjectLiteral(settings)) {\n            this._setByObject(settings);\n        } else if (Array.isArray(settings)) {\n            this._setByArray(settings);\n        }\n    }\n\n    _setByObject(settings) {\n        // Overrule settings of known referenced items.\n        let refs = this._getRefs();\n        let crefs = Object.keys(settings);\n        for (let i = 0, n = crefs.length; i < n; i++) {\n            let cref = crefs[i];\n            let s = settings[cref];\n\n            let c = refs[cref];\n            if (!c) {\n                if (this.isItem(s)) {\n                    // Replace previous item;\n                    s.ref = cref;\n                    this.add(s);\n                } else {\n                    // Create new item.\n                    c = this.createItem(s);\n                    c.ref = cref;\n                    c.patch(s);\n                    this.add(c);\n                }\n            } else {\n                if (this.isItem(s)) {\n                    if (c !== s) {\n                        // Replace previous item;\n                        let idx = this.getIndex(c);\n                        s.ref = cref;\n                        this.setAt(s, idx);\n                    }\n                } else {\n                    c.patch(s);\n                }\n            }\n        }\n    }\n\n    _equalsArray(array) {\n        let same = true;\n        if (array.length === this._items.length) {\n            for (let i = 0, n = this._items.length; (i < n) && same; i++) {\n                same = same && (this._items[i] === array[i]);\n            }\n        } else {\n            same = false;\n        }\n        return same;\n    }\n\n    _setByArray(array) {\n        // For performance reasons, first check if the arrays match exactly and bail out if they do.\n        if (this._equalsArray(array)) {\n            return;\n        }\n\n        for (let i = 0, n = this._items.length; i < n; i++) {\n            this._items[i].marker = true;\n        }\n\n        let refs;\n        let newItems = [];\n        for (let i = 0, n = array.length; i < n; i++) {\n            let s = array[i];\n            if (this.isItem(s)) {\n                s.marker = false;\n                newItems.push(s);\n            } else {\n                let cref = s.ref;\n                let c;\n                if (cref) {\n                    if (!refs) refs = this._getRefs();\n                    c = refs[cref];\n                }\n\n                if (!c) {\n                    // Create new item.\n                    c = this.createItem(s);\n                } else {\n                    c.marker = false;\n                }\n\n                if (Utils.isObjectLiteral(s)) {\n                    c.patch(s);\n                }\n\n                newItems.push(c);\n            }\n        }\n\n        this._setItems(newItems);\n    }\n\n    _setItems(newItems) {\n        let prevItems = this._items;\n        this._items = newItems;\n\n        // Remove the items.\n        let removed = prevItems.filter(item => {let m = item.marker; delete item.marker; return m});\n        let added = newItems.filter(item => (prevItems.indexOf(item) === -1));\n\n        if (removed.length || added.length) {\n            // Recalculate refs.\n            this._refs = {}\n            for (let i = 0, n = this._items.length; i < n; i++) {\n                let ref = this._items[i].ref;\n                if (ref) {\n                    this._refs[ref] = this._items[i];\n                }\n            }\n        }\n\n        this.onSync(removed, added, newItems);\n    }\n\n    sort(f) {\n        const items = this._items.slice();\n        items.sort(f);\n        this._setByArray(items);\n    }\n\n    onAdd(item, index) {\n    }\n\n    onRemove(item, index) {\n    }\n\n    onSync(removed, added, order) {\n    }\n\n    onSet(item, index, prevItem) {\n    }\n\n    onMove(item, fromIndex, toIndex) {\n    }\n\n    createItem(object) {\n        throw new Error(\"ObjectList.createItem must create and return a new object\");\n    }\n\n    isItem(object) {\n        return false;\n    }\n\n    forEach(f) {\n        this.get().forEach(f);\n    }\n\n}\n\nimport Utils from \"./Utils.mjs\";\n\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Manages the list of children for an element.\n */\n\nimport ObjectList from \"./ObjectList.mjs\";\n\nexport default class ElementChildList extends ObjectList {\n\n    constructor(element) {\n        super();\n        this._element = element;\n    }\n\n    _connectParent(item) {\n        const prevParent = item.parent;\n        if (prevParent && prevParent !== this._element) {\n            // Cleanup in previous child list, without\n            const prevChildList = item.parent.childList;\n            const index = prevChildList.getIndex(item);\n\n            if (item.ref) {\n                prevChildList._refs[item.ref] = undefined;\n            }\n            prevChildList._items.splice(index, 1);\n\n            // Also clean up element core.\n            prevParent.core.removeChildAt(index);\n\n        }\n\n        item._setParent(this._element);\n\n        // We are expecting the caller to sync it to the core.\n    }\n\n    onAdd(item, index) {\n        this._connectParent(item);\n        this._element.core.addChildAt(index, item.core);\n    }\n\n    onRemove(item, index) {\n        item._setParent(null);\n        this._element.core.removeChildAt(index);\n    }\n\n    onSync(removed, added, order) {\n        for (let i = 0, n = removed.length; i < n; i++) {\n            removed[i]._setParent(null);\n        }\n        for (let i = 0, n = added.length; i < n; i++) {\n            this._connectParent(added[i]);\n        }\n        let gc = i => i.core;\n        this._element.core.syncChildren(removed.map(gc), added.map(gc), order.map(gc));\n    }\n\n    onSet(item, index, prevItem) {\n        prevItem._setParent(null);\n\n        this._connectParent(item);\n        this._element.core.setChildAt(index, item.core);\n    }\n\n    onMove(item, fromIndex, toIndex) {\n        this._element.core.moveChild(fromIndex, toIndex);\n    }\n\n    createItem(object) {\n        if (object.type) {\n            return new object.type(this._element.stage);\n        } else {\n            return this._element.stage.createElement();\n        }\n    }\n\n    isItem(object) {\n        return object.isElement;\n    }\n\n}\n\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Render tree node.\n */\n\nimport StageUtils from \"./StageUtils.mjs\";\nimport ElementCore from \"./core/ElementCore.mjs\";\nimport Base from \"./Base.mjs\";\n\nimport Utils from \"./Utils.mjs\";\nimport EventEmitter from \"../EventEmitter.mjs\";\nimport Shader from \"./Shader.mjs\";\n\nexport default class Element {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        this.__id = Element.id++;\n\n        this.__start();\n\n        // EventEmitter constructor.\n        this._hasEventListeners = false;\n\n        this.__core = new ElementCore(this);\n\n        /**\n         * A reference that can be used while merging trees.\n         * @type {string}\n         */\n        this.__ref = null;\n\n        /**\n         * An element is attached if it is a descendant of the stage root.\n         * @type {boolean}\n         */\n        this.__attached = false;\n\n        /**\n         * An element is enabled when it is attached and it is visible (worldAlpha > 0).\n         * @type {boolean}\n         */\n        this.__enabled = false;\n\n        /**\n         * An element is active when it is enabled and it is within bounds.\n         * @type {boolean}\n         */\n        this.__active = false;\n\n        /**\n         * @type {Element}\n         */\n        this.__parent = null;\n\n        /**\n         * The texture that is currently set.\n         * @type {Texture}\n         */\n        this.__texture = null;\n\n        /**\n         * The currently displayed texture. While this.texture is loading, this one may be different.\n         * @type {Texture}\n         */\n        this.__displayedTexture = null;\n\n        /**\n         * Tags that can be used to identify/search for a specific element.\n         * @type {String[]}\n         */\n        this.__tags = null;\n\n        /**\n         * The tree's tags mapping.\n         * This contains all elements for all known tags, at all times.\n         * @type {Map}\n         */\n        this.__treeTags = null;\n\n        /**\n         * Creates a tag context: tagged elements in this branch will not be reachable from ancestors of this elements.\n         * @type {boolean}\n         */\n        this.__tagRoot = false;\n\n        /**\n         * (Lazy-initialised) list of children owned by this elements.\n         * @type {ElementChildList}\n         */\n        this.__childList = null;\n\n        this._w = 0;\n\n        this._h = 0;\n    }\n\n    __start() {\n    }\n\n    get id() {\n        return this.__id;\n    }\n\n    set ref(ref) {\n        if (this.__ref !== ref) {\n            const charcode = ref.charCodeAt(0);\n            if (!Utils.isUcChar(charcode)) {\n                this._throwError(\"Ref must start with an upper case character: \" + ref);\n            }\n            if (this.__ref !== null) {\n                this.removeTag(this.__ref);\n                if (this.__parent) {\n                    this.__parent.__childList.clearRef(this.__ref);\n                }\n            }\n\n            this.__ref = ref;\n\n            if (this.__ref) {\n                this._addTag(this.__ref);\n                if (this.__parent) {\n                    this.__parent.__childList.setRef(this.__ref, this);\n                }\n            }\n        }\n    }\n\n    get ref() {\n        return this.__ref;\n    }\n\n    get core() {\n        return this.__core;\n    }\n\n    setAsRoot() {\n        this.__core.setAsRoot();\n        this._updateAttachedFlag();\n        this._updateEnabledFlag();\n    }\n\n    get isRoot() {\n        return this.__core.isRoot;\n    }\n\n    _setParent(parent) {\n        if (this.__parent === parent) return;\n\n        if (this.__parent) {\n            this._unsetTagsParent();\n        }\n\n        this.__parent = parent;\n\n        if (parent) {\n            this._setTagsParent();\n        }\n\n        this._updateAttachedFlag();\n        this._updateEnabledFlag();\n        this._updateCollision();\n\n        if (this.isRoot && parent) {\n            this._throwError(\"Root should not be added as a child! Results are unspecified!\");\n        }\n    };\n\n    getDepth() {\n        let depth = 0;\n\n        let p = this.__parent;\n        while(p) {\n            depth++;\n            p = p.__parent;\n        }\n\n        return depth;\n    };\n\n    getAncestor(l) {\n        let p = this;\n        while (l > 0 && p.__parent) {\n            p = p.__parent;\n            l--;\n        }\n        return p;\n    };\n\n    getAncestors() {\n        const a = [];\n        let p = this;\n        while (p) {\n            a.push(p);\n            p = p.__parent;\n        }\n        return a;\n    }\n\n    getAncestorAtDepth(depth) {\n        let levels = this.getDepth() - depth;\n        if (levels < 0) {\n            return null;\n        }\n        return this.getAncestor(levels);\n    };\n\n    isAncestorOf(c) {\n        let p = c;\n        while(p = p.parent) {\n            if (this === p) {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    getSharedAncestor(c) {\n        let o1 = this;\n        let o2 = c;\n        let l1 = o1.getDepth();\n        let l2 = o2.getDepth();\n        if (l1 > l2) {\n            o1 = o1.getAncestor(l1 - l2);\n        } else if (l2 > l1) {\n            o2 = o2.getAncestor(l2 - l1);\n        }\n\n        do {\n            if (o1 === o2) {\n                return o1;\n            }\n\n            o1 = o1.__parent;\n            o2 = o2.__parent;\n        } while (o1 && o2);\n\n        return null;\n    };\n\n    get attached() {\n        return this.__attached;\n    }\n\n    get enabled() {\n        return this.__enabled;\n    }\n\n    get active() {\n        return this.__active;\n    }\n\n    _isAttached() {\n        return (this.__parent ? this.__parent.__attached : (this.stage.root === this));\n    };\n\n    _isEnabled() {\n        return this.__core.visible && (this.__core.alpha > 0) && (this.__parent ? this.__parent.__enabled : (this.stage.root === this));\n    };\n\n    _isActive() {\n        return this._isEnabled() && this.withinBoundsMargin;\n    };\n\n    /**\n     * Updates the 'attached' flag for this branch.\n     */\n    _updateAttachedFlag() {\n        let newAttached = this._isAttached();\n        if (this.__attached !== newAttached) {\n            this.__attached = newAttached;\n\n            if (newAttached) {\n                this._onSetup();\n            }\n\n            let children = this._children.get();\n            if (children) {\n                let m = children.length;\n                if (m > 0) {\n                    for (let i = 0; i < m; i++) {\n                        children[i]._updateAttachedFlag();\n                    }\n                }\n            }\n\n            if (newAttached) {\n                this._onAttach();\n            } else {\n                this._onDetach();\n            }\n        }\n    };\n\n    /**\n     * Updates the 'enabled' flag for this branch.\n     */\n    _updateEnabledFlag() {\n        let newEnabled = this._isEnabled();\n        if (this.__enabled !== newEnabled) {\n            if (newEnabled) {\n                this._onEnabled();\n                this._setEnabledFlag();\n            } else {\n                this._onDisabled();\n                this._unsetEnabledFlag();\n            }\n\n            let children = this._children.get();\n            if (children) {\n                let m = children.length;\n                if (m > 0) {\n                    for (let i = 0; i < m; i++) {\n                        children[i]._updateEnabledFlag();\n                    }\n                }\n            }\n        }\n    };\n\n    _setEnabledFlag() {\n        this.__enabled = true;\n\n        // Force re-check of texture because dimensions might have changed (cutting).\n        this._updateDimensions();\n        this._updateTextureCoords();\n\n        if (this.__texture) {\n            this.__texture.addElement(this);\n        }\n\n        if (this.withinBoundsMargin) {\n            this._setActiveFlag();\n        }\n\n        if (this.__core.shader) {\n            this.__core.shader.addElement(this.__core);\n        }\n\n    }\n\n    _unsetEnabledFlag() {\n        if (this.__active) {\n            this._unsetActiveFlag();\n        }\n\n        if (this.__texture) {\n            this.__texture.removeElement(this);\n        }\n\n        if (this.__core.shader) {\n            this.__core.shader.removeElement(this.__core);\n        }\n\n        if (this._texturizer) {\n            this.texturizer.filters.forEach(filter => filter.removeElement(this.__core));\n        }\n\n        this.__enabled = false;\n    }\n\n    _setActiveFlag() {\n        this.__active = true;\n\n        // This must happen before enabling the texture, because it may already be loaded or load directly.\n        if (this.__texture) {\n            this.__texture.incActiveCount();\n        }\n\n        if (this.__texture) {\n            this._enableTexture();\n        }\n        this._onActive();\n    }\n\n    _unsetActiveFlag() {\n        if (this.__texture) {\n            this.__texture.decActiveCount();\n        }\n\n        this.__active = false;\n        if (this.__texture) {\n            this._disableTexture();\n        }\n\n        if (this._hasTexturizer()) {\n            this.texturizer.deactivate();\n        }\n\n        this._onInactive();\n    }\n\n    _onSetup() {\n    }\n\n    _onAttach() {\n    }\n\n    _onDetach() {\n    }\n\n    _onEnabled() {\n    }\n\n    _onDisabled() {\n    }\n\n    _onActive() {\n    }\n\n    _onInactive() {\n    }\n\n    _onResize() {\n    }\n\n    _getRenderWidth() {\n        if (this._w) {\n            return this._w;\n        } else if (this.__displayedTexture) {\n            return this.__displayedTexture.getRenderWidth();\n        } else if (this.__texture) {\n            // Texture already loaded, but not yet updated (probably because this element is not active).\n            return this.__texture.getRenderWidth();\n        } else {\n            return 0;\n        }\n    };\n\n    _getRenderHeight() {\n        if (this._h) {\n            return this._h;\n        } else if (this.__displayedTexture) {\n            return this.__displayedTexture.getRenderHeight();\n        } else if (this.__texture) {\n            // Texture already loaded, but not yet updated (probably because this element is not active).\n            return this.__texture.getRenderHeight();\n        } else {\n            return 0;\n        }\n    };\n\n    get renderWidth() {\n        if (this.__enabled) {\n            // Render width is only maintained if this element is enabled.\n            return this.__core.getRenderWidth();\n        } else {\n            return this._getRenderWidth();\n        }\n    }\n\n    get renderHeight() {\n        if (this.__enabled) {\n            return this.__core.getRenderHeight();\n        } else {\n            return this._getRenderHeight();\n        }\n    }\n\n    get finalX() {\n        return this.__core.x;\n    }\n\n    get finalY() {\n        return this.__core.y;\n    }\n\n    get finalW() {\n        return this.__core.w;\n    }\n\n    get finalH() {\n        return this.__core.h;\n    }\n\n    textureIsLoaded() {\n        return this.__texture && this.__texture.isLoaded();\n    }\n\n    loadTexture() {\n        if (this.__texture) {\n            this.__texture.load();\n\n            if (!this.__texture.isUsed() || !this._isEnabled()) {\n                // Loading the texture will have no effect on the dimensions of this element.\n                // Manually update them, so that calcs can be performed immediately in userland.\n                this._updateDimensions();\n            }\n        }\n    }\n\n    _enableTextureError() {\n        // txError event should automatically be re-triggered when a element becomes active.\n        const loadError = this.__texture.loadError;\n        if (loadError) {\n            this.emit('txError', loadError, this.__texture._source);\n        }\n    }\n\n    _enableTexture() {\n        if (this.__texture.isLoaded()) {\n            this._setDisplayedTexture(this.__texture);\n        } else {\n            // We don't want to retain the old 'ghost' image as it wasn't visible anyway.\n            this._setDisplayedTexture(null);\n\n            this._enableTextureError();\n        }\n    }\n\n    _disableTexture() {\n        // We disable the displayed texture because, when the texture changes while invisible, we should use that w, h,\n        // mw, mh for checking within bounds.\n        this._setDisplayedTexture(null);\n    }\n\n    get texture() {\n        return this.__texture;\n    }\n\n    set texture(v) {\n        let texture;\n        if (Utils.isObjectLiteral(v)) {\n            if (v.type) {\n                texture = new v.type(this.stage);\n            } else {\n                texture = this.texture;\n            }\n\n            if (texture) {\n                Base.patchObject(texture, v);\n            }\n        } else if (!v) {\n            texture = null;\n        } else {\n            if (v.isTexture) {\n                texture = v;\n            } else if (v.isTextureSource) {\n                texture = new SourceTexture(this.stage);\n                texture.textureSource = v;\n            } else {\n                console.error(\"[Lightning] Please specify a texture type.\");\n                return;\n            }\n        }\n\n        const prevTexture = this.__texture;\n        if (texture !== prevTexture) {\n            this.__texture = texture;\n\n            if (this.__texture) {\n                if (this.__enabled) {\n                    this.__texture.addElement(this);\n\n                    if (this.withinBoundsMargin) {\n                        if (this.__texture.isLoaded()) {\n                            this._setDisplayedTexture(this.__texture);\n                        } else {\n                            this._enableTextureError();\n                        }\n                    }\n                }\n            } else {\n                // Make sure that current texture is cleared when the texture is explicitly set to null.\n                this._setDisplayedTexture(null);\n            }\n\n            if (prevTexture && prevTexture !== this.__displayedTexture) {\n                prevTexture.removeElement(this);\n            }\n\n            this._updateDimensions();\n        }\n    }\n\n    get displayedTexture() {\n        return this.__displayedTexture;\n    }\n\n    _setDisplayedTexture(v) {\n        let prevTexture = this.__displayedTexture;\n\n        if (prevTexture && (v !== prevTexture)) {\n            if (this.__texture !== prevTexture) {\n                // The old displayed texture is deprecated.\n                prevTexture.removeElement(this);\n            }\n        }\n\n        const prevSource = this.__core.displayedTextureSource;\n        const sourceChanged = (v ? v._source : null) !== prevSource;\n\n        this.__displayedTexture = v;\n        this._updateDimensions();\n\n        if (this.__displayedTexture) {\n            if (sourceChanged) {\n                // We don't need to reference the displayed texture because it was already referenced (this.texture === this.displayedTexture).\n                this._updateTextureCoords();\n                this.__core.setDisplayedTextureSource(this.__displayedTexture._source);\n            }\n        } else {\n            this.__core.setDisplayedTextureSource(null);\n        }\n\n        if (sourceChanged) {\n            if (this.__displayedTexture) {\n                this.stage.removeUpdateSourceTexture(this.__displayedTexture)\n                this.emit('txLoaded', this.__displayedTexture);\n            } else {\n                this.emit('txUnloaded', this.__displayedTexture);\n            }\n        }\n    }\n\n    onTextureSourceLoaded() {\n        // This function is called when element is enabled, but we only want to set displayed texture for active elements.\n        if (this.active) {\n            // We may be dealing with a texture reloading, so we must force update.\n            this._setDisplayedTexture(this.__texture);\n        }\n    };\n\n    onTextureSourceLoadError(e) {\n        this.emit('txError', e, this.__texture._source);\n    };\n\n    forceRenderUpdate() {\n        this.__core.setHasRenderUpdates(3);\n    }\n\n    onDisplayedTextureClippingChanged() {\n        this._updateDimensions();\n        this._updateTextureCoords();\n    };\n\n    onPrecisionChanged() {\n        this._updateDimensions();\n    };\n\n    onDimensionsChanged(w, h) {\n        if (this.texture instanceof TextTexture) {\n            this.texture.w = w;\n            this.texture.h = h;\n            this.w = w;\n            this.h = h;\n        }\n    }\n\n    _updateDimensions() {\n        let w = this._getRenderWidth();\n        let h = this._getRenderHeight();\n\n        let unknownSize = false;\n        if (!w || !h) {\n            if (!this.__displayedTexture && this.__texture) {\n                // We use a 'max width' replacement instead in the ElementCore calcs.\n                // This makes sure that it is able to determine withinBounds.\n                w = w || this.__texture.mw;\n                h = h || this.__texture.mh;\n\n                if ((!w || !h) && this.__texture.isAutosizeTexture()) {\n                    unknownSize = true;\n                }\n            }\n        }\n\n        if (this.__core.setDimensions(w, h, unknownSize)) {\n            this._onResize();\n        }\n    }\n\n    _updateTextureCoords() {\n        if (this.displayedTexture && this.displayedTexture._source) {\n            let displayedTexture = this.displayedTexture;\n            let displayedTextureSource = this.displayedTexture._source;\n\n            let tx1 = 0, ty1 = 0, tx2 = 1.0, ty2 = 1.0;\n            if (displayedTexture.clipping) {\n                // Apply texture clipping.\n                let w = displayedTextureSource.getRenderWidth();\n                let h = displayedTextureSource.getRenderHeight();\n                let iw, ih, rw, rh;\n                iw = 1 / w;\n                ih = 1 / h;\n\n                if (displayedTexture.pw) {\n                    rw = (displayedTexture.pw) * iw;\n                } else {\n                    rw = (w - displayedTexture.px) * iw;\n                }\n\n                if (displayedTexture.ph) {\n                    rh = displayedTexture.ph * ih;\n                } else {\n                    rh = (h - displayedTexture.py) * ih;\n                }\n\n                iw *= (displayedTexture.px);\n                ih *= (displayedTexture.py);\n\n                tx1 = iw;\n                ty1 = ih;\n                tx2 = tx2 * rw + iw;\n                ty2 = ty2 * rh + ih;\n\n                tx1 = Math.max(0, tx1);\n                ty1 = Math.max(0, ty1);\n                tx2 = Math.min(1, tx2);\n                ty2 = Math.min(1, ty2);\n            }\n\n            if (displayedTextureSource._flipTextureY) {\n                let tempty = ty2;\n                ty2 = ty1;\n                ty1 = tempty;\n            }\n            this.__core.setTextureCoords(tx1, ty1, tx2, ty2);\n        }\n    }\n\n    getCornerPoints() {\n        return this.__core.getCornerPoints();\n    }\n\n    _unsetTagsParent() {\n        if (this.__tags) {\n            this.__tags.forEach((tag) => {\n                // Remove from treeTags.\n                let p = this;\n                while (p = p.__parent) {\n                    let parentTreeTags = p.__treeTags.get(tag);\n                    parentTreeTags.delete(this);\n\n                    if (p.__tagRoot) {\n                        break;\n                    }\n                }\n            });\n        }\n\n        let tags = null;\n        let n = 0;\n        if (this.__treeTags) {\n            if (!this.__tagRoot) {\n                tags = Utils.iteratorToArray(this.__treeTags.keys());\n                n = tags.length;\n\n                if (n > 0) {\n                    for (let i = 0; i < n; i++) {\n                        let tagSet = this.__treeTags.get(tags[i]);\n\n                        // Remove from treeTags.\n                        let p = this;\n                        while ((p = p.__parent)) {\n                            let parentTreeTags = p.__treeTags.get(tags[i]);\n\n                            tagSet.forEach(function (comp) {\n                                parentTreeTags.delete(comp);\n                            });\n\n                            if (p.__tagRoot) {\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    _setTagsParent() {\n        // Just copy over the 'local' tags.\n        if (this.__tags) {\n            this.__tags.forEach((tag) => {\n                let p = this;\n                while (p = p.__parent) {\n                    if (!p.__treeTags) {\n                        p.__treeTags = new Map();\n                    }\n\n                    let s = p.__treeTags.get(tag);\n                    if (!s) {\n                        s = new Set();\n                        p.__treeTags.set(tag, s);\n                    }\n\n                    s.add(this);\n\n                    if (p.__tagRoot) {\n                        break;\n                    }\n                }\n            });\n        }\n\n        if (this.__treeTags && this.__treeTags.size) {\n            if (!this.__tagRoot) {\n                this.__treeTags.forEach((tagSet, tag) => {\n                    let p = this;\n                    while (!p.__tagRoot && (p = p.__parent)) {\n                        if (p.__tagRoot) {\n                            // Do not copy all subs.\n                        }\n                        if (!p.__treeTags) {\n                            p.__treeTags = new Map();\n                        }\n\n                        let s = p.__treeTags.get(tag);\n                        if (!s) {\n                            s = new Set();\n                            p.__treeTags.set(tag, s);\n                        }\n\n                        tagSet.forEach(function (comp) {\n                            s.add(comp);\n                        });\n                    }\n                });\n            }\n        }\n    };\n\n\n    _getByTag(tag) {\n        if (!this.__treeTags) {\n            return [];\n        }\n        let t = this.__treeTags.get(tag);\n        return t ? Utils.setToArray(t) : [];\n    };\n\n    getTags() {\n        return this.__tags ? this.__tags : [];\n    };\n\n    setTags(tags) {\n        tags = tags.reduce((acc, tag) => {\n            return acc.concat(tag.split(' '));\n        }, []);\n\n        if (this.__ref) {\n            tags.push(this.__ref);\n        }\n\n        let i, n = tags.length;\n        let removes = [];\n        let adds = [];\n        for (i = 0; i < n; i++) {\n            if (!this.hasTag(tags[i])) {\n                adds.push(tags[i]);\n            }\n        }\n\n        let currentTags = this.tags || [];\n        n = currentTags.length;\n        for (i = 0; i < n; i++) {\n            if (tags.indexOf(currentTags[i]) == -1) {\n                removes.push(currentTags[i]);\n            }\n        }\n\n        for (i = 0; i < removes.length; i++) {\n            this.removeTag(removes[i]);\n        }\n\n        for (i = 0; i < adds.length; i++) {\n            this.addTag(adds[i]);\n        }\n    }\n\n    addTag(tag) {\n        if (tag.indexOf(' ') === -1) {\n            if (Utils.isUcChar(tag.charCodeAt(0))) {\n                this._throwError(\"Tag may not start with an upper case character.\");\n            }\n\n            this._addTag(tag);\n        } else {\n            const tags = tag.split(' ');\n            for (let i = 0, m = tags.length; i < m; i++) {\n                const tag = tags[i];\n\n                if (Utils.isUcChar(tag.charCodeAt(0))) {\n                    this._throwError(\"Tag may not start with an upper case character.\");\n                }\n\n                this._addTag(tag);\n            }\n        }\n    }\n\n    _addTag(tag) {\n        if (!this.__tags) {\n            this.__tags = [];\n        }\n        if (this.__tags.indexOf(tag) === -1) {\n            this.__tags.push(tag);\n\n            // Add to treeTags hierarchy.\n            let p = this.__parent;\n            if (p) {\n                do {\n                    if (!p.__treeTags) {\n                        p.__treeTags = new Map();\n                    }\n\n                    let s = p.__treeTags.get(tag);\n                    if (!s) {\n                        s = new Set();\n                        p.__treeTags.set(tag, s);\n                    }\n\n                    s.add(this);\n\n                } while (!p.__tagRoot && (p = p.__parent));\n            }\n        }\n    }\n\n    removeTag(tag) {\n        let i = this.__tags.indexOf(tag);\n        if (i !== -1) {\n            this.__tags.splice(i, 1);\n\n            // Remove from treeTags hierarchy.\n            let p = this.__parent;\n            if (p) {\n                do {\n                    let list = p.__treeTags.get(tag);\n                    if (list) {\n                        list.delete(this);\n                    }\n                } while (!p.__tagRoot && (p = p.__parent));\n            }\n        }\n    }\n\n    hasTag(tag) {\n        return (this.__tags && (this.__tags.indexOf(tag) !== -1));\n    }\n\n    /**\n     * Returns one of the elements from the subtree that have this tag.\n     * @param {string} tag\n     * @returns {Element}\n     */\n    _tag(tag) {\n        if (tag.indexOf(\".\") !== -1) {\n            return this.mtag(tag)[0];\n        } else {\n            if (this.__treeTags) {\n                let t = this.__treeTags.get(tag);\n                if (t) {\n                    const item = t.values().next();\n                    return item ? item.value : undefined;\n                }\n            }\n        }\n    };\n\n    get tag() {\n        return this._tag;\n    }\n\n    set tag(t) {\n        this.tags = t;\n    }\n\n    /**\n     * Returns all elements from the subtree that have this tag.\n     * @param {string} tag\n     * @returns {Element[]}\n     */\n    mtag(tag) {\n        let idx = tag.indexOf(\".\");\n        if (idx >= 0) {\n            let parts = tag.split('.');\n            let res = this._getByTag(parts[0]);\n            let level = 1;\n            let c = parts.length;\n            while (res.length && level < c) {\n                let resn = [];\n                for (let j = 0, n = res.length; j < n; j++) {\n                    resn = resn.concat(res[j]._getByTag(parts[level]));\n                }\n\n                res = resn;\n                level++;\n            }\n            return res;\n        } else {\n            return this._getByTag(tag);\n        }\n    };\n\n    stag(tag, settings) {\n        let t = this.mtag(tag);\n        let n = t.length;\n        for (let i = 0; i < n; i++) {\n            Base.patchObject(t[i], settings);\n        }\n    }\n\n    get tagRoot() {\n        return this.__tagRoot;\n    }\n\n    set tagRoot(v) {\n        if (this.__tagRoot !== v) {\n            if (!v) {\n                this._setTagsParent();\n            } else {\n                this._unsetTagsParent();\n            }\n\n            this.__tagRoot = v;\n        }\n    }\n\n    sel(path) {\n        const results = this.select(path);\n        if (results.length) {\n            return results[0];\n        } else {\n            return undefined;\n        }\n    }\n\n    select(path) {\n        if (path.indexOf(\",\") !== -1) {\n            let selectors = path.split(',');\n            let res = [];\n            for (let i = 0; i < selectors.length; i++) {\n                res = res.concat(this._select(selectors[i]));\n            }\n            return res;\n        } else {\n            return this._select(path);\n        }\n    }\n\n    _select(path) {\n        if (path === \"\") return [this];\n\n\n        let pointIdx = path.indexOf(\".\");\n        let arrowIdx = path.indexOf(\">\");\n        if (pointIdx === -1 && arrowIdx === -1) {\n            // Quick case.\n            return this.mtag(path);\n        }\n\n        // Detect by first char.\n        let isRef;\n        if (arrowIdx === 0) {\n            isRef = true;\n            path = path.substr(1);\n        } else if (pointIdx === 0) {\n            isRef = false;\n            path = path.substr(1);\n        } else {\n            isRef = false;\n        }\n\n        return this._selectChilds(path, isRef);\n    }\n\n    _selectChilds(path, isRef) {\n        const pointIdx = path.indexOf(\".\");\n        const arrowIdx = path.indexOf(\">\");\n\n        if (pointIdx === -1 && arrowIdx === -1) {\n            if (isRef) {\n                const ref = this.getByRef(path);\n                return ref ? [ref] : [];\n            } else {\n                return this.mtag(path);\n            }\n        }\n\n        if ((arrowIdx === -1) || (pointIdx !== -1 && pointIdx < arrowIdx)) {\n            let next;\n            const str = path.substr(0, pointIdx);\n            if (isRef) {\n                const ref = this.getByRef(str);\n                next = ref ? [ref] : [];\n            } else {\n                next = this.mtag(str);\n            }\n            let total = [];\n            const subPath = path.substr(pointIdx + 1);\n            for (let i = 0, n = next.length; i < n; i++) {\n                total = total.concat(next[i]._selectChilds(subPath, false));\n            }\n            return total;\n        } else {\n            let next;\n            const str = path.substr(0, arrowIdx);\n            if (isRef) {\n                const ref = this.getByRef(str);\n                next = ref ? [ref] : [];\n            } else {\n                next = this.mtag(str);\n            }\n            let total = [];\n            const subPath = path.substr(arrowIdx + 1);\n            for (let i = 0, n = next.length; i < n; i++) {\n                total = total.concat(next[i]._selectChilds(subPath, true));\n            }\n            return total;\n        }\n    }\n\n    getByRef(ref) {\n        return this.childList.getByRef(ref);\n    }\n\n    getLocationString() {\n        let i;\n        i = this.__parent ? this.__parent._children.getIndex(this) : \"R\";\n        let localTags = this.getTags();\n        let str = this.__parent ? this.__parent.getLocationString(): \"\";\n        if (this.ref) {\n            str += \":[\" + i + \"]\" + this.ref;\n        } else if (localTags.length) {\n            str += \":[\" + i + \"]\" + localTags.join(\",\");\n        } else {\n            str += \":[\" + i + \"]#\" + this.id;\n        }\n        return str;\n    }\n\n    toString() {\n        let obj = this.getSettings();\n        return Element.getPrettyString(obj, \"\");\n    };\n\n    static getPrettyString(obj, indent) {\n        let children = obj.children;\n        delete obj.children;\n\n\n        // Convert singular json settings object.\n        let colorKeys = [\"color\", \"colorUl\", \"colorUr\", \"colorBl\", \"colorBr\"];\n        let str = JSON.stringify(obj, function (k, v) {\n            if (colorKeys.indexOf(k) !== -1) {\n                return \"COLOR[\" + v.toString(16) + \"]\";\n            }\n            return v;\n        });\n        str = str.replace(/\"COLOR\\[([a-f0-9]{1,8})\\]\"/g, \"0x$1\");\n\n        if (children) {\n            let childStr = \"\";\n            if (Utils.isObjectLiteral(children)) {\n                let refs = Object.keys(children);\n                childStr = \"\";\n                for (let i = 0, n = refs.length; i < n; i++) {\n                    childStr += `\\n${indent}  \"${refs[i]}\":`\n                    delete children[refs[i]].ref;\n                    childStr += Element.getPrettyString(children[refs[i]], indent + \"  \") + (i < n - 1 ? \",\" : \"\");\n                }\n                let isEmpty = (str === \"{}\");\n                str = str.substr(0, str.length - 1) + (isEmpty ? \"\" : \",\") + childStr + \"\\n\" + indent + \"}\";\n            } else {\n                let n = children.length;\n                childStr = \"[\";\n                for (let i = 0; i < n; i++) {\n                    childStr += Element.getPrettyString(children[i], indent + \"  \") + (i < n - 1 ? \",\" : \"\") + \"\\n\";\n                }\n                childStr += indent + \"]}\";\n                let isEmpty = (str === \"{}\");\n                str = str.substr(0, str.length - 1) + (isEmpty ? \"\" : \",\") + \"\\\"children\\\":\\n\" + indent + childStr + \"}\";\n            }\n\n        }\n\n        return str;\n    }\n\n    getSettings() {\n        let settings = this.getNonDefaults();\n\n        let children = this._children.get();\n        if (children) {\n            let n = children.length;\n            if (n) {\n                const childArray = [];\n                let missing = false;\n                for (let i = 0; i < n; i++) {\n                    childArray.push(children[i].getSettings());\n                    missing = missing || !children[i].ref;\n                }\n\n                if (!missing) {\n                    settings.children = {}\n                    childArray.forEach(child => {\n                        settings.children[child.ref] = child;\n                    });\n                } else {\n                    settings.children = childArray;\n                }\n            }\n        }\n\n        settings.id = this.id;\n\n        return settings;\n    }\n\n    getNonDefaults() {\n        let settings = {};\n\n        if (this.constructor !== Element) {\n            settings.type = this.constructor.name;\n        }\n\n        if (this.__ref) {\n            settings.ref = this.__ref;\n        }\n\n        if (this.__tags && this.__tags.length) {\n            settings.tags = this.__tags;\n        }\n\n        if (this.x !== 0) settings.x = this.x;\n        if (this.y !== 0) settings.y = this.y;\n        if (this.w !== 0) settings.w = this.w;\n        if (this.h !== 0) settings.h = this.h;\n\n        if (this.scaleX === this.scaleY) {\n            if (this.scaleX !== 1) settings.scale = this.scaleX;\n        } else {\n            if (this.scaleX !== 1) settings.scaleX = this.scaleX;\n            if (this.scaleY !== 1) settings.scaleY = this.scaleY;\n        }\n\n        if (this.pivotX === this.pivotY) {\n            if (this.pivotX !== 0.5) settings.pivot = this.pivotX;\n        } else {\n            if (this.pivotX !== 0.5) settings.pivotX = this.pivotX;\n            if (this.pivotY !== 0.5) settings.pivotY = this.pivotY;\n        }\n\n        if (this.mountX === this.mountY) {\n            if (this.mountX !== 0) settings.mount = this.mountX;\n        } else {\n            if (this.mountX !== 0) settings.mountX = this.mountX;\n            if (this.mountY !== 0) settings.mountY = this.mountY;\n        }\n\n        if (this.alpha !== 1) settings.alpha = this.alpha;\n\n        if (!this.visible) settings.visible = false;\n\n        if (this.rotation !== 0) settings.rotation = this.rotation;\n\n        if (this.colorUl === this.colorUr && this.colorBl === this.colorBr && this.colorUl === this.colorBl) {\n            if (this.colorUl !== 0xFFFFFFFF) settings.color = this.colorUl.toString(16);\n        } else {\n            if (this.colorUl !== 0xFFFFFFFF) settings.colorUl = this.colorUl.toString(16);\n            if (this.colorUr !== 0xFFFFFFFF) settings.colorUr = this.colorUr.toString(16);\n            if (this.colorBl !== 0xFFFFFFFF) settings.colorBl = this.colorBl.toString(16);\n            if (this.colorBr !== 0xFFFFFFFF) settings.colorBr = this.colorBr.toString(16);\n        }\n\n        if (this.zIndex) settings.zIndex = this.zIndex;\n\n        if (this.forceZIndexContext) settings.forceZIndexContext = true;\n\n        if (this.clipping) settings.clipping = this.clipping;\n\n        if (!this.clipbox) settings.clipbox = this.clipbox;\n\n        if (this.__texture) {\n            let tnd = this.__texture.getNonDefaults();\n            if (Object.keys(tnd).length) {\n                settings.texture = tnd;\n            }\n        }\n\n        if (this.shader && Utils.isFunction(this.shader.getNonDefaults)) {\n            let tnd = this.shader.getNonDefaults();\n            if (Object.keys(tnd).length) {\n                settings.shader = tnd;\n            }\n        }\n\n        if (this._hasTexturizer()) {\n            if (this.texturizer.enabled) {\n                settings.renderToTexture = this.texturizer.enabled;\n            }\n            if (this.texturizer.lazy) {\n                settings.renderToTextureLazy = this.texturizer.lazy;\n            }\n            if (this.texturizer.colorize) {\n                settings.colorizeResultTexture = this.texturizer.colorize;\n            }\n            if (this.texturizer.renderOffscreen) {\n                settings.renderOffscreen = this.texturizer.renderOffscreen;\n            }\n        }\n\n        return settings;\n    };\n\n    static getGetter(propertyPath) {\n        let getter = Element.PROP_GETTERS.get(propertyPath);\n        if (!getter) {\n            getter = new Function('obj', 'return obj.' + propertyPath);\n            Element.PROP_GETTERS.set(propertyPath, getter);\n        }\n        return getter;\n    }\n\n    static getSetter(propertyPath) {\n        let setter = Element.PROP_SETTERS.get(propertyPath);\n        if (!setter) {\n            setter = new Function('obj', 'v', 'obj.' + propertyPath + ' = v');\n            Element.PROP_SETTERS.set(propertyPath, setter);\n        }\n        return setter;\n    }\n\n    get withinBoundsMargin() {\n        return this.__core._withinBoundsMargin;\n    }\n\n    _enableWithinBoundsMargin() {\n        // Iff enabled, this toggles the active flag.\n        if (this.__enabled) {\n            this._setActiveFlag();\n        }\n    }\n\n    _disableWithinBoundsMargin() {\n        // Iff active, this toggles the active flag.\n        if (this.__active) {\n            this._unsetActiveFlag();\n        }\n    }\n\n    set boundsMargin(v) {\n        if (!Array.isArray(v) && v !== null) {\n            throw new Error(\"boundsMargin should be an array of left-top-right-bottom values or null (inherit margin)\");\n        }\n        this.__core.boundsMargin = v;\n    }\n\n    get boundsMargin() {\n        return this.__core.boundsMargin;\n    }\n\n    get x() {\n        return this.__core.offsetX;\n    }\n\n    set x(v) {\n        this.__core.offsetX = v;\n    }\n\n    get y() {\n        return this.__core.offsetY;\n    }\n\n    set y(v) {\n        this.__core.offsetY = v;\n    }\n\n    get w() {\n        return this._w;\n    }\n\n    set w(v) {\n        if (Utils.isFunction(v)) {\n            this._w = 0;\n            this.__core.funcW = v;\n        } else {\n            v = Math.max(v, 0);\n            if (this._w !== v) {\n                this.__core.disableFuncW();\n                this._w = v;\n                this._updateDimensions();\n            }\n        }\n    }\n\n    get h() {\n        return this._h;\n    }\n\n    set h(v) {\n        if (Utils.isFunction(v)) {\n            this._h = 0;\n            this.__core.funcH = v;\n        } else {\n            v = Math.max(v, 0);\n            if (this._h !== v) {\n                this.__core.disableFuncH();\n                this._h = v;\n                this._updateDimensions();\n            }\n        }\n    }\n\n    get collision() {\n        return this._collision;\n    }\n\n    set collision(v) {\n        this._collision = v;\n    }\n\n    _updateCollision() {\n        if (this.collision && this.__parent && this.__parent.collision === undefined) {\n            /**\n             * Mark collision as 2 to indicate atleast one descendant has collision enabled.\n             * This narrows down the search for elements with active collision.\n            */\n            this.__parent.collision = 2;\n        }\n    }\n\n    get scaleX() {\n        return this.__core.scaleX;\n    }\n\n    set scaleX(v) {\n        this.__core.scaleX = v;\n    }\n\n    get scaleY() {\n        return this.__core.scaleY;\n    }\n\n    set scaleY(v) {\n        this.__core.scaleY = v;\n    }\n\n    get scale() {\n        return this.__core.scale;\n    }\n\n    set scale(v) {\n        this.__core.scale = v;\n    }\n\n    get pivotX() {\n        return this.__core.pivotX;\n    }\n\n    set pivotX(v) {\n        this.__core.pivotX = v;\n    }\n\n    get pivotY() {\n        return this.__core.pivotY;\n    }\n\n    set pivotY(v) {\n        this.__core.pivotY = v;\n    }\n\n    get pivot() {\n        return this.__core.pivot;\n    }\n\n    set pivot(v) {\n        this.__core.pivot = v;\n    }\n\n    get mountX() {\n        return this.__core.mountX;\n    }\n\n    set mountX(v) {\n        this.__core.mountX = v;\n    }\n\n    get mountY() {\n        return this.__core.mountY;\n    }\n\n    set mountY(v) {\n        this.__core.mountY = v;\n    }\n\n    get mount() {\n        return this.__core.mount;\n    }\n\n    set mount(v) {\n        this.__core.mount = v;\n    }\n\n    get rotation() {\n        return this.__core.rotation;\n    }\n\n    set rotation(v) {\n        this.__core.rotation = v;\n    }\n\n    get alpha() {\n        return this.__core.alpha;\n    }\n\n    set alpha(v) {\n        this.__core.alpha = v;\n    }\n\n    get visible() {\n        return this.__core.visible;\n    }\n\n    set visible(v) {\n        this.__core.visible = v;\n    }\n    \n    get colorUl() {\n        return this.__core.colorUl;\n    }\n\n    set colorUl(v) {\n        this.__core.colorUl = v;\n    }\n\n    get colorUr() {\n        return this.__core.colorUr;\n    }\n\n    set colorUr(v) {\n        this.__core.colorUr = v;\n    }\n\n    get colorBl() {\n        return this.__core.colorBl;\n    }\n\n    set colorBl(v) {\n        this.__core.colorBl = v;\n    }\n\n    get colorBr() {\n        return this.__core.colorBr;\n    }\n\n    set colorBr(v) {\n        this.__core.colorBr = v;\n    }\n\n    get color() {\n        return this.__core.colorUl;\n    }\n\n    set color(v) {\n        if (this.colorUl !== v || this.colorUr !== v || this.colorBl !== v || this.colorBr !== v) {\n            this.colorUl = v;\n            this.colorUr = v;\n            this.colorBl = v;\n            this.colorBr = v;\n        }\n    }\n\n    get colorTop() {\n        return this.colorUl;\n    }\n\n    set colorTop(v) {\n        if (this.colorUl !== v || this.colorUr !== v) {\n            this.colorUl = v;\n            this.colorUr = v;\n        }\n    }\n\n    get colorBottom() {\n        return this.colorBl;\n    }\n\n    set colorBottom(v) {\n        if (this.colorBl !== v || this.colorBr !== v) {\n            this.colorBl = v;\n            this.colorBr = v;\n        }\n    }\n\n    get colorLeft() {\n        return this.colorUl;\n    }\n\n    set colorLeft(v) {\n        if (this.colorUl !== v || this.colorBl !== v) {\n            this.colorUl = v;\n            this.colorBl = v;\n        }\n    }\n\n    get colorRight() {\n        return this.colorUr;\n    }\n\n    set colorRight(v) {\n        if (this.colorUr !== v || this.colorBr !== v) {\n            this.colorUr = v;\n            this.colorBr = v;\n        }\n    }\n\n    get zIndex() {return this.__core.zIndex}\n    set zIndex(v) {\n        this.__core.zIndex = v;\n    }\n\n    get forceZIndexContext() {return this.__core.forceZIndexContext}\n    set forceZIndexContext(v) {\n        this.__core.forceZIndexContext = v;\n    }\n\n    get clipping() {return this.__core.clipping}\n    set clipping(v) {\n        this.__core.clipping = v;\n    }\n\n    get clipbox() {return this.__core.clipbox}\n    set clipbox(v) {\n        this.__core.clipbox = v;\n    }\n\n    get tags() {\n        return this.getTags();\n    }\n\n    set tags(v) {\n        if (!Array.isArray(v)) v = [v];\n        this.setTags(v);\n    }\n\n    set t(v) {\n        this.tags = v;\n    }\n\n    get _children() {\n        if (!this.__childList) {\n            this.__childList = new ElementChildList(this, false);\n        }\n        return this.__childList;\n    }\n\n    get childList() {\n        if (!this._allowChildrenAccess()) {\n            this._throwError(\"Direct access to children is not allowed in \" + this.getLocationString());\n        }\n        return this._children;\n    }\n\n    hasChildren() {\n        return this._allowChildrenAccess() && this.__childList && (this.__childList.length > 0);\n    }\n\n    _allowChildrenAccess() {\n        return true;\n    }\n\n    get children() {\n        return this.childList.get();\n    }\n\n    set children(children) {\n        this.childList.patch(children);\n    }\n\n    add(o) {\n        return this.childList.a(o);\n    }\n\n    get p() {\n        return this.__parent;\n    }\n\n    get parent() {\n        return this.__parent;\n    }\n\n    get src() {\n        if (this.texture && this.texture instanceof ImageTexture) {\n            return this.texture._src;\n        } else {\n            return undefined;\n        }\n    }\n\n    set src(v) {\n        const texture = new ImageTexture(this.stage);\n        texture.src = v;\n        this.texture = texture;\n    }\n\n    set mw(v) {\n        if (this.texture) {\n            this.texture.mw = v;\n            this._updateDimensions();\n        } else {\n            this._throwError('Please set mw after setting a texture.');\n        }\n    }\n\n    set mh(v) {\n        if (this.texture) {\n            this.texture.mh = v;\n            this._updateDimensions();\n        } else {\n            this._throwError('Please set mh after setting a texture.');\n        }\n    }\n\n    get rect() {\n        return (this.texture === this.stage.rectangleTexture);\n    }\n\n    set rect(v) {\n        if (v) {\n            this.texture = this.stage.rectangleTexture;\n        } else {\n            this.texture = null;\n        }\n    }\n\n    enableTextTexture() {\n        if (!this.texture || !(this.texture instanceof TextTexture)) {\n            this.texture = new TextTexture(this.stage);\n\n            if (!this.texture.w && !this.texture.h) {\n                // Inherit dimensions from element.\n                // This allows userland to set dimensions of the Element and then later specify the text.\n                this.texture.w = this.w;\n                this.texture.h = this.h;\n            }\n        }\n        return this.texture;\n    }\n\n    get text() {\n        if (this.texture && (this.texture instanceof TextTexture)) {\n            return this.texture;\n        } else {\n            return null;\n        }\n    }\n\n    set text(v) {\n        if (!this.texture || !(this.texture instanceof TextTexture)) {\n            this.enableTextTexture();\n        }\n        if (Utils.isString(v)) {\n            this.texture.text = v;\n        } else {\n            this.texture.patch(v);\n        }\n    }\n\n    set onUpdate(f) {\n        this.__core.onUpdate = f;\n    }\n\n    set onAfterCalcs(f) {\n        this.__core.onAfterCalcs = f;\n    }\n\n    set onAfterUpdate(f) {\n        this.__core.onAfterUpdate = f;\n    }\n\n    forceUpdate() {\n        // Make sure that the update loop is run.\n        this.__core._setHasUpdates();\n    }\n\n    get shader() {\n        return this.__core.shader;\n    }\n\n    set shader(v) {\n        if (Utils.isObjectLiteral(v) && !v.type) {\n            // Setting properties on an existing shader.\n            if (this.shader) {\n                this.shader.patch(v);\n            }\n        } else {\n            const shader = Shader.create(this.stage, v);\n\n            if (this.__enabled && this.__core.shader) {\n                this.__core.shader.removeElement(this.__core);\n            }\n\n            this.__core.shader = shader;\n\n            if (this.__enabled && this.__core.shader) {\n                this.__core.shader.addElement(this.__core);\n            }\n        }\n    }\n\n    _hasTexturizer() {\n        return !!this.__core._texturizer;\n    }\n\n    get renderToTexture() {\n        return this.rtt\n    }\n\n    set renderToTexture(v) {\n        this.rtt = v\n    }\n\n    get rtt() {\n        return this._hasTexturizer() && this.texturizer.enabled;\n    }\n\n    set rtt(v) {\n        this.texturizer.enabled = v;\n    }\n\n    get rttLazy() {\n        return this._hasTexturizer() && this.texturizer.lazy;\n    }\n\n    set rttLazy(v) {\n        this.texturizer.lazy = v;\n    }\n\n    get renderOffscreen() {\n        return this._hasTexturizer() && this.texturizer.renderOffscreen;\n    }\n\n    set renderOffscreen(v) {\n        this.texturizer.renderOffscreen = v;\n    }\n\n    get colorizeResultTexture() {\n        return this._hasTexturizer() && this.texturizer.colorize;\n    }\n\n    set colorizeResultTexture(v) {\n        this.texturizer.colorize = v;\n    }\n\n    getTexture() {\n        return this.texturizer._getTextureSource();\n    }\n\n    get texturizer() {\n        return this.__core.texturizer;\n    }\n\n    patch(settings) {\n        let paths = Object.keys(settings);\n\n        for (let i = 0, n = paths.length; i < n; i++) {\n            let path = paths[i];\n            const v = settings[path];\n\n            const firstCharCode = path.charCodeAt(0);\n            if (Utils.isUcChar(firstCharCode)) {\n                // Ref.\n                const child = this.getByRef(path);\n                if (!child) {\n                    if (v !== undefined) {\n                        // Add to list immediately.\n                        let c;\n                        if (Utils.isObjectLiteral(v)) {\n                            // Catch this case to capture createMode flag.\n                            c = this.childList.createItem(v);\n                            c.patch(v);\n                        } else if (Utils.isObject(v)) {\n                            c = v;\n                        }\n                        if (c.isElement) {\n                            c.ref = path;\n                        }\n\n                        this.childList.a(c);\n                    }\n                } else {\n                    if (v === undefined) {\n                        if (child.parent) {\n                            child.parent.childList.remove(child);\n                        }\n                    } else if (Utils.isObjectLiteral(v)) {\n                        child.patch(v);\n                    } else if (v.isElement) {\n                        // Replace element by new element.\n                        v.ref = path;\n                        this.childList.replace(v, child);\n                    } else {\n                        this._throwError(\"Unexpected value for path: \" + path);\n                    }\n                }\n            } else {\n                // Property.\n                Base.patchObjectProperty(this, path, v);\n            }\n        }\n    }\n\n    _throwError(message) {\n        throw new Error(this.constructor.name + \" (\" + this.getLocationString() + \"): \" + message);\n    }\n\n    animation(settings) {\n        return this.stage.animations.createAnimation(this, settings);\n    }\n\n    transition(property, settings = null) {\n        if (settings === null) {\n            return this._getTransition(property);\n        } else {\n            this._setTransition(property, settings);\n            // We do not create/return the transition, because it would undo the 'lazy transition creation' optimization.\n            return null;\n        }\n    }\n\n    set transitions(object) {\n        let keys = Object.keys(object);\n        keys.forEach(property => {\n            this.transition(property, object[property]);\n        });\n    }\n\n    set smooth(object) {\n        let keys = Object.keys(object);\n        keys.forEach(property => {\n            let value = object[property];\n            if (Array.isArray(value)) {\n                this.setSmooth(property, value[0], value[1]);\n            } else {\n                this.setSmooth(property, value);\n            }\n        });\n    }\n\n    fastForward(property) {\n        if (this._transitions) {\n            let t = this._transitions[property];\n            if (t && t.isTransition) {\n                t.finish();\n            }\n        }\n    }\n\n    _getTransition(property) {\n        if (!this._transitions) {\n            this._transitions = {};\n        }\n        let t = this._transitions[property];\n        if (!t) {\n            // Create default transition.\n            t = new Transition(this.stage.transitions, this.stage.transitions.defaultTransitionSettings, this, property);\n        } else if (t.isTransitionSettings) {\n            // Upgrade to 'real' transition.\n            t = new Transition(\n                this.stage.transitions,\n                t,\n                this,\n                property\n            );\n        }\n        this._transitions[property] = t;\n        return t;\n    }\n\n    _setTransition(property, settings) {\n        if (!settings) {\n            this._removeTransition(property);\n        } else {\n            if (Utils.isObjectLiteral(settings)) {\n                // Convert plain object to proper settings object.\n                settings = this.stage.transitions.createSettings(settings);\n            }\n\n            if (!this._transitions) {\n                this._transitions = {};\n            }\n\n            let current = this._transitions[property];\n            if (current && current.isTransition) {\n                // Runtime settings change.\n                current.settings = settings;\n                return current;\n            } else {\n                // Initially, only set the settings and upgrade to a 'real' transition when it is used.\n                this._transitions[property] = settings;\n            }\n        }\n    }\n\n    _removeTransition(property) {\n        if (this._transitions) {\n            delete this._transitions[property];\n        }\n    }\n\n    getSmooth(property, v) {\n        let t = this._getTransition(property);\n        if (t && t.isAttached()) {\n            return t.targetValue;\n        } else {\n            return v;\n        }\n    }\n\n    setSmooth(property, v, settings) {\n        if (settings) {\n            this._setTransition(property, settings);\n        }\n        let t = this._getTransition(property);\n        t.start(v);\n        return t;\n    }\n\n    get flex() {\n        return this.__core.flex;\n    }\n\n    set flex(v) {\n        this.__core.flex = v;\n    }\n\n    get flexItem() {\n        return this.__core.flexItem;\n    }\n\n    set flexItem(v) {\n        this.__core.flexItem = v;\n    }\n\n    static isColorProperty(property) {\n        return property.toLowerCase().indexOf(\"color\") >= 0;\n    }\n\n    static getMerger(property) {\n        if (Element.isColorProperty(property)) {\n            return StageUtils.mergeColors;\n        } else {\n            return StageUtils.mergeNumbers;\n        }\n    }\n\n    toJSON() {\n        const ref = [`${this.constructor.name}`];\n        const tree = {};\n        tree[ref] = {};\n\n        if (this.hasChildren()) {\n            Element.collectChildren(tree[ref], this.__childList);\n        } else {\n            tree[ref] = {...Element.getProperties(this)};\n        }\n        return tree;\n    }\n\n    static collectChildren(tree, children) {\n        const childList = children;\n        for (let i = 0, j = childList.length; i < j; i++) {\n            const element = childList.getAt(i);\n            const ref = `${element.__ref || `Element-${element.id}`}`;\n            const properties = this.getProperties(element);\n\n            tree[ref] = {...properties};\n\n            if (element.hasChildren()) {\n                tree[ref].children = {};\n                this.collectChildren(\n                    tree[ref].children, element.__childList\n                );\n            }\n        }\n    }\n\n    static getProperties(element) {\n        const props = {};\n        const list = [\n            \"alpha\", \"active\", \"attached\", \"boundsMargin\", \"color\", \"clipping\", \"enabled\", \"h\", \"id\", \"isComponent\",\n            \"mount\", \"mountY\", \"mountX\", \"pivot\", \"pivotX\", \"pivotY\", \"ref\", \"renderOffscreen\", \"renderToTexture\", \"scale\",\n            \"scaleX\", \"scaleY\", \"state\", \"tag\", \"visible\", \"w\", \"x\", \"y\", \"zIndex\",\n            \"!!flex\", \"!!flexItem\", \"hasFocus()\", \"hasFinalFocus()\"\n        ];\n        let n = list.length;\n\n        while (n--) {\n            let key = list[n];\n            const getBoolean = /^!{2}/;\n            const isFunction = /\\(\\)$/;\n\n            if (getBoolean.test(key)) {\n                key = key.substring(2, key.length);\n                props[key] = !!element[key];\n            } else if (isFunction.test(key)) {\n                key = key.substring(0, key.length - 2);\n                if (typeof element[key] === \"function\") {\n                    props[key] = element[key]();\n                }\n            } else {\n                props[key] = element[key];\n            }\n        }\n        return {...props, ...element.getNonDefaults()};\n    }\n}\n\n// This gives a slight performance benefit compared to extending EventEmitter.\nEventEmitter.addAsMixin(Element);\n\nElement.prototype.isElement = 1;\n\nElement.id = 1;\n\n// Getters reused when referencing element (subobject) properties by a property path, as used in a transition or animation ('x', 'texture.x', etc).\nElement.PROP_GETTERS = new Map();\n\n// Setters reused when referencing element (subobject) properties by a property path, as used in a transition or animation ('x', 'texture.x', etc).\nElement.PROP_SETTERS = new Map();\n\nimport Texture from \"./Texture.mjs\";\nimport ImageTexture from \"../textures/ImageTexture.mjs\";\nimport TextTexture from \"../textures/TextTexture.mjs\";\nimport SourceTexture from \"../textures/SourceTexture.mjs\";\nimport Transition from \"../animation/Transition.mjs\";\nimport ElementChildList from \"./ElementChildList.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class StateMachine {\n\n    constructor() {\n        StateMachine.setupStateMachine(this);\n    }\n\n    static setupStateMachine(target) {\n        const targetConstructor = target.constructor;\n        const router = StateMachine.create(targetConstructor);\n        Object.setPrototypeOf(target, router.prototype);\n        target.constructor = targetConstructor;\n        target._initStateMachine();\n    }\n\n    /**\n     * Creates a state machine implementation.\n     * It extends the original type and should be used when creating new instances.\n     * The original type is available as static property 'original', and it must be used when subclassing as follows:\n     * const type = StateMachine.create(class YourNewStateMachineClass extends YourBaseStateMachineClass.original {  })\n     * @param {Class} type\n     * @returns {StateMachine}\n     */\n    static create(type) {\n        if (!type.hasOwnProperty('_sm')) {\n            // Only need to run once.\n            const stateMachineType = new StateMachineType(type);\n            type._sm = stateMachineType;\n        }\n\n        return type._sm.router;\n    }\n\n    /**\n     * Calls the specified method if it exists.\n     * @param {string} event\n     * @param {*...} args\n     */\n    fire(event, ...args) {\n        if (this._hasMethod(event)) {\n            return this[event](...args);\n        }\n    }\n\n    /**\n     * Returns the current state path (for example \"Initialized.Loading\").\n     * @returns {string}\n     * @protected\n     */\n    _getState() {\n        return this._state.__path;\n    }\n\n    /**\n     * Returns true iff statePath is (an ancestor of) currentStatePath.\n     * @param {string} statePath\n     * @param {string} currentStatePath\n     * @returns {Boolean}\n     * @protected\n     */\n    _inState(statePath, currentStatePath = this._state.__path) {\n        const state = this._sm.getStateByPath(statePath);\n        const currentState = this._sm.getStateByPath(currentStatePath);\n        const level = state.__level;\n        const stateAtLevel = StateMachine._getStateAtLevel(currentState, level);\n        return (stateAtLevel === state);\n    }\n\n    /**\n     * Returns true if the specified class member is defined for the currently set state.\n     * @param {string} name\n     * @returns {boolean}\n     * @protected\n     */\n    _hasMember(name) {\n        return !!this.constructor.prototype[name];\n    }\n\n    /**\n     * Returns true if the specified class member is a method for the currently set state.\n     * @param {string} name\n     * @returns {boolean}\n     * @protected\n     */\n    _hasMethod(name) {\n        const member = this.constructor.prototype[name];\n        return !!member && (typeof member === \"function\")\n    }\n\n    /**\n     * Switches to the specified state.\n     * @param {string} statePath\n     *   Substates are seperated by a underscores (for example \"Initialized.Loading\").\n     * @param {*[]} [args]\n     *   Args that are supplied in $enter and $exit events.\n     * @protected\n     */\n    _setState(statePath, args) {\n        const setStateId = ++this._setStateCounter;\n        this._setStateId = setStateId;\n\n        if (this._state.__path !== statePath) {\n            // Performance optimization.\n            let newState = this._sm._stateMap[statePath];\n            if (!newState) {\n                // Check for super state.\n                newState = this._sm.getStateByPath(statePath);\n            }\n\n            const prevState = this._state;\n\n            const hasDifferentEnterMethod = (newState.prototype.$enter !== this._state.prototype.$enter);\n            const hasDifferentExitMethod = (newState.prototype.$exit !== this._state.prototype.$exit);\n            if (hasDifferentEnterMethod || hasDifferentExitMethod) {\n                const sharedState = StateMachine._getSharedState(this._state, newState);\n                const context = {\n                    newState: newState.__path,\n                    prevState: prevState.__path,\n                    sharedState: sharedState.__path\n                };\n                const sharedLevel = sharedState.__level;\n\n                if (hasDifferentExitMethod) {\n                    const exitStates = StateMachine._getStatesUntilLevel(this._state, sharedLevel);\n                    for (let i = 0, n = exitStates.length; i < n; i++) {\n                        this.__setState(exitStates[i]);\n                        this._callExit(this._state, args, context);\n                        const stateChangeOverridden = (this._setStateId !== setStateId);\n                        if (stateChangeOverridden) {\n                            return;\n                        }\n                    }\n                }\n\n                if (hasDifferentEnterMethod) {\n                    const enterStates = StateMachine._getStatesUntilLevel(newState, sharedLevel).reverse();\n                    for (let i = 0, n = enterStates.length; i < n; i++) {\n                        this.__setState(enterStates[i]);\n                        this._callEnter(this._state, args, context);\n                        const stateChangeOverridden = (this._setStateId !== setStateId);\n                        if (stateChangeOverridden) {\n                            return;\n                        }\n                    }\n                }\n\n            }\n\n            this.__setState(newState);\n\n            if (this._changedState) {\n                const context = {\n                    newState: newState.__path,\n                    prevState: prevState.__path\n                };\n\n                if (args) {\n                    this._changedState(context, ...args);\n                } else {\n                    this._changedState(context);\n                }\n            }\n\n            if (this._onStateChange) {\n                const context = {\n                    newState: newState.__path,\n                    prevState: prevState.__path\n                };\n                this._onStateChange(context);\n            }\n\n        }\n    }\n\n    _callEnter(state, args = [], context) {\n        const hasParent = !!state.__parent;\n        if (state.prototype.$enter) {\n            if (!hasParent || (state.__parent.prototype.$enter !== state.prototype.$enter)) {\n                state.prototype.$enter.apply(this, [context, ...args]);\n            }\n        }\n    }\n\n    _callExit(state, args = [], context) {\n        const hasParent = !!state.__parent;\n        if (state.prototype.$exit) {\n            if (!hasParent || (state.__parent.prototype.$exit !== state.prototype.$exit)) {\n                state.prototype.$exit.apply(this, [context, ...args]);\n            }\n        }\n    }\n\n    __setState(state) {\n        this._state = state;\n        this._stateIndex = state.__index;\n        this.constructor = state;\n    }\n\n    _initStateMachine() {\n        this._state = null;\n        this._stateIndex = 0;\n        this._setStateCounter = 0;\n        this._sm = this._routedType._sm;\n        this.__setState(this._sm.getStateByPath(\"\"));\n        const context = {newState: \"\", prevState: undefined, sharedState: undefined};\n        this._callEnter(this._state, [], context);\n        this._onStateChange = undefined;\n    }\n\n    /**\n     * Between multiple member names, select the one specified in the deepest state.\n     * If multiple member names are specified in the same deepest state, the first one in the array is returned.\n     * @param {string[]} memberNames\n     * @returns {string|undefined}\n     * @protected\n     */\n    _getMostSpecificHandledMember(memberNames) {\n        let cur = this._state;\n        do {\n            for (let i = 0, n = memberNames.length; i < n; i++) {\n                const memberName = memberNames[i];\n                if (!cur.__parent) {\n                    if (cur.prototype[memberName]) {\n                        return memberName;\n                    }\n                } else {\n                    const alias = StateMachineType.getStateMemberAlias(cur.__path, memberName);\n                    if (this[alias]) {\n                        return memberName;\n                    }\n                }\n            }\n            cur = cur.__parent;\n        } while (cur);\n    }\n\n    static _getStatesUntilLevel(state, level) {\n        const states = [];\n        while (state.__level > level) {\n            states.push(state);\n            state = state.__parent;\n        }\n        return states;\n    }\n\n    static _getSharedState(state1, state2) {\n        const state1Array = StateMachine._getAncestorStates(state1);\n        const state2Array = StateMachine._getAncestorStates(state2);\n        const n = Math.min(state1Array.length, state2Array.length);\n        for (let i = 0; i < n; i++) {\n            if (state1Array[i] !== state2Array[i]) {\n                return state1Array[i - 1];\n            }\n        }\n        return state1Array[n - 1];\n    }\n\n    static _getAncestorStates(state) {\n        const result = [];\n        do {\n            result.push(state);\n        } while(state = state.__parent);\n        return result.reverse();\n    }\n\n    static _getStateAtLevel(state, level) {\n        if (level > state.__level) {\n            return undefined;\n        }\n\n        while(level < state.__level) {\n            state = state.__parent;\n        }\n        return state;\n    }\n}\n\nclass StateMachineType {\n\n    constructor(type) {\n        this._type = type;\n        this._router = null;\n\n        this.init();\n    }\n\n    get router() {\n        return this._router;\n    }\n\n    init() {\n        this._router = this._createRouter();\n\n        this._stateMap = this._getStateMap();\n\n        this._addStateMemberDelegatorsToRouter();\n\n    }\n\n    _createRouter() {\n        const type = this._type;\n\n        const router = class StateMachineRouter extends type {\n            constructor() {\n                super(...arguments);\n                if (!this.constructor.hasOwnProperty('_isRouter')) {\n                    throw new Error(`You need to extend ${type.name}.original instead of ${type.name}.`);\n                }\n            }\n        };\n        router._isRouter = true;\n        router.prototype._routedType = type;\n        router.original = type;\n\n        this._mixinStateMachineMethods(router);\n\n        return router;\n    }\n\n    _mixinStateMachineMethods(router) {\n        // Mixin the state machine methods, so that we reuse the methods instead of re-creating them.\n        const names = Object.getOwnPropertyNames(StateMachine.prototype);\n        for (let i = 0, n = names.length; i < n; i++) {\n            const name = names[i];\n            if (name !== \"constructor\") {\n                const descriptor = Object.getOwnPropertyDescriptor(StateMachine.prototype, name);\n                Object.defineProperty(router.prototype, name, descriptor);\n            }\n        }\n    }\n\n    _addStateMemberDelegatorsToRouter() {\n        const members = this._getAllMemberNames();\n\n        members.forEach(member => {\n            this._addMemberRouter(member);\n        });\n    }\n\n    /**\n     * @note We are generating code because it yields much better performance.\n     */\n    _addMemberRouter(member) {\n        const statePaths = Object.keys(this._stateMap);\n        const descriptors = [];\n        const aliases = [];\n        statePaths.forEach((statePath, index) => {\n            const state = this._stateMap[statePath];\n            const descriptor = this._getDescriptor(state, member);\n            if (descriptor) {\n                descriptors[index] = descriptor;\n\n                // Add to prototype.\n                const alias = StateMachineType.getStateMemberAlias(descriptor._source.__path, member);\n                aliases[index] = alias;\n\n                if (!this._router.prototype.hasOwnProperty(alias)) {\n                    Object.defineProperty(this._router.prototype, alias, descriptor);\n                }\n            } else {\n                descriptors[index] = null;\n                aliases[index] = null;\n            }\n        });\n\n        let type = undefined;\n        descriptors.forEach(descriptor => {\n            if (descriptor) {\n                const descType = this._getDescriptorType(descriptor);\n                if (type && (type !== descType)) {\n                    console.warn(`[Lightning] Member ${member} in ${this._type.name} has inconsistent types.`);\n                    return;\n                }\n                type = descType;\n            }\n        });\n\n        switch(type) {\n            case \"method\":\n                this._addMethodRouter(member, descriptors, aliases);\n                break;\n            case \"getter\":\n                this._addGetterSetterRouters(member);\n                break;\n            case \"property\":\n                console.warn(\"[Lightning] Fixed properties are not supported; please use a getter instead!\")\n                break;\n        }\n    }\n\n    _getDescriptor(state, member, isValid = () => true) {\n        let type = state;\n        let curState = state;\n\n        do {\n            const descriptor = Object.getOwnPropertyDescriptor(type.prototype, member);\n            if (descriptor) {\n                if (isValid(descriptor)) {\n                    descriptor._source = curState;\n                    return descriptor;\n                }\n            }\n            type = Object.getPrototypeOf(type);\n            if (type && type.hasOwnProperty('__state')) {\n                curState = type;\n            }\n        } while(type && type.prototype);\n        return undefined;\n    }\n\n    _getDescriptorType(descriptor) {\n        if (descriptor.get || descriptor.set) {\n            return 'getter';\n        } else {\n            if (typeof descriptor.value === \"function\") {\n                return 'method';\n            } else {\n                return 'property';\n            }\n        }\n    }\n\n    static _supportsSpread() {\n        if (this.__supportsSpread === undefined) {\n            this.__supportsSpread = false;\n            try {\n                const func = new Function(\"return [].concat(...arguments);\");\n                func();\n                this.__supportsSpread = true;\n            } catch(e) {}\n        }\n        return this.__supportsSpread;\n    }\n\n    _addMethodRouter(member, descriptors, aliases) {\n        const code = [\n            // The line ensures that, while debugging, your IDE won't open many tabs.\n            \"//@ sourceURL=StateMachineRouter.js\",\n            \"var i = this._stateIndex;\"\n        ];\n        let cur = aliases[0];\n        const supportsSpread = StateMachineType._supportsSpread();\n        for (let i = 1, n = aliases.length; i < n; i++) {\n            const alias = aliases[i];\n            if (alias !== cur) {\n                if (cur) {\n                    if (supportsSpread) {\n                        code.push(`if (i < ${i}) return this[\"${cur}\"](...arguments); else`);\n                    } else {\n                        code.push(`if (i < ${i}) return this[\"${cur}\"].apply(this, arguments); else`);\n                    }\n                } else {\n                    code.push(`if (i < ${i}) return ; else`);\n                }\n            }\n            cur = alias;\n        }\n        if (cur) {\n            if (supportsSpread) {\n                code.push(`return this[\"${cur}\"](...arguments);`);\n            } else {\n                code.push(`return this[\"${cur}\"].apply(this, arguments);`);\n            }\n        } else {\n            code.push(`;`);\n        }\n        const functionBody = code.join(\"\\n\");\n        const router = new Function([], functionBody);\n\n        const descriptor = {value: router};\n        Object.defineProperty(this._router.prototype, member, descriptor);\n    }\n\n    _addGetterSetterRouters(member) {\n        const getter = this._getGetterRouter(member);\n        const setter = this._getSetterRouter(member);\n        const descriptor = {\n            get: getter,\n            set: setter\n        };\n        Object.defineProperty(this._router.prototype, member, descriptor);\n    }\n\n    _getGetterRouter(member) {\n        const statePaths = Object.keys(this._stateMap);\n        const descriptors = [];\n        const aliases = [];\n        statePaths.forEach((statePath, index) => {\n            const state = this._stateMap[statePath];\n            const descriptor = this._getDescriptor(state, member, (descriptor => descriptor.get));\n            if (descriptor) {\n                descriptors[index] = descriptor;\n\n                // Add to prototype.\n                const alias = StateMachineType.getStateMemberAlias(descriptor._source.__path, member);\n                aliases[index] = alias;\n\n                if (!this._router.prototype.hasOwnProperty(alias)) {\n                    Object.defineProperty(this._router.prototype, alias, descriptor);\n                }\n            } else {\n                descriptors[index] = null;\n                aliases[index] = null;\n            }\n        });\n\n        const code = [\n            // The line ensures that, while debugging, your IDE won't open many tabs.\n            \"//@ sourceURL=StateMachineRouter.js\",\n            \"var i = this._stateIndex;\"\n        ];\n        let cur = aliases[0];\n        for (let i = 1, n = aliases.length; i < n; i++) {\n            const alias = aliases[i];\n            if (alias !== cur) {\n                if (cur) {\n                    code.push(`if (i < ${i}) return this[\"${cur}\"]; else`);\n                } else {\n                    code.push(`if (i < ${i}) return ; else`);\n                }\n            }\n            cur = alias;\n        }\n        if (cur) {\n            code.push(`return this[\"${cur}\"];`);\n        } else {\n            code.push(`;`);\n        }\n        const functionBody = code.join(\"\\n\");\n        const router = new Function([], functionBody);\n        return router;\n    }\n\n    _getSetterRouter(member) {\n        const statePaths = Object.keys(this._stateMap);\n        const descriptors = [];\n        const aliases = [];\n        statePaths.forEach((statePath, index) => {\n            const state = this._stateMap[statePath];\n            const descriptor = this._getDescriptor(state, member, (descriptor => descriptor.set));\n            if (descriptor) {\n                descriptors[index] = descriptor;\n\n                // Add to prototype.\n                const alias = StateMachineType.getStateMemberAlias(descriptor._source.__path, member);\n                aliases[index] = alias;\n\n                if (!this._router.prototype.hasOwnProperty(alias)) {\n                    Object.defineProperty(this._router.prototype, alias, descriptor);\n                }\n            } else {\n                descriptors[index] = null;\n                aliases[index] = null;\n            }\n        });\n\n        const code = [\n            // The line ensures that, while debugging, your IDE won't open many tabs.\n            \"//@ sourceURL=StateMachineRouter.js\",\n            \"var i = this._stateIndex;\"\n        ];\n        let cur = aliases[0];\n        for (let i = 1, n = aliases.length; i < n; i++) {\n            const alias = aliases[i];\n            if (alias !== cur) {\n                if (cur) {\n                    code.push(`if (i < ${i}) this[\"${cur}\"] = arg; else`);\n                } else {\n                    code.push(`if (i < ${i}) ; else`);\n                }\n            }\n            cur = alias;\n        }\n        if (cur) {\n            code.push(`this[\"${cur}\"] = arg;`);\n        } else {\n            code.push(`;`);\n        }\n        const functionBody = code.join(\"\\n\");\n        const router = new Function([\"arg\"], functionBody);\n        return router;\n    }\n\n    static getStateMemberAlias(path, member) {\n        return \"$\" + (path ? path + \".\" : \"\") + member;\n    }\n\n    _getAllMemberNames() {\n        const stateMap = this._stateMap;\n        const map = Object.keys(stateMap);\n        let members = new Set();\n        map.forEach(statePath => {\n            if (statePath === \"\") {\n                // Root state can be skipped: if the method only occurs in the root state, we don't need to re-delegate it based on state.\n                return;\n            }\n            const state = stateMap[statePath];\n            const names = this._getStateMemberNames(state);\n            names.forEach(name => {\n                members.add(name);\n            })\n        });\n        return [...members];\n    }\n\n    _getStateMemberNames(state) {\n        let type = state;\n        let members = new Set();\n        const isRoot = this._type === state;\n        do {\n            const names = this._getStateMemberNamesForType(type);\n            names.forEach(name => {\n                members.add(name)\n            });\n\n            type = Object.getPrototypeOf(type);\n        } while(type && type.prototype && (!type.hasOwnProperty(\"__state\") || isRoot));\n\n        return members;\n    }\n\n    _getStateMemberNamesForType(type) {\n        const memberNames = Object.getOwnPropertyNames(type.prototype);\n        return memberNames.filter(memberName => {\n            return (memberName !== \"constructor\") && !StateMachineType._isStateLocalMember(memberName);\n        });\n    }\n\n    static _isStateLocalMember(memberName) {\n        return (memberName === \"$enter\") || (memberName === \"$exit\");\n    }\n\n    getStateByPath(statePath) {\n        if (this._stateMap[statePath]) {\n            return this._stateMap[statePath];\n        }\n\n        // Search for closest match.\n        const parts = statePath.split(\".\");\n        while(parts.pop()) {\n            const statePath = parts.join(\".\");\n            if (this._stateMap[statePath]) {\n                return this._stateMap[statePath];\n            }\n        }\n    }\n\n    _getStateMap() {\n        if (!this._stateMap) {\n            this._stateMap = this._createStateMap();\n        }\n        return this._stateMap;\n    }\n\n    _createStateMap() {\n        const stateMap = {};\n        this._addState(this._type, null, \"\", stateMap);\n        return stateMap;\n    }\n\n    _addState(state, parentState, name, stateMap) {\n        state.__state = true;\n        state.__name = name;\n\n        this._addStaticStateProperty(state, parentState);\n\n        const parentPath = (parentState ? parentState.__path : \"\");\n        let path = (parentPath ? parentPath + \".\" : \"\") + name;\n        state.__path = path;\n        state.__level = parentState ? parentState.__level + 1 : 0;\n        state.__parent = parentState;\n        state.__index = Object.keys(stateMap).length;\n        stateMap[path] = state;\n\n        const states = state._states;\n        if (states) {\n            const isInheritedFromParent = (parentState && parentState._states === states);\n            if (!isInheritedFromParent) {\n                const subStates = state._states();\n                subStates.forEach(subState => {\n                    const stateName = StateMachineType._getStateName(subState);\n                    this._addState(subState, state, stateName, stateMap);\n                });\n            }\n        }\n    }\n\n    static _getStateName(state) {\n        const name = state.name;\n\n        const index = name.indexOf('$');\n        if (index > 0) {\n            // Strip off rollup name suffix.\n            return name.substr(0, index);\n        }\n\n        return name;\n    }\n\n    _addStaticStateProperty(state, parentState) {\n        if (parentState) {\n            const isClassStateLevel = parentState && !parentState.__parent;\n            if (isClassStateLevel) {\n                this._router[state.__name] = state;\n            } else {\n                parentState[state.__name] = state;\n            }\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Element from \"../tree/Element.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\nimport StateMachine from \"./StateMachine.mjs\";\n\n/**\n * @extends StateMachine\n */\nexport default class Component extends Element {\n\n    constructor(stage, properties) {\n        super(stage);\n\n        // Encapsulate tags to prevent leaking.\n        this.tagRoot = true;\n\n        if (Utils.isObjectLiteral(properties)) {\n            Object.assign(this, properties);\n        }\n\n        this.__initialized = false;\n        this.__firstActive = false;\n        this.__firstEnable = false;\n\n        this.__signals = undefined;\n\n        this.__passSignals = undefined;\n\n        this.__construct();\n\n        // Quick-apply template.\n        const func = this.constructor.getTemplateFunc(this);\n        func.f(this, func.a);\n\n        this._build();\n    }\n\n    __start() {\n        StateMachine.setupStateMachine(this);\n        this._onStateChange = Component.prototype.__onStateChange;\n    }\n\n    get state() {\n        return this._getState();\n    }\n\n    __onStateChange() {\n        /* FIXME: Workaround for case, where application was shut but component still lives */\n        if (this.application) {\n            this.application.updateFocusPath();\n        }\n    }\n\n    _refocus() {\n        /* FIXME: Workaround for case, where application was shut but component still lives */\n        if (this.application) {\n            this.application.updateFocusPath();\n        }\n    }\n\n    static bindProp(name, func = null) {\n        return {__propertyBinding: true, __name: name, __func: func};\n    }\n\n    __bindProperty(propObj, targetObj, targetProp) {\n        // 1. find binding position: find object and property name to be bound\n        const obj = targetObj;\n        const prop = targetProp;\n        const propDependencies = Array.isArray(propObj.__name) ? propObj.__name : [propObj.__name];\n\n        // 2. create setters for every given dependency\n        for (let i = 0; i < propDependencies.length; i++) {\n            const propName = propDependencies[i];\n            const func = propObj.__func ? propObj.__func : (context) => context[propName];\n\n            if (!this.hasOwnProperty(propName)) {\n                this[`__prop_bindings_${propName}`] = [{__obj: obj, __prop: prop, __func: func}];\n                Object.defineProperty(this, propName, {\n                    set: (value) => {\n                        this[`__prop_${propName}`] = value;\n                        for (const {__obj, __prop, __func} of this[`__prop_bindings_${propName}`]) {\n                            __obj[__prop] = __func(this);\n                        }\n                    },\n                    get: () => this[`__prop_${propName}`]\n                });\n            } else {\n                this[`__prop_bindings_${propName}`].push({__obj: obj, __prop: prop, __func: func});\n            }\n        }\n    }\n\n    /**\n     * Returns a high-performance template patcher.\n     */\n    static getTemplateFunc(ctx) {\n        // We need a different template function per patch id.\n        const name = \"_templateFunc\";\n\n        // Be careful with class-based static inheritance.\n        const hasName = '__has' + name;\n        if (this[hasName] !== this) {\n            this[hasName] = this;\n            this[name] = this.parseTemplate(this._template(ctx));\n        }\n        return this[name];\n    }\n\n    static parseTemplate(obj) {\n        const context = {\n            loc: [],\n            store: [],\n            rid: 0\n        };\n\n        this.parseTemplateRec(obj, context, \"element\");\n\n        const code = context.loc.join(\";\\n\");\n        const f = new Function(\"element\", \"store\", code);\n        return {f: f, a: context.store};\n    }\n\n    static parseTemplateRec(obj, context, cursor) {\n        const store = context.store;\n        const loc = context.loc;\n        const keys = Object.keys(obj);\n        keys.forEach(key => {\n            let value = obj[key];\n            if (Utils.isUcChar(key.charCodeAt(0))) {\n                // Value must be expanded as well.\n                if (Utils.isObjectLiteral(value)) {\n                    // Ref.\n                    const childCursor = `r${key.replace(/[^a-z0-9]/gi, \"\") + context.rid}`;\n                    let type = value.type ? value.type : Element;\n                    if (type === Element) {\n                        loc.push(`var ${childCursor} = element.stage.createElement()`);\n                    } else {\n                        store.push(type);\n                        loc.push(`var ${childCursor} = new store[${store.length - 1}](${cursor}.stage)`);\n                    }\n                    loc.push(`${childCursor}.ref = \"${key}\"`);\n                    context.rid++;\n\n                    // Enter sub.\n                    this.parseTemplateRec(value, context, childCursor);\n\n                    loc.push(`${cursor}.childList.add(${childCursor})`);\n                } else if (Utils.isObject(value)) {\n                    // Dynamic assignment.\n                    store.push(value);\n                    loc.push(`${cursor}.childList.add(store[${store.length - 1}])`);\n                }\n            } else {\n                if (key === \"text\") {\n                    const propKey = cursor + \"__text\";\n                    loc.push(`var ${propKey} = ${cursor}.enableTextTexture()`);\n                    if (value.__propertyBinding === true) {\n                        // Allow binding entire objects to text property\n                        store.push(value);\n                        loc.push(`element.__bindProperty(store[${store.length - 1}], ${cursor}, \"${key}\")`);\n                    } else {\n                        this.parseTemplatePropRec(value, context, propKey);\n                    }\n                } else if (key === \"shader\" && Utils.isObjectLiteral(value)) {\n                    const shaderCursor = `${cursor}[\"shader\"]`\n                    store.push(value);\n                    loc.push(`${cursor}[\"${key}\"] = store[${store.length - 1}]`);\n                    this.parsePropertyBindings(value, context, shaderCursor);\n                } else if (key === \"texture\" && Utils.isObjectLiteral(value)) {\n                    const propKey = cursor + \"__texture\";\n                    const type = value.type;\n                    if (type) {\n                        store.push(type);\n                        loc.push(`var ${propKey} = new store[${store.length - 1}](${cursor}.stage)`);\n                        this.parseTemplatePropRec(value, context, propKey);\n                        loc.push(`${cursor}[\"${key}\"] = ${propKey}`);\n                    } else {\n                        loc.push(`${propKey} = ${cursor}.texture`);\n                        this.parseTemplatePropRec(value, context, propKey);\n                    }\n                } else if (Utils.isObjectLiteral(value) && value.__propertyBinding === true) {\n                    store.push(value);\n                    loc.push(`element.__bindProperty(store[${store.length - 1}], ${cursor}, \"${key}\")`);\n                } else {\n                    // Property;\n                    if (Utils.isNumber(value)) {\n                        loc.push(`${cursor}[\"${key}\"] = ${value}`);\n                    } else if (Utils.isBoolean(value)) {\n                        loc.push(`${cursor}[\"${key}\"] = ${value ? \"true\" : \"false\"}`);\n                    } else if (Utils.isObject(value) || Array.isArray(value)) {\n                        // Dynamic assignment.\n                        // Because literal objects may contain dynamics, we store the full object.\n                        store.push(value);\n                        loc.push(`${cursor}[\"${key}\"] = store[${store.length - 1}]`);\n                    } else {\n                        // String etc.\n                        loc.push(`${cursor}[\"${key}\"] = ${JSON.stringify(value)}`);\n                    }\n                }\n            }\n        });\n    }\n\n    static parseTemplatePropRec(obj, context, cursor) {\n        const store = context.store;\n        const loc = context.loc;\n        const keys = Object.keys(obj);\n        keys.forEach(key => {\n            if (key !== \"type\") {\n                const value = obj[key];\n                if (Utils.isNumber(value)) {\n                    loc.push(`${cursor}[\"${key}\"] = ${value}`);\n                } else if (Utils.isBoolean(value)) {\n                    loc.push(`${cursor}[\"${key}\"] = ${value ? \"true\" : \"false\"}`);\n                } else if (Utils.isObject(value) && value.__propertyBinding === true) {\n                    store.push(value);\n                    loc.push(`element.__bindProperty(store[${store.length - 1}], ${cursor}, \"${key}\")`);\n                } else if (Utils.isObject(value) || Array.isArray(value)) {\n                    // Dynamic assignment.\n                    // Because literal objects may contain dynamics, we store the full object.\n                    store.push(value);\n                    loc.push(`${cursor}[\"${key}\"] = store[${store.length - 1}]`);\n                } else {\n                    // String etc.\n                    loc.push(`${cursor}[\"${key}\"] = ${JSON.stringify(value)}`);\n                }\n            }\n        });\n    }\n\n    static parsePropertyBindings(obj, context, cursor) {\n        const store = context.store;\n        const loc = context.loc;\n        const keys = Object.keys(obj);\n        keys.forEach(key => {\n            if (key !== \"type\") {\n                const value = obj[key];\n                if (Utils.isObjectLiteral(value) && value.__propertyBinding === true) {\n                    store.push(value);\n                    loc.push(`element.__bindProperty(store[${store.length - 1}], ${cursor}, \"${key}\")`);\n                }\n            }\n        });\n    }\n\n    _onSetup() {\n        if (!this.__initialized) {\n            this._setup();\n        }\n    }\n\n    _setup() {\n    }\n\n    _onAttach() {\n        if (!this.__initialized) {\n            this.__init();\n            this.__initialized = true;\n        }\n\n        this._attach();\n    }\n\n    _attach() {\n    }\n\n    _onDetach() {\n        this._detach();\n    }\n\n    _detach() {\n    }\n\n    _onEnabled() {\n        if (!this.__firstEnable) {\n            this._firstEnable();\n            this.__firstEnable = true;\n        }\n\n        this._enable();\n    }\n\n    _firstEnable() {\n    }\n\n    _enable() {\n    }\n\n    _onDisabled() {\n        this._disable();\n    }\n\n    _disable() {\n    }\n\n    _onActive() {\n        if (!this.__firstActive) {\n            this._firstActive();\n            this.__firstActive = true;\n        }\n\n        this._active();\n    }\n\n    _firstActive() {\n    }\n\n    _active() {\n    }\n\n    _onInactive() {\n        this._inactive();\n    }\n\n    _inactive() {\n    }\n\n    get application() {\n        return this.stage.application;\n    }\n\n    __construct() {\n        this._construct();\n    }\n\n    _construct() {\n    }\n\n    _build() {\n    }\n\n    __init() {\n        this._init();\n    }\n\n    _init() {\n    }\n\n    _focus(newTarget, prevTarget) {\n    }\n\n    _unfocus(newTarget) {\n    }\n\n    _focusChange(target, newTarget) {\n    }\n\n    _getFocused() {\n        // Override to delegate focus to child components.\n        return this;\n    }\n\n    _setFocusSettings(settings) {\n        // Override to add custom settings. See Application._handleFocusSettings().\n    }\n\n    _handleFocusSettings(settings) {\n        // Override to react on custom settings. See Application._handleFocusSettings().\n    }\n\n    static _template() {\n        return {};\n    }\n\n    hasFinalFocus() {\n        let path = this.application._focusPath;\n        return path && path.length && path[path.length - 1] === this;\n    }\n\n    hasFocus() {\n        let path = this.application._focusPath;\n        return path && (path.indexOf(this) >= 0);\n    }\n\n    get cparent() {\n        return Component.getParent(this);\n    }\n\n    seekAncestorByType(type) {\n        let c = this.cparent;\n        while (c) {\n            if (c.constructor === type) {\n                return c;\n            }\n            c = c.cparent;\n        }\n    }\n\n    getSharedAncestorComponent(element) {\n        let ancestor = this.getSharedAncestor(element);\n        while (ancestor && !ancestor.isComponent) {\n            ancestor = ancestor.parent;\n        }\n        return ancestor;\n    }\n\n    get signals() {\n        return this.__signals;\n    }\n\n    set signals(v) {\n        if (!Utils.isObjectLiteral(v)) {\n            this._throwError(\"Signals: specify an object with signal-to-fire mappings\");\n        }\n        this.__signals = v;\n    }\n\n    set alterSignals(v) {\n        if (!Utils.isObjectLiteral(v)) {\n            this._throwError(\"Signals: specify an object with signal-to-fire mappings\");\n        }\n        if (!this.__signals) {\n            this.__signals = {};\n        }\n        for (let key in v) {\n            const d = v[key];\n            if (d === undefined) {\n                delete this.__signals[key];\n            } else {\n                this.__signals[key] = v;\n            }\n        }\n    }\n\n    get passSignals() {\n        return this.__passSignals || {};\n    }\n\n    set passSignals(v) {\n        this.__passSignals = Object.assign(this.__passSignals || {}, v);\n    }\n\n    set alterPassSignals(v) {\n        if (!Utils.isObjectLiteral(v)) {\n            this._throwError(\"Signals: specify an object with signal-to-fire mappings\");\n        }\n        if (!this.__passSignals) {\n            this.__passSignals = {};\n        }\n        for (let key in v) {\n            const d = v[key];\n            if (d === undefined) {\n                delete this.__passSignals[key];\n            } else {\n                this.__passSignals[key] = v;\n            }\n        }\n    }\n\n    /**\n     * Signals the parent of the specified event.\n     * A parent/ancestor that wishes to handle the signal should set the 'signals' property on this component.\n     * @param {string} event\n     * @param {...*} args\n     */\n    signal(event, ...args) {\n        return this._signal(event, args);\n    }\n\n    _signal(event, args) {\n        const signalParent = this._getParentSignalHandler();\n        if (signalParent) {\n            if (this.__signals) {\n                let fireEvent = this.__signals[event];\n                if (fireEvent === false) {\n                    // Ignore event.\n                    return;\n                }\n                if (fireEvent) {\n                    if (fireEvent === true) {\n                        fireEvent = event;\n                    }\n \n                    if (Utils.isFunction(fireEvent)) {\n                        return fireEvent(...args);\n                    }\n\n                    if (signalParent._hasMethod(fireEvent)) {\n                        return signalParent[fireEvent](...args);\n                    }\n                }\n            }\n\n            let passSignal = (this.__passSignals && this.__passSignals[event]);\n            if (passSignal) {\n                // Bubble up.\n                if (passSignal && passSignal !== true) {\n                    // Replace signal name.\n                    event = passSignal;\n                }\n\n                return signalParent._signal(event, args);\n            }\n        }\n    }\n\n    _getParentSignalHandler() {\n        return this.cparent ? this.cparent._getSignalHandler() : null;\n    }\n\n    _getSignalHandler() {\n        if (this._signalProxy) {\n            return this.cparent ? this.cparent._getSignalHandler() : null;\n        }\n        return this;\n    }\n\n    get _signalProxy() {\n        return false;\n    }\n\n    fireAncestors(name, ...args) {\n        if (!name.startsWith('$')) {\n            throw new Error(\"Ancestor event name must be prefixed by dollar sign.\");\n        }\n\n        const parent = this._getParentSignalHandler();\n        if (parent) {\n            return parent._doFireAncestors(name, args);\n        }\n    }\n\n    _doFireAncestors(name, args) {\n        if (this._hasMethod(name)) {\n            return this.fire(name, ...args);\n        } else {\n            const signalParent = this._getParentSignalHandler();\n            if (signalParent) {\n                return signalParent._doFireAncestors(name, args);\n            }\n        }\n    }\n\n    static collectSubComponents(subs, element) {\n        if (element.hasChildren()) {\n            const childList = element.__childList;\n            for (let i = 0, n = childList.length; i < n; i++) {\n                const child = childList.getAt(i);\n                if (child.isComponent) {\n                    subs.push(child);\n                } else {\n                    Component.collectSubComponents(subs, child);\n                }\n            }\n        }\n    }\n\n    static getComponent(element) {\n        let parent = element;\n        while (parent && !parent.isComponent) {\n            parent = parent.parent;\n        }\n        return parent;\n    }\n\n    static getParent(element) {\n        return Component.getComponent(element.parent);\n    }\n}\n\nComponent.prototype.isComponent = true;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class CoreQuadList {\n\n    constructor(ctx) {\n\n        this.ctx = ctx;\n\n        this.quadTextures = [];\n\n        this.quadElements = [];\n    }\n\n    get length() {\n        return this.quadTextures.length;\n    }\n\n    reset() {\n        this.quadTextures = [];\n        this.quadElements = [];\n        this.dataLength = 0;\n    }\n\n    getElement(index) {\n        return this.quadElements[index]._element;\n    }\n\n    getElementCore(index) {\n        return this.quadElements[index];\n    }\n\n    getTexture(index) {\n        return this.quadTextures[index];\n    }\n\n    getTextureWidth(index) {\n        let nativeTexture = this.quadTextures[index];\n        if (nativeTexture.w) {\n            // Render texture;\n            return nativeTexture.w;\n        } else {\n            return this.quadElements[index]._displayedTextureSource.w;\n        }\n    }\n\n    getTextureHeight(index) {\n        let nativeTexture = this.quadTextures[index];\n        if (nativeTexture.h) {\n            // Render texture;\n            return nativeTexture.h;\n        } else {\n            return this.quadElements[index]._displayedTextureSource.h;\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreQuadList from \"../../tree/core/CoreQuadList.mjs\";\n\nexport default class WebGLCoreQuadList extends CoreQuadList {\n\n    constructor(ctx) {\n        super(ctx);\n\n        // Allocate a fairly big chunk of memory that should be enough to support ~100000 (default) quads.\n        // We do not (want to) handle memory overflow.\n        const byteSize = ctx.stage.getOption('bufferMemory');\n\n        this.dataLength = 0;\n\n        this.data = new ArrayBuffer(byteSize);\n        this.floats = new Float32Array(this.data);\n        this.uints = new Uint32Array(this.data);\n    }\n\n    getAttribsDataByteOffset(index) {\n        // Where this quad can be found in the attribs buffer.\n        return index * 80;\n    }\n\n    getQuadContents() {\n        // Debug: log contents of quad buffer.\n        let floats = this.floats;\n        let uints = this.uints;\n        let lines = [];\n        for (let i = 1; i <= this.length; i++) {\n            let str = 'entry ' + i + ': ';\n            for (let j = 0; j < 4; j++) {\n                let b = i * 20 + j * 4;\n                str += floats[b] + ',' + floats[b+1] + ':' + floats[b+2] + ',' + floats[b+3] + '[' + uints[b+4].toString(16) + '] ';\n            }\n            lines.push(str);\n        }\n\n        return lines;\n    }\n\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nexport default class CoreQuadOperation {\n\n    constructor(ctx, shader, shaderOwner, renderTextureInfo, scissor, index) {\n\n        this.ctx = ctx;\n        this.shader = shader;\n        this.shaderOwner = shaderOwner;\n        this.renderTextureInfo = renderTextureInfo;\n        this.scissor = scissor;\n        this.index = index;\n        this.length = 0;\n\n    }\n\n    get quads() {\n        return this.ctx.renderState.quads;\n    }\n\n    getTexture(index) {\n        return this.quads.getTexture(this.index + index);\n    }\n\n    getElementCore(index) {\n        return this.quads.getElementCore(this.index + index);\n    }\n\n    getElement(index) {\n        return this.quads.getElement(this.index + index);\n    }\n\n    getElementWidth(index) {\n        return this.getElement(index).renderWidth;\n    }\n\n    getElementHeight(index) {\n        return this.getElement(index).renderHeight;\n    }\n\n    getTextureWidth(index) {\n        return this.quads.getTextureWidth(this.index + index);\n    }\n\n    getTextureHeight(index) {\n        return this.quads.getTextureHeight(this.index + index);\n    }\n\n    getRenderWidth() {\n        if (this.renderTextureInfo) {\n            return this.renderTextureInfo.w;\n        } else {\n            return this.ctx.stage.w;\n        }\n    }\n\n    getRenderHeight() {\n        if (this.renderTextureInfo) {\n            return this.renderTextureInfo.h;\n        } else {\n            return this.ctx.stage.h;\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreQuadOperation from \"../../tree/core/CoreQuadOperation.mjs\";\n\nexport default class WebGLCoreQuadOperation extends CoreQuadOperation {\n\n    constructor(ctx, shader, shaderOwner, renderTextureInfo, scissor, index) {\n        super(ctx, shader, shaderOwner, renderTextureInfo, scissor, index);\n\n        this.extraAttribsDataByteOffset = 0;\n    }\n\n    getAttribsDataByteOffset(index) {\n        // Where this quad can be found in the attribs buffer.\n        return this.quads.getAttribsDataByteOffset(this.index + index);\n    }\n\n    /**\n     * Returns the relative pixel coordinates in the shader owner to gl position coordinates in the render texture.\n     * @param x\n     * @param y\n     * @return {number[]}\n     */\n    getNormalRenderTextureCoords(x, y) {\n        let coords = this.shaderOwner.getRenderTextureCoords(x, y);\n        coords[0] /= this.getRenderWidth();\n        coords[1] /= this.getRenderHeight();\n        coords[0] = coords[0] * 2 - 1;\n        coords[1] = 1 - coords[1] * 2;\n        return coords;\n    }\n\n    getProjection() {\n        if (this.renderTextureInfo === null) {\n            return this.ctx.renderExec._projection;\n        } else {\n            return this.renderTextureInfo.nativeTexture.projection;\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nexport default class CoreRenderExecutor {\n\n    constructor(ctx) {\n        this.ctx = ctx;\n\n        this.renderState = ctx.renderState;\n\n        this.gl = this.ctx.stage.gl;\n    }\n\n    destroy() {\n        this.ctx = null;\n        this.renderState = null;\n        this.gl = null;\n\n        delete this.ctx;\n        delete this.renderState;\n        delete this.gl;\n    }\n\n    _reset() {\n        this._bindRenderTexture(null);\n        this._setScissor(null);\n        this._clearRenderTexture();\n    }\n\n    execute() {\n        this._reset();\n\n        let qops = this.renderState.quadOperations;\n\n        let i = 0, j = 0, n = qops.length;\n        while (i < n) {\n            this._processQuadOperation(qops[i]);\n            i++;\n        }\n    }\n\n    _processQuadOperation(quadOperation) {\n        if (quadOperation.renderTextureInfo && quadOperation.renderTextureInfo.ignore) {\n            // Ignore quad operations when we are 're-using' another texture as the render texture result.\n            return;\n        }\n\n        this._setupQuadOperation(quadOperation);\n        this._execQuadOperation(quadOperation);\n\n    }\n\n    _setupQuadOperation(quadOperation) {\n    }\n\n    _execQuadOperation(op) {\n        // Set render texture.\n        let nativeTexture = op.renderTextureInfo ? op.renderTextureInfo.nativeTexture : null;\n\n        if (this._renderTexture !== nativeTexture) {\n            this._bindRenderTexture(nativeTexture);\n        }\n\n        if (op.renderTextureInfo && !op.renderTextureInfo.cleared) {\n            this._setScissor(null);\n            this._clearRenderTexture();\n            op.renderTextureInfo.cleared = true;\n            this._setScissor(op.scissor);\n        } else {\n            this._setScissor(op.scissor);\n        }\n\n        this._renderQuadOperation(op);\n    }\n\n    _renderQuadOperation(op) {\n    }\n\n    _bindRenderTexture(renderTexture) {\n        this._renderTexture = renderTexture;\n    }\n\n    _clearRenderTexture(renderTexture) {\n    }\n\n    _setScissor(area) {\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreRenderExecutor from \"../../tree/core/CoreRenderExecutor.mjs\";\n\nexport default class WebGLCoreRenderExecutor extends CoreRenderExecutor {\n\n    constructor(ctx) {\n        super(ctx)\n\n        this.gl = this.ctx.stage.gl;\n\n        this.init();\n    }\n\n    init() {\n        let gl = this.gl;\n\n        // Create new sharable buffer for params.\n        this._attribsBuffer = gl.createBuffer();\n\n        let maxQuads = Math.floor(this.renderState.quads.data.byteLength / 80);\n\n        // Init webgl arrays.\n        let allIndices = new Uint16Array(maxQuads * 6);\n\n        // fill the indices with the quads to draw.\n        for (let i = 0, j = 0; i < maxQuads; i += 6, j += 4) {\n            allIndices[i] = j;\n            allIndices[i + 1] = j + 1;\n            allIndices[i + 2] = j + 2;\n            allIndices[i + 3] = j;\n            allIndices[i + 4] = j + 2;\n            allIndices[i + 5] = j + 3;\n        }\n\n        // The quads buffer can be (re)used to draw a range of quads.\n        this._quadsBuffer = gl.createBuffer();\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._quadsBuffer);\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, allIndices, gl.STATIC_DRAW);\n\n        // The matrix that causes the [0,0 - W,H] box to map to [-1,-1 - 1,1] in the end results.\n        this._projection = new Float32Array([2/this.ctx.stage.coordsWidth, -2/this.ctx.stage.coordsHeight]);\n\n    }\n\n    destroy() {\n        super.destroy();\n        this.gl.deleteBuffer(this._attribsBuffer);\n        this.gl.deleteBuffer(this._quadsBuffer);\n\n        this.gl = null;\n        delete this.gl;\n    }\n\n    _reset() {\n        super._reset();\n\n        let gl = this.gl;\n        gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        gl.enable(gl.BLEND);\n        gl.disable(gl.DEPTH_TEST);\n\n        this._stopShaderProgram();\n        this._setupBuffers();\n    }\n\n    _setupBuffers() {\n        let gl = this.gl;\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._quadsBuffer);\n        let element = new Float32Array(this.renderState.quads.data, 0, this.renderState.quads.dataLength);\n        gl.bindBuffer(gl.ARRAY_BUFFER, this._attribsBuffer);\n        gl.bufferData(gl.ARRAY_BUFFER, element, gl.DYNAMIC_DRAW);\n    }\n\n    _setupQuadOperation(quadOperation) {\n        super._setupQuadOperation(quadOperation);\n        this._useShaderProgram(quadOperation.shader, quadOperation);\n    }\n\n    _renderQuadOperation(op) {\n        let shader = op.shader;\n\n        if (op.length || op.shader.addEmpty()) {\n            shader.beforeDraw(op);\n            shader.draw(op);\n            shader.afterDraw(op);\n        }\n    }\n\n    /**\n     * @param {WebGLShader} shader;\n     * @param {CoreQuadOperation} operation;\n     */\n    _useShaderProgram(shader, operation) {\n        if (!shader.hasSameProgram(this._currentShaderProgram)) {\n            if (this._currentShaderProgram) {\n                this._currentShaderProgram.stopProgram();\n            }\n            shader.useProgram();\n            this._currentShaderProgram = shader;\n        }\n        shader.setupUniforms(operation);\n    }\n\n    _stopShaderProgram() {\n        if (this._currentShaderProgram) {\n            // The currently used shader program should be stopped gracefully.\n            this._currentShaderProgram.stopProgram();\n            this._currentShaderProgram = null;\n        }\n    }\n\n    _bindRenderTexture(renderTexture) {\n        super._bindRenderTexture(renderTexture);\n\n        let gl = this.gl;\n        if (!this._renderTexture) {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n            gl.viewport(0,0,this.ctx.stage.w,this.ctx.stage.h);\n        } else {\n            gl.bindFramebuffer(gl.FRAMEBUFFER, this._renderTexture.framebuffer);\n            gl.viewport(0,0,this._renderTexture.w, this._renderTexture.h);\n        }\n    }\n\n    _clearRenderTexture() {\n        super._clearRenderTexture();\n        let gl = this.gl;\n        if (!this._renderTexture) {\n            let glClearColor = this.ctx.stage.getClearColor();\n            if (glClearColor) {\n                gl.clearColor(glClearColor[0] * glClearColor[3], glClearColor[1] * glClearColor[3], glClearColor[2] * glClearColor[3], glClearColor[3]);\n                gl.clear(gl.COLOR_BUFFER_BIT);\n            }\n        } else {\n            // Clear texture.\n            gl.clearColor(0, 0, 0, 0);\n            gl.clear(gl.COLOR_BUFFER_BIT);\n        }\n    }\n\n    _setScissor(area) {\n        super._setScissor(area);\n\n        if (this._scissor === area) {\n            return;\n        }\n        this._scissor = area;\n\n        let gl = this.gl;\n        if (!area) {\n            gl.disable(gl.SCISSOR_TEST);\n        } else {\n            gl.enable(gl.SCISSOR_TEST);\n            let precision = this.ctx.stage.getRenderPrecision();\n            let y = area[1];\n            if (this._renderTexture === null) {\n                // Flip.\n                y = (this.ctx.stage.h / precision - (area[1] + area[3]));\n            }\n            gl.scissor(Math.round(area[0] * precision), Math.round(y * precision), Math.round(area[2] * precision), Math.round(area[3] * precision));\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class CoreRenderState {\n\n    constructor(ctx) {\n        this.ctx = ctx;\n\n        this.stage = ctx.stage;\n\n        this.defaultShader = this.stage.renderer.getDefaultShader(ctx);\n\n        this.renderer = ctx.stage.renderer;\n\n        this.quads = this.renderer.createCoreQuadList(ctx);\n\n    }\n\n    reset() {\n        this._renderTextureInfo = null;\n\n        this._scissor = null;\n\n        this._shader = null;\n\n        this._shaderOwner = null;\n\n        this._realShader = null;\n\n        this._check = false;\n\n        this.quadOperations = [];\n\n        this._texturizer = null;\n\n        this._texturizerTemporary = false;\n\n        this._quadOperation = null;\n\n        this.quads.reset();\n\n        this._temporaryTexturizers = [];\n        \n        this._isCachingTexturizer = false;\n\n    }\n\n    get length() {\n        return this.quads.quadTextures.length;\n    }\n\n    setShader(shader, owner) {\n        if (this._shaderOwner !== owner || this._realShader !== shader) {\n            // Same shader owner: active shader is also the same.\n            // Prevent any shader usage to save performance.\n\n            this._realShader = shader;\n\n            if (shader.useDefault()) {\n                // Use the default shader when possible to prevent unnecessary program changes.\n                shader = this.defaultShader;\n            }\n            if (this._shader !== shader || this._shaderOwner !== owner) {\n                this._shader = shader;\n                this._shaderOwner = owner;\n                this._check = true;\n            }\n        }\n    }\n\n    get renderTextureInfo() {\n        return this._renderTextureInfo;\n    }\n\n    setScissor(area) {\n        if (this._scissor !== area) {\n            if (area) {\n                this._scissor = area;\n            } else {\n                this._scissor = null;\n            }\n            this._check = true;\n        }\n    }\n\n    getScissor() {\n        return this._scissor;\n    }\n\n    setRenderTextureInfo(renderTextureInfo) {\n        if (this._renderTextureInfo !== renderTextureInfo) {\n            this._renderTextureInfo = renderTextureInfo;\n            this._scissor = null;\n            this._check = true;\n        }\n    }\n\n    /**\n     * Sets the texturizer to be drawn during subsequent addQuads.\n     * @param {ElementTexturizer} texturizer\n     */\n    setTexturizer(texturizer, cache = false) {\n        this._texturizer = texturizer;\n        this._cacheTexturizer = cache;\n    }\n\n    set isCachingTexturizer(v) {\n        this._isCachingTexturizer = v;\n    }\n\n    get isCachingTexturizer() {\n        return this._isCachingTexturizer;\n    }\n\n    addQuad(elementCore) {\n        if (!this._quadOperation) {\n            this._createQuadOperation();\n        } else if (this._check && this._hasChanges()) {\n            this._finishQuadOperation();\n            this._check = false;\n        }\n\n        let nativeTexture = null;\n        if (this._texturizer) {\n            nativeTexture = this._texturizer.getResultTexture();\n\n            if (!this._cacheTexturizer) {\n                // We can release the temporary texture immediately after finalizing this quad operation.\n                this._temporaryTexturizers.push(this._texturizer);\n            }\n        }\n\n        if (!nativeTexture) {\n            nativeTexture = elementCore._displayedTextureSource.nativeTexture;\n        }\n\n        if (this._renderTextureInfo) {\n            if (this._shader === this.defaultShader && this._renderTextureInfo.empty) {\n                // The texture might be reusable under some conditions. We will check them in ElementCore.renderer.\n                this._renderTextureInfo.nativeTexture = nativeTexture;\n                this._renderTextureInfo.offset = this.length;\n            } else {\n                // It is not possible to reuse another texture when there is more than one quad.\n                this._renderTextureInfo.nativeTexture = null;\n            }\n            this._renderTextureInfo.empty = false;\n        }\n\n        this.quads.quadTextures.push(nativeTexture);\n        this.quads.quadElements.push(elementCore);\n\n        this._quadOperation.length++;\n\n        this.renderer.addQuad(this, this.quads, this.length - 1)\n    }\n\n    finishedRenderTexture() {\n        if (this._renderTextureInfo.nativeTexture) {\n            // There was only one texture drawn in this render texture.\n            // Check if we can reuse it so that we can optimize out an unnecessary render texture operation.\n            // (it should exactly span this render texture).\n            if (!this._isRenderTextureReusable()) {\n                this._renderTextureInfo.nativeTexture = null;\n            }\n        }\n    }\n\n    _isRenderTextureReusable() {\n        const offset = this._renderTextureInfo.offset;\n        return (this.quads.quadTextures[offset].w === this._renderTextureInfo.w) &&\n            (this.quads.quadTextures[offset].h === this._renderTextureInfo.h) &&\n            this.renderer.isRenderTextureReusable(this, this._renderTextureInfo)\n    }\n\n    _hasChanges() {\n        let q = this._quadOperation;\n        if (this._shader !== q.shader) return true;\n        if (this._shaderOwner !== q.shaderOwner) return true;\n        if (this._renderTextureInfo !== q.renderTextureInfo) return true;\n        if (this._scissor !== q.scissor) {\n            if ((this._scissor[0] !== q.scissor[0]) || (this._scissor[1] !== q.scissor[1]) || (this._scissor[2] !== q.scissor[2]) || (this._scissor[3] !== q.scissor[3])) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    _finishQuadOperation(create = true) {\n        if (this._quadOperation) {\n            if (this._quadOperation.length || this._shader.addEmpty()) {\n                if (!this._quadOperation.scissor || ((this._quadOperation.scissor[2] > 0) && (this._quadOperation.scissor[3] > 0))) {\n                    // Ignore empty clipping regions.\n                    this.quadOperations.push(this._quadOperation);\n                }\n            }\n\n            if (this._temporaryTexturizers.length) {\n                for (let i = 0, n = this._temporaryTexturizers.length; i < n; i++) {\n                    // We can now reuse these render-to-textures in subsequent stages.\n                    // Huge performance benefit when filtering (fast blur).\n                    this._temporaryTexturizers[i].releaseRenderTexture();\n                }\n                this._temporaryTexturizers = [];\n            }\n\n            this._quadOperation = null;\n        }\n\n        if (create) {\n            this._createQuadOperation();\n        }\n    }\n\n    _createQuadOperation() {\n        this._quadOperation = this.renderer.createCoreQuadOperation(\n            this.ctx,\n            this._shader,\n            this._shaderOwner,\n            this._renderTextureInfo,\n            this._scissor,\n            this.length\n        );\n        this._check = false;\n    }\n\n    finish() {\n        if (this._quadOperation) {\n            // Add remaining.\n            this._finishQuadOperation(false);\n        }\n\n        this.renderer.finishRenderState(this);\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Base functionality for shader setup/destroy.\n */\nexport default class WebGLShaderProgram {\n\n    constructor(vertexShaderSource, fragmentShaderSource) {\n\n        this.vertexShaderSource = vertexShaderSource;\n        this.fragmentShaderSource = fragmentShaderSource;\n\n        this._program = null;\n        this.gl = null;\n\n        this._uniformLocations = new Map();\n        this._attributeLocations = new Map();\n\n        this._currentUniformValues = {};\n    }\n\n    compile(gl) {\n        if (this._program) return;\n\n        this.gl = gl;\n\n        this._program = gl.createProgram();\n\n        let glVertShader = this._glCompile(gl.VERTEX_SHADER, this.vertexShaderSource);\n        let glFragShader = this._glCompile(gl.FRAGMENT_SHADER, this.fragmentShaderSource);\n\n        gl.attachShader(this._program, glVertShader);\n        gl.attachShader(this._program, glFragShader);\n        gl.linkProgram(this._program);\n\n        // if linking fails, then log and cleanup\n        if (!gl.getProgramParameter(this._program, gl.LINK_STATUS)) {\n            console.error('[Lightning] Error: Could not initialize shader.');\n            console.error('[Lightning] gl.VALIDATE_STATUS', gl.getProgramParameter(this._program, gl.VALIDATE_STATUS));\n            console.error('[Lightning] gl.getError()', gl.getError());\n\n            // if there is a program info log, log it\n            if (gl.getProgramInfoLog(this._program) !== '') {\n                console.warn('[Lightning] Warning: gl.getProgramInfoLog()', gl.getProgramInfoLog(this._program));\n            }\n\n            gl.deleteProgram(this._program);\n            this._program = null;\n        }\n\n        // clean up some shaders\n        gl.deleteShader(glVertShader);\n        gl.deleteShader(glFragShader);\n    }\n\n    _glCompile(type, src) {\n        let shader = this.gl.createShader(type);\n\n        this.gl.shaderSource(shader, src);\n        this.gl.compileShader(shader);\n\n        if (!this.gl.getShaderParameter(shader, this.gl.COMPILE_STATUS)) {\n            console.error('[Lightning]', this.constructor.name, 'Type: ' + (type === this.gl.VERTEX_SHADER ? 'vertex shader' : 'fragment shader') );\n            console.error('[Lightning]', this.gl.getShaderInfoLog(shader));\n            let idx = 0;\n            console.error('[Lightning]', \"========== source ==========\\n\" + src.split(\"\\n\").map(line => \"\" + (++idx) + \": \" + line).join(\"\\n\"));\n            return null;\n        }\n\n        return shader;\n    }\n\n    getUniformLocation(name) {\n        let location = this._uniformLocations.get(name);\n        if (location === undefined) {\n            location = this.gl.getUniformLocation(this._program, name);\n            this._uniformLocations.set(name, location);\n        }\n\n        return location;\n    }\n\n    getAttribLocation(name) {\n        let location = this._attributeLocations.get(name);\n        if (location === undefined) {\n            location = this.gl.getAttribLocation(this._program, name);\n            this._attributeLocations.set(name, location);\n        }\n\n        return location;\n    }\n\n    destroy() {\n        if (this._program) {\n            this.gl.deleteProgram(this._program);\n        }\n\n        this._attributeLocations = null;\n        this._currentUniformValues = null;\n        this.fragmentShaderSource = null;\n        this._program = null;\n        this.gl = null;\n        this._uniformLocations = null;\n        this.vertexShaderSource = null;  \n\n        delete this.vertexShaderSource;\n        delete this._program;        \n        delete this._currentUniformValues;\n        delete this.fragmentShaderSource;\n        delete this.gl;\n        delete this._uniformLocations;\n        delete this._attributeLocations;\n\n    }\n\n    get glProgram() {\n        return this._program;\n    }\n\n    get compiled() {\n        return !!this._program;\n    }\n\n    _valueEquals(v1, v2) {\n        // Uniform value is either a typed array or a numeric value.\n        if (v1.length && v2.length) {\n            for (let i = 0, n = v1.length; i < n; i++) {\n                if (v1[i] !== v2[i]) return false;\n            }\n            return true;\n        } else {\n            return (v1 === v2);\n        }\n    }\n\n    _valueClone(v) {\n        if (v.length) {\n            return v.slice(0);\n        } else {\n            return v;\n        }\n    }\n\n    setUniformValue(name, value, glFunction) {\n        let v = this._currentUniformValues[name];\n        if (v === undefined || !this._valueEquals(v, value)) {\n            let clonedValue = this._valueClone(value);\n            this._currentUniformValues[name] = clonedValue;\n\n            let loc = this.getUniformLocation(name);\n            if (loc) {\n                let isMatrix = (glFunction === this.gl.uniformMatrix2fv || glFunction === this.gl.uniformMatrix3fv || glFunction === this.gl.uniformMatrix4fv);\n                if (isMatrix) {\n                    glFunction.call(this.gl, loc, false, clonedValue);\n                } else {\n                    glFunction.call(this.gl, loc, clonedValue);\n                }\n            }\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport WebGLShaderProgram from \"./WebGLShaderProgram.mjs\";\nimport Shader from \"../../tree/Shader.mjs\";\n\nexport default class WebGLShader extends Shader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        const stage = ctx.stage;\n\n        this._program = stage.renderer.shaderPrograms.get(this.constructor);\n        if (!this._program) {\n            this._program = new WebGLShaderProgram(this.constructor.vertexShaderSource, this.constructor.fragmentShaderSource);\n\n            // Let the vbo context perform garbage collection.\n            stage.renderer.shaderPrograms.set(this.constructor, this._program);\n        }\n\n        this.gl = stage.gl;\n    }\n\n    get glProgram() {\n        return this._program.glProgram;\n    }\n\n    _init() {\n        if (!this._initialized) {\n            this.initialize();\n            this._initialized = true;\n        }\n    }\n\n    initialize() {\n        this._program.compile(this.gl);\n    }\n\n    get initialized() {\n        return this._initialized;\n    }\n\n    _uniform(name) {\n        return this._program.getUniformLocation(name);\n    }\n\n    _attrib(name) {\n        return this._program.getAttribLocation(name);\n    }\n\n    _setUniform(name, value, glFunction) {\n        this._program.setUniformValue(name, value, glFunction);\n    }\n\n    useProgram() {\n        this._init();\n        this.gl.useProgram(this.glProgram);\n        this.beforeUsage();\n        this.enableAttribs();\n    }\n\n    stopProgram() {\n        this.afterUsage();\n        this.disableAttribs();\n    }\n\n    hasSameProgram(other) {\n        // For performance reasons, we first check for identical references.\n        return (other && ((other === this) || (other._program === this._program)));\n    }\n\n    beforeUsage() {\n        // Override to set settings other than the default settings (blend mode etc).\n    }\n\n    afterUsage() {\n        // All settings changed in beforeUsage should be reset here.\n    }\n\n    enableAttribs() {\n\n    }\n\n    disableAttribs() {\n\n    }\n\n    getExtraAttribBytesPerVertex() {\n        return 0;\n    }\n\n    getVertexAttribPointerOffset(operation) {\n        return operation.extraAttribsDataByteOffset - operation.index * 4 * this.getExtraAttribBytesPerVertex();\n    }\n\n    setExtraAttribsInBuffer(operation) {\n        // Set extra attrib data in in operation.quads.data/floats/uints, starting from\n        // operation.extraAttribsBufferByteOffset.\n    }\n\n    setupUniforms(operation) {\n        // Set all shader-specific uniforms.\n        // Notice that all uniforms should be set, even if they have not been changed within this shader instance.\n        // The uniforms are shared by all shaders that have the same type (and shader program).\n    }\n\n    _getProjection(operation) {\n        return operation.getProjection();\n    }\n\n    getFlipY(operation) {\n        return this._getProjection(operation)[1] < 0;\n    }\n\n    beforeDraw(operation) {\n    }\n\n    draw(operation) {\n    }\n\n    afterDraw(operation) {\n    }\n\n    cleanup() {\n        this._initialized = false;\n        // Program takes little resources, so it is only destroyed when the full stage is destroyed.\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport WebGLShader from \"../WebGLShader.mjs\";\n\nexport default class DefaultShader extends WebGLShader {\n\n    enableAttribs() {\n        // Enables the attribs in the shader program.\n        let gl = this.gl;\n        gl.vertexAttribPointer(this._attrib(\"aVertexPosition\"), 2, gl.FLOAT, false, 20, 0);\n        gl.enableVertexAttribArray(this._attrib(\"aVertexPosition\"));\n\n        if (this._attrib(\"aTextureCoord\") !== -1) {\n            gl.vertexAttribPointer(this._attrib(\"aTextureCoord\"), 2, gl.FLOAT, false, 20, 2 * 4);\n            gl.enableVertexAttribArray(this._attrib(\"aTextureCoord\"));\n        }\n\n        if (this._attrib(\"aColor\") !== -1) {\n            // Some shaders may ignore the color.\n            gl.vertexAttribPointer(this._attrib(\"aColor\"), 4, gl.UNSIGNED_BYTE, true, 20, 4 * 4);\n            gl.enableVertexAttribArray(this._attrib(\"aColor\"));\n        }\n    }\n\n    disableAttribs() {\n        // Disables the attribs in the shader program.\n        let gl = this.gl;\n        gl.disableVertexAttribArray(this._attrib(\"aVertexPosition\"));\n\n        if (this._attrib(\"aTextureCoord\") !== -1) {\n            gl.disableVertexAttribArray(this._attrib(\"aTextureCoord\"));\n        }\n\n        if (this._attrib(\"aColor\") !== -1) {\n            gl.disableVertexAttribArray(this._attrib(\"aColor\"));\n        }\n    }\n\n    setupUniforms(operation) {\n        this._setUniform(\"projection\", this._getProjection(operation), this.gl.uniform2fv, false);\n    }\n\n    draw(operation) {\n        let gl = this.gl;\n\n        let length = operation.length;\n\n        if (length) {\n            let glTexture = operation.getTexture(0);\n            let pos = 0;\n            for (let i = 0; i < length; i++) {\n                let tx = operation.getTexture(i);\n                if (glTexture !== tx) {\n                    gl.bindTexture(gl.TEXTURE_2D, glTexture);\n                    gl.drawElements(gl.TRIANGLES, 6 * (i - pos), gl.UNSIGNED_SHORT, (pos + operation.index) * 6 * 2);\n                    glTexture = tx;\n                    pos = i;\n                }\n            }\n            \n            gl.bindTexture(gl.TEXTURE_2D, glTexture);\n            gl.drawElements(gl.TRIANGLES, 6 * (length - pos), gl.UNSIGNED_SHORT, (pos + operation.index) * 6 * 2);\n        }\n    }\n\n}\n\nDefaultShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nDefaultShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    void main(void){\n        gl_FragColor = texture2D(uSampler, vTextureCoord) * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class Renderer {\n\n    constructor(stage) {\n        this.stage = stage;\n        this._defaultShader = undefined;\n    }\n\n    gc(aggressive) {\n    }\n\n    destroy() {\n    }\n\n    getDefaultShader(ctx = this.stage.ctx) {\n        if (!this._defaultShader) {\n            this._defaultShader = this._createDefaultShader(ctx);\n        }\n        return this._defaultShader;\n    }\n\n    _createDefaultShader(ctx) {\n    }\n\n    isValidShaderType(shaderType) {\n        return (shaderType.prototype instanceof this._getShaderBaseType());\n    }\n\n    createShader(ctx, settings) {\n        const shaderType = settings.type;\n        // If shader type is not correct, use a different platform.\n        if (!this.isValidShaderType(shaderType)) {\n            const convertedShaderType = this._getShaderAlternative(shaderType);\n            if (!convertedShaderType) {\n                console.warn(\"[Lightning] Shader has no implementation for render target: \" + shaderType.name);\n                return this._createDefaultShader(ctx);\n            }\n            return new convertedShaderType(ctx);\n        } else {\n            const shader = new shaderType(ctx);\n            Base.patchObject(this, settings);\n            return shader;\n        }\n    }\n\n    _getShaderBaseType() {\n    }\n\n    _getShaderAlternative(shaderType) {\n        return this.getDefaultShader();\n    }\n\n    copyRenderTexture(renderTexture, nativeTexture, options) {\n        console.warn('[Lightning] copyRenderTexture not supported by renderer');\n    }\n}\n\nimport Base from \"../tree/Base.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../../tree/Utils.mjs\";\nimport StageUtils from \"../../tree/StageUtils.mjs\";\nimport WebGLCoreQuadList from \"./WebGLCoreQuadList.mjs\";\nimport WebGLCoreQuadOperation from \"./WebGLCoreQuadOperation.mjs\";\nimport WebGLCoreRenderExecutor from \"./WebGLCoreRenderExecutor.mjs\";\nimport CoreRenderState from \"../../tree/core/CoreRenderState.mjs\";\nimport DefaultShader from \"./shaders/DefaultShader.mjs\";\nimport WebGLShader from \"./WebGLShader.mjs\";\nimport Renderer from \"../Renderer.mjs\";\n\nexport default class WebGLRenderer extends Renderer {\n\n    constructor(stage) {\n        super(stage);\n        this.shaderPrograms = new Map();\n        this._compressedTextureExtensions = {\n            astc: stage.gl.getExtension('WEBGL_compressed_texture_astc'),\n            etc1: stage.gl.getExtension('WEBGL_compressed_texture_etc1'),\n            s3tc: stage.gl.getExtension('WEBGL_compressed_texture_s3tc'),\n            pvrtc: stage.gl.getExtension('WEBGL_compressed_texture_pvrtc'),\n        }\n    }\n\n    getCompressedTextureExtensions() {\n        return this._compressedTextureExtensions\n    }\n\n    destroy() {\n        this.shaderPrograms.forEach(shaderProgram => shaderProgram.destroy());\n\n        this.shaderPrograms = null;\n        this._compressedTextureExtensions = null;\n\n        delete this.shaderPrograms;\n        delete this._compressedTextureExtensions;\n    }\n\n    _createDefaultShader(ctx) {\n        return new DefaultShader(ctx);\n    }\n\n    _getShaderBaseType() {\n        return WebGLShader\n    }\n\n    _getShaderAlternative(shaderType) {\n        return shaderType.getWebGL && shaderType.getWebGL();\n    }\n\n    createCoreQuadList(ctx) {\n        return new WebGLCoreQuadList(ctx);\n    }\n\n    createCoreQuadOperation(ctx, shader, shaderOwner, renderTextureInfo, scissor, index) {\n        return new WebGLCoreQuadOperation(ctx, shader, shaderOwner, renderTextureInfo, scissor, index);\n    }\n\n    createCoreRenderExecutor(ctx) {\n        return new WebGLCoreRenderExecutor(ctx);\n    }\n\n    createCoreRenderState(ctx) {\n        return new CoreRenderState(ctx);\n    }\n\n    createRenderTexture(w, h, pw, ph) {\n        const gl = this.stage.gl;\n        const glTexture = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, pw, ph, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n        glTexture.params = {};\n        glTexture.params[gl.TEXTURE_MAG_FILTER] = gl.LINEAR;\n        glTexture.params[gl.TEXTURE_MIN_FILTER] = gl.LINEAR;\n        glTexture.params[gl.TEXTURE_WRAP_S] = gl.CLAMP_TO_EDGE;\n        glTexture.params[gl.TEXTURE_WRAP_T] = gl.CLAMP_TO_EDGE;\n        glTexture.options = { format: gl.RGBA, internalFormat: gl.RGBA, type: gl.UNSIGNED_BYTE };\n\n        // We need a specific framebuffer for every render texture.\n        glTexture.framebuffer = gl.createFramebuffer();\n        glTexture.projection = new Float32Array([2 / w, 2 / h]);\n\n        gl.bindFramebuffer(gl.FRAMEBUFFER, glTexture.framebuffer);\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, glTexture, 0);\n\n        return glTexture;\n    }\n\n    freeRenderTexture(glTexture) {\n        let gl = this.stage.gl;\n        gl.deleteFramebuffer(glTexture.framebuffer);\n        gl.deleteTexture(glTexture);\n    }\n\n    _getBytesPerPixel(fmt, type) {\n        const gl = this.stage.gl;\n\n        if (fmt === gl.RGBA) {\n            switch (type) {\n                case gl.UNSIGNED_BYTE:\n                    return 4;\n\n                case gl.UNSIGNED_SHORT_4_4_4_4:\n                    return 2;\n\n                case gl.UNSIGNED_SHORT_5_5_5_1:\n                    return 2;\n\n                default:\n                    throw new Error('Invalid type specified for GL_RGBA format');\n            }\n        }\n        else if (fmt === gl.RGB) {\n            switch (type) {\n                case gl.UNSIGNED_BYTE:\n                    return 3;\n\n                case gl.UNSIGNED_BYTE_5_6_5:\n                    return 2;\n\n                default:\n                    throw new Error('Invalid type specified for GL_RGB format');\n            }\n        }\n        else {\n            throw new Error('Invalid format specified in call to _getBytesPerPixel()');\n        }\n    }\n\n    uploadTextureSource(textureSource, options) {\n        const gl = this.stage.gl;\n\n        const source = options.source;\n        let compressed = false;\n        if (options.renderInfo) {\n            compressed = options.renderInfo.compressed || false\n        }\n\n        const format = {\n            premultiplyAlpha: true,\n            hasAlpha: true\n        };\n\n        if (options && options.hasOwnProperty('premultiplyAlpha')) {\n            format.premultiplyAlpha = options.premultiplyAlpha;\n        }\n\n        if (options && options.hasOwnProperty('flipBlueRed')) {\n            format.flipBlueRed = options.flipBlueRed;\n        }\n\n        if (options && options.hasOwnProperty('hasAlpha')) {\n            format.hasAlpha = options.hasAlpha;\n        }\n\n        if (!format.hasAlpha) {\n            format.premultiplyAlpha = false;\n        }\n\n        format.texParams = options.texParams || {}\n        format.texOptions = options.texOptions || {}\n\n        let glTexture = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n\n        gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, format.premultiplyAlpha);\n\n        if (Utils.isNode) {\n            gl.pixelStorei(gl.UNPACK_FLIP_BLUE_RED, !!format.flipBlueRed);\n        }\n\n        const texParams = format.texParams;\n        if (!texParams[gl.TEXTURE_MAG_FILTER]) texParams[gl.TEXTURE_MAG_FILTER] = gl.LINEAR;\n        if (!texParams[gl.TEXTURE_MIN_FILTER]) texParams[gl.TEXTURE_MIN_FILTER] = gl.LINEAR;\n        if (!texParams[gl.TEXTURE_WRAP_S]) texParams[gl.TEXTURE_WRAP_S] = gl.CLAMP_TO_EDGE;\n        if (!texParams[gl.TEXTURE_WRAP_T]) texParams[gl.TEXTURE_WRAP_T] = gl.CLAMP_TO_EDGE;\n\n        Object.keys(texParams).forEach(key => {\n            const value = texParams[key];\n            gl.texParameteri(gl.TEXTURE_2D, parseInt(key), value);\n        });\n\n        if (compressed) {\n            this.stage.platform.uploadCompressedGlTexture(gl, textureSource, source);\n            return glTexture;\n        }\n         \n        const texOptions = format.texOptions;\n        texOptions.format = texOptions.format || (format.hasAlpha ? gl.RGBA : gl.RGB);\n        texOptions.type = texOptions.type || gl.UNSIGNED_BYTE;\n        texOptions.internalFormat = texOptions.internalFormat || texOptions.format;\n        if (options && options.imageRef) {\n            texOptions.imageRef = options.imageRef;\n        }\n        \n        this.stage.platform.uploadGlTexture(gl, textureSource, source, texOptions);\n        \n        glTexture.params = Utils.cloneObjShallow(texParams);\n        glTexture.options = Utils.cloneObjShallow(texOptions);\n\n        // calculate bytes per pixel for vram usage tracking\n        glTexture.bytesPerPixel = this._getBytesPerPixel(texOptions.format, texOptions.type);\n\n        return glTexture;\n    }\n\n    freeTextureSource(textureSource) {\n        this.stage.gl.deleteTexture(textureSource.nativeTexture);\n    }\n\n    addQuad(renderState, quads, index) {\n        let offset = (index * 20);\n        const elementCore = quads.quadElements[index];\n\n        let r = elementCore._renderContext;\n\n        let floats = renderState.quads.floats;\n        let uints = renderState.quads.uints;\n        const mca = StageUtils.mergeColorAlpha;\n\n        if (r.tb !== 0 || r.tc !== 0) {\n            floats[offset++] = r.px;\n            floats[offset++] = r.py;\n            floats[offset++] = elementCore._ulx;\n            floats[offset++] = elementCore._uly;\n            uints[offset++] = mca(elementCore._colorUl, r.alpha);\n            floats[offset++] = r.px + elementCore._w * r.ta;\n            floats[offset++] = r.py + elementCore._w * r.tc;\n            floats[offset++] = elementCore._brx;\n            floats[offset++] = elementCore._uly;\n            uints[offset++] = mca(elementCore._colorUr, r.alpha);\n            floats[offset++] = r.px + elementCore._w * r.ta + elementCore._h * r.tb;\n            floats[offset++] = r.py + elementCore._w * r.tc + elementCore._h * r.td;\n            floats[offset++] = elementCore._brx;\n            floats[offset++] = elementCore._bry;\n            uints[offset++] = mca(elementCore._colorBr, r.alpha);\n            floats[offset++] = r.px + elementCore._h * r.tb;\n            floats[offset++] = r.py + elementCore._h * r.td;\n            floats[offset++] = elementCore._ulx;\n            floats[offset++] = elementCore._bry;\n            uints[offset] = mca(elementCore._colorBl, r.alpha);\n        } else {\n            // Simple.\n            let cx = r.px + elementCore._w * r.ta;\n            let cy = r.py + elementCore._h * r.td;\n\n            floats[offset++] = r.px;\n            floats[offset++] = r.py;\n            floats[offset++] = elementCore._ulx;\n            floats[offset++] = elementCore._uly;\n            uints[offset++] = mca(elementCore._colorUl, r.alpha);\n            floats[offset++] = cx;\n            floats[offset++] = r.py;\n            floats[offset++] = elementCore._brx;\n            floats[offset++] = elementCore._uly;\n            uints[offset++] = mca(elementCore._colorUr, r.alpha);\n            floats[offset++] = cx;\n            floats[offset++] = cy;\n            floats[offset++] = elementCore._brx;\n            floats[offset++] = elementCore._bry;\n            uints[offset++] = mca(elementCore._colorBr, r.alpha);\n            floats[offset++] = r.px;\n            floats[offset++] = cy;\n            floats[offset++] = elementCore._ulx;\n            floats[offset++] = elementCore._bry;\n            uints[offset] = mca(elementCore._colorBl, r.alpha);\n        }\n    }\n\n    isRenderTextureReusable(renderState, renderTextureInfo) {\n        let offset = (renderState._renderTextureInfo.offset * 80) / 4;\n        let floats = renderState.quads.floats;\n        let uints = renderState.quads.uints;\n        return ((floats[offset] === 0) &&\n            (floats[offset + 1] === 0) &&\n            (floats[offset + 2] === 0) &&\n            (floats[offset + 3] === 0) &&\n            (uints[offset + 4] === 0xFFFFFFFF) &&\n            (floats[offset + 5] === renderTextureInfo.w) &&\n            (floats[offset + 6] === 0) &&\n            (floats[offset + 7] === 1) &&\n            (floats[offset + 8] === 0) &&\n            (uints[offset + 9] === 0xFFFFFFFF) &&\n            (floats[offset + 10] === renderTextureInfo.w) &&\n            (floats[offset + 11] === renderTextureInfo.h) &&\n            (floats[offset + 12] === 1) &&\n            (floats[offset + 13] === 1) &&\n            (uints[offset + 14] === 0xFFFFFFFF) &&\n            (floats[offset + 15] === 0) &&\n            (floats[offset + 16] === renderTextureInfo.h) &&\n            (floats[offset + 17] === 0) &&\n            (floats[offset + 18] === 1) &&\n            (uints[offset + 19] === 0xFFFFFFFF));\n    }\n\n    finishRenderState(renderState) {\n        // Set extra shader attribute data.\n        let offset = renderState.length * 80;\n        for (let i = 0, n = renderState.quadOperations.length; i < n; i++) {\n            renderState.quadOperations[i].extraAttribsDataByteOffset = offset;\n            let extra = renderState.quadOperations[i].shader.getExtraAttribBytesPerVertex() * 4 * renderState.quadOperations[i].length;\n            offset += extra;\n            if (extra) {\n                renderState.quadOperations[i].shader.setExtraAttribsInBuffer(renderState.quadOperations[i], renderState.quads);\n            }\n        }\n        renderState.quads.dataLength = offset;\n    }\n\n    copyRenderTexture(renderTexture, nativeTexture, options) {\n        const gl = this.stage.gl;\n        gl.bindTexture(gl.TEXTURE_2D, nativeTexture);\n        gl.bindFramebuffer(gl.FRAMEBUFFER, renderTexture.framebuffer);\n        const precision = renderTexture.precision;\n        gl.copyTexSubImage2D(\n            gl.TEXTURE_2D,\n            0,\n            precision * (options.sx || 0),\n            precision * (options.sy || 0),\n            precision * (options.x || 0),\n            precision * (options.y || 0),\n            precision * (options.w || renderTexture.ow),\n            precision * (options.h || renderTexture.oh));\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreQuadList from \"../../tree/core/CoreQuadList.mjs\";\n\nexport default class C2dCoreQuadList extends CoreQuadList {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this.renderContexts = [];\n        this.modes = [];\n    }\n\n    setRenderContext(index, v) {\n        this.renderContexts[index] = v;\n    }\n\n    setSimpleTc(index, v) {\n        if (v) {\n            this.modes[index] |= 1;\n        } else {\n            this.modes[index] -= (this.modes[index] & 1);\n        }\n    }\n\n    setWhite(index, v) {\n        if (v) {\n            this.modes[index] |= 2;\n        } else {\n            this.modes[index] -= (this.modes[index] & 2);\n        }\n    }\n\n    getRenderContext(index) {\n        return this.renderContexts[index];\n    }\n\n    getSimpleTc(index) {\n        return (this.modes[index] & 1);\n    }\n\n    getWhite(index) {\n        return (this.modes[index] & 2);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreQuadOperation from \"../../tree/core/CoreQuadOperation.mjs\";\n\nexport default class C2dCoreQuadOperation extends CoreQuadOperation {\n\n    getRenderContext(index) {\n        return this.quads.getRenderContext(this.index + index);\n    }\n\n    getSimpleTc(index) {\n        return this.quads.getSimpleTc(this.index + index);\n    }\n\n    getWhite(index) {\n        return this.quads.getWhite(this.index + index);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport CoreRenderExecutor from \"../../tree/core/CoreRenderExecutor.mjs\";\nimport StageUtils from \"../../tree/StageUtils.mjs\";\nimport Utils from \"../../tree/Utils.mjs\";\n\nexport default class C2dCoreRenderExecutor extends CoreRenderExecutor {\n\n    init() {\n        this._mainRenderTexture = this.ctx.stage.getCanvas();\n    }\n\n    _renderQuadOperation(op) {\n        let shader = op.shader;\n\n        if (op.length || op.shader.addEmpty()) {\n            const target = this._renderTexture || this._mainRenderTexture;\n            shader.beforeDraw(op, target);\n            shader.draw(op, target);\n            shader.afterDraw(op, target);\n        }\n    }\n\n    _clearRenderTexture() {\n        const ctx = this._getContext();\n\n        let clearColor = [0, 0, 0, 0];\n        if (this._mainRenderTexture.ctx === ctx) {\n            clearColor = this.ctx.stage.getClearColor();\n        }\n\n        const renderTexture = ctx.canvas;\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\n        if (!clearColor[0] && !clearColor[1] && !clearColor[2] && !clearColor[3]) {\n            ctx.clearRect(0, 0, renderTexture.width, renderTexture.height);\n        } else {\n            ctx.fillStyle = StageUtils.getRgbaStringFromArray(clearColor);\n            // Do not use fillRect because it produces artifacts.\n            ctx.globalCompositeOperation = 'copy';\n            ctx.beginPath();\n            ctx.rect(0, 0, renderTexture.width, renderTexture.height);\n            ctx.closePath();\n            ctx.fill();\n            ctx.globalCompositeOperation = 'source-over';\n        }\n    }\n    \n    _getContext() {\n        if (this._renderTexture) {\n            return this._renderTexture.ctx;\n        } else {\n            return this._mainRenderTexture.ctx;\n        } \n    }\n\n    _restoreContext() {\n        const ctx = this._getContext();\n        ctx.restore();\n        ctx.save();\n        ctx._scissor = null;\n    }\n\n    _setScissor(area) {\n        const ctx = this._getContext();\n\n        if (!C2dCoreRenderExecutor._equalScissorAreas(ctx.canvas, ctx._scissor, area)) {\n            // Clipping is stored in the canvas context state.\n            // We can't reset clipping alone so we need to restore the full context.\n            this._restoreContext();\n\n            let precision = this.ctx.stage.getRenderPrecision();\n            if (area) {\n                ctx.beginPath();\n                ctx.rect(Math.round(area[0] * precision), Math.round(area[1] * precision), Math.round(area[2] * precision), Math.round(area[3] * precision));\n                ctx.closePath();\n                ctx.clip();\n            }\n            ctx._scissor = area;\n        }\n    }\n\n    static _equalScissorAreas(canvas, area, current) {\n        if (!area) {\n            area = [0, 0, canvas.width, canvas.height]\n        }\n        if (!current) {\n            current = [0, 0, canvas.width, canvas.height]\n        }\n        return Utils.equalValues(area, current)\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Shader from \"../../tree/Shader.mjs\";\n\nexport default class C2dShader extends Shader {\n\n    beforeDraw(operation) {\n    }\n\n    draw(operation) {\n    }\n\n    afterDraw(operation) {\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport C2dShader from \"../C2dShader.mjs\";\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\n\nexport default class DefaultShader extends C2dShader {\n\n    constructor(ctx) {\n        super(ctx);\n        this._rectangleTexture = ctx.stage.rectangleTexture.source.nativeTexture;\n        this._tintManager = this.ctx.stage.renderer.tintManager;\n    }\n\n    draw(operation, target) {\n        const ctx = target.ctx;\n        let length = operation.length;\n        for (let i = 0; i < length; i++) {\n            const tx = operation.getTexture(i);\n            if (!tx) continue;\n            const vc = operation.getElementCore(i);\n            const rc = operation.getRenderContext(i);\n            const white = operation.getWhite(i);\n            const stc = operation.getSimpleTc(i);\n\n            //@todo: try to optimize out per-draw transform setting. split translate, transform.\n            const precision = this.ctx.stage.getRenderPrecision();\n            ctx.setTransform(rc.ta * precision, rc.tc * precision, rc.tb * precision, rc.td * precision, rc.px * precision, rc.py * precision);\n\n            const rect = (tx === this._rectangleTexture);\n            const info = {operation, target, index: i, rect};\n\n            if (rect) {\n                // Check for gradient.\n                if (white) {\n                    ctx.fillStyle = 'white';\n                } else {\n                    this._setColorGradient(ctx, vc);\n                }\n\n                ctx.globalAlpha = rc.alpha;\n                this._beforeDrawEl(info);\n                ctx.fillRect(0, 0, vc.w, vc.h);\n                this._afterDrawEl(info);\n                ctx.globalAlpha = 1.0;\n            } else {\n                // @todo: set image smoothing based on the texture.\n\n                // @todo: optimize by registering whether identity texcoords are used.\n                ctx.globalAlpha = rc.alpha;\n                this._beforeDrawEl(info);\n\n                // @todo: test if rounding yields better performance.\n\n                // Notice that simple texture coords can be turned on even though vc._ulx etc are not simple, because\n                //  we are rendering a render-to-texture (texcoords were stashed). Same is true for 'white' color btw.\n                const sourceX = stc ? 0 : (vc._ulx * tx.w);\n                const sourceY = stc ? 0 : (vc._uly * tx.h);\n                const sourceW = (stc ? 1 : (vc._brx - vc._ulx)) * tx.w;\n                const sourceH = (stc ? 1 : (vc._bry - vc._uly)) * tx.h;\n\n                let colorize = !white;\n                if (colorize) {\n                    // @todo: cache the tint texture for better performance.\n\n                    // Draw to intermediate texture with background color/gradient.\n                    // This prevents us from having to create a lot of render texture canvases.\n\n                    // Notice that we don't support (non-rect) gradients, only color tinting for c2d. We'll just take the average color.\n                    let color = vc._colorUl;\n                    if (vc._colorUl !== vc._colorUr || vc._colorUr !== vc._colorBl || vc._colorBr !== vc._colorBl) {\n                        color = StageUtils.mergeMultiColorsEqual([vc._colorUl, vc._colorUr, vc._colorBl, vc._colorBr]);\n                    }\n\n                    const alpha = ((color / 16777216) | 0) / 255.0;\n                    ctx.globalAlpha *= alpha;\n\n                    const rgb = color & 0x00FFFFFF;\n                    const tintTexture = this._tintManager.getTintTexture(tx, rgb);\n\n                    // Actually draw result.\n                    ctx.fillStyle = 'white';\n                    ctx.drawImage(tintTexture, sourceX, sourceY, sourceW, sourceH, 0, 0, vc.w, vc.h);\n                } else {\n                    ctx.fillStyle = 'white';\n                    ctx.drawImage(tx, sourceX, sourceY, sourceW, sourceH, 0, 0, vc.w, vc.h);\n                }\n                this._afterDrawEl(info);\n                ctx.globalAlpha = 1.0;\n            }\n        }\n    }\n\n    _setColorGradient(ctx, vc, w = vc.w, h = vc.h, transparency = true) {\n        let color = vc._colorUl;\n        let gradient;\n        //@todo: quick single color check.\n        //@todo: cache gradient/fill style (if possible, probably context-specific).\n\n        if (vc._colorUl === vc._colorUr) {\n            if (vc._colorBl === vc._colorBr) {\n                if (vc._colorUl === vc._colorBl) {\n                    // Single color.\n                } else {\n                    // Vertical gradient.\n                    gradient = ctx.createLinearGradient(0, 0, 0, h);\n                    if (transparency) {\n                        gradient.addColorStop(0, StageUtils.getRgbaString(vc._colorUl));\n                        gradient.addColorStop(1, StageUtils.getRgbaString(vc._colorBl));\n                    } else {\n                        gradient.addColorStop(0, StageUtils.getRgbString(vc._colorUl));\n                        gradient.addColorStop(1, StageUtils.getRgbString(vc._colorBl));\n\n                    }\n                }\n            } else {\n                // Not supported gradient.\n            }\n        } else {\n            if (vc._colorUl === vc._colorBl && vc._colorUr === vc._colorBr) {\n                // Horizontal gradient.\n                gradient = ctx.createLinearGradient(0, 0, w, 0);\n                if (transparency) {\n                    gradient.addColorStop(0, StageUtils.getRgbaString(vc._colorUl));\n                    gradient.addColorStop(1, StageUtils.getRgbaString(vc._colorBr));\n                } else {\n                    gradient.addColorStop(0, StageUtils.getRgbString(vc._colorUl));\n                    gradient.addColorStop(1, StageUtils.getRgbString(vc._colorBr));\n                }\n            }\n        }\n\n        if (gradient) {\n            ctx.fillStyle = gradient;\n        } else {\n            ctx.fillStyle = transparency ? StageUtils.getRgbaString(color) : StageUtils.getRgbString(color);\n        }\n    }\n\n    _beforeDrawEl(info) {\n    }\n\n    _afterDrawEl(info) {\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class C2dTextureTintManager {\n\n    constructor(stage) {\n        this.stage = stage;\n        this._usedMemory = 0;\n        this._cachedNativeTextures = new Set();\n    }\n\n    destroy() {\n        this.gc(true);\n\n        this.stage = null;\n        delete this.stage;\n    }\n\n    _addMemoryUsage(delta) {\n        this._usedMemory += delta;\n\n        this.stage.addMemoryUsage(delta);\n    }\n\n    delete(nativeTexture) {\n        // Should be called when native texture is cleaned up.\n        if (this._hasCache(nativeTexture)) {\n            const cache = this._getCache(nativeTexture);\n            const prevMemUsage = cache.memoryUsage;\n            cache.clear();\n            this._cachedNativeTextures.delete(nativeTexture);\n            this._addMemoryUsage(cache.memoryUsage - prevMemUsage);\n        }\n    }\n\n    getTintTexture(nativeTexture, color) {\n        const frame = this.stage.frameCounter;\n\n        this._cachedNativeTextures.add(nativeTexture);\n\n        const cache = this._getCache(nativeTexture);\n\n        const item = cache.get(color);\n        item.lf = frame;\n\n        if (item.tx) {\n            if (nativeTexture.update > item.u) {\n                // Native texture was updated in the mean time: renew.\n                this._tintTexture(item.tx, nativeTexture, color)\n            }\n\n            return item.tx;\n        } else {\n            const before = cache.memoryUsage;\n\n            // Find blanco tint texture.\n            let target = cache.reuseTexture(frame);\n            if (target) {\n                target.ctx.clearRect(0, 0, target.width, target.height);\n            } else {\n                // Allocate new.\n                target = document.createElement('canvas');\n                target.width = nativeTexture.w;\n                target.height = nativeTexture.h;\n                target.ctx = target.getContext('2d');\n            }\n\n            this._tintTexture(target, nativeTexture, color);\n            cache.set(color, target, frame);\n\n            const after = cache.memoryUsage;\n\n            if (after !== before) {\n                this._addMemoryUsage(after - before);\n            }\n\n            return target;\n        }\n    }\n\n    _tintTexture(target, source, color) {\n        let col = color.toString(16);\n        while (col.length < 6) {\n            col = \"0\" + col;\n        }\n        target.ctx.fillStyle = '#' + col;\n        target.ctx.globalCompositeOperation = 'copy';\n        target.ctx.fillRect(0, 0, source.w, source.h);\n        target.ctx.globalCompositeOperation = 'multiply';\n        target.ctx.drawImage(source, 0, 0, source.w, source.h, 0, 0, target.width, target.height);\n\n        // Alpha-mix the texture.\n        target.ctx.globalCompositeOperation = 'destination-in';\n        target.ctx.drawImage(source, 0, 0, source.w, source.h, 0, 0, target.width, target.height);\n    }\n\n    _hasCache(nativeTexture) {\n        return !!nativeTexture._tintCache;\n    }\n\n    _getCache(nativeTexture) {\n        if (!nativeTexture._tintCache) {\n            nativeTexture._tintCache = new C2dTintCache(nativeTexture);\n        }\n        return nativeTexture._tintCache;\n    }\n\n    gc(aggressive = false) {\n        const frame = this.stage.frameCounter;\n        let delta = 0;\n        this._cachedNativeTextures.forEach(texture => {\n            const cache = this._getCache(texture);\n            if (aggressive) {\n                delta += cache.memoryUsage;\n                cache.clear();\n            } else {\n                const before = cache.memoryUsage;\n                cache.cleanup(frame);\n                cache.releaseBlancoTextures();\n                delta += (cache.memoryUsage - before);\n            }\n        });\n\n        if (aggressive) {\n            this._cachedNativeTextures.clear();\n        }\n\n        if (delta) {\n            this._addMemoryUsage(delta);\n        }\n    }\n\n}\n\nclass C2dTintCache {\n\n    constructor(nativeTexture) {\n        this._tx = nativeTexture;\n        this._colors = new Map();\n        this._blancoTextures = null;\n        this._lastCleanupFrame = 0;\n        this._memTextures = 0;\n    }\n\n    get memoryUsage() {\n        return this._memTextures * this._tx.w * this._tx.h;\n    }\n\n    releaseBlancoTextures() {\n        this._memTextures -= this._blancoTextures.length;\n        this._blancoTextures = [];\n    }\n\n    clear() {\n        // Dereference the textures.\n        this._blancoTextures = null;\n        this._colors.clear();\n        this._memTextures = 0;\n    }\n\n    get(color) {\n        let item = this._colors.get(color);\n        if (!item) {\n            item = {lf: -1, tx: undefined, u: -1};\n            this._colors.set(color, item);\n        }\n        return item;\n    }\n\n    set(color, texture, frame) {\n        const item = this.get(color);\n        item.lf = frame;\n        item.tx = texture;\n        item.u = frame;\n        this._memTextures++;\n    }\n\n    cleanup(frame) {\n        // We only need to clean up once per frame.\n        if (this._lastCleanupFrame !== frame) {\n\n            // We limit blanco textures reuse to one frame only to prevent memory usage growth.\n            this._blancoTextures = [];\n\n            this._colors.forEach((item, color) => {\n                // Clean up entries that were not used last frame.\n                if (item.lf < frame - 1) {\n                    if (item.tx) {\n                        // Keep as reusable blanco texture.\n                        this._blancoTextures.push(item.tx);\n                    }\n                    this._colors.delete(color);\n                }\n            });\n\n            this._lastCleanupFrame = frame;\n        }\n    }\n\n    reuseTexture(frame) {\n        // Try to reuse textures, because creating them every frame is expensive.\n        this.cleanup(frame);\n        if (this._blancoTextures && this._blancoTextures.length) {\n            this._memTextures--;\n            return this._blancoTextures.pop();\n        }\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport C2dCoreQuadList from \"./C2dCoreQuadList.mjs\";\nimport C2dCoreQuadOperation from \"./C2dCoreQuadOperation.mjs\";\nimport C2dCoreRenderExecutor from \"./C2dCoreRenderExecutor.mjs\";\nimport CoreRenderState from \"../../tree/core/CoreRenderState.mjs\";\nimport DefaultShader from \"./shaders/DefaultShader.mjs\";\nimport C2dShader from \"./C2dShader.mjs\";\nimport Renderer from \"../Renderer.mjs\";\nimport TextureTintManager from \"./C2dTextureTintManager.mjs\";\n\nexport default class C2dRenderer extends Renderer {\n\n    constructor(stage) {\n        super(stage);\n\n        this.tintManager = new TextureTintManager(stage);\n\n        this.setupC2d(this.stage.c2d.canvas);\n    }\n\n    destroy() {\n        this.tintManager.destroy();\n\n        this.tintManager = null;\n        delete this.tintManager;\n    }\n\n    _createDefaultShader(ctx) {\n        return new DefaultShader(ctx);\n    }\n\n    _getShaderBaseType() {\n        return C2dShader\n    }\n\n    _getShaderAlternative(shaderType) {\n        return shaderType.getC2d && shaderType.getC2d();\n    }\n\n    createCoreQuadList(ctx) {\n        return new C2dCoreQuadList(ctx);\n    }\n\n    createCoreQuadOperation(ctx, shader, shaderOwner, renderTextureInfo, scissor, index) {\n        return new C2dCoreQuadOperation(ctx, shader, shaderOwner, renderTextureInfo, scissor, index);\n    }\n\n    createCoreRenderExecutor(ctx) {\n        return new C2dCoreRenderExecutor(ctx);\n    }\n    \n    createCoreRenderState(ctx) {\n        return new CoreRenderState(ctx);\n    }\n\n    createRenderTexture(w, h, pw, ph) {\n        const canvas = document.createElement('canvas');\n        canvas.width = pw;\n        canvas.height = ph;\n        this.setupC2d(canvas);\n        return canvas;\n    }\n    \n    freeRenderTexture(nativeTexture) {\n        this.tintManager.delete(nativeTexture);\n    }\n\n    gc(aggressive) {\n        this.tintManager.gc(aggressive);\n    }\n\n    uploadTextureSource(textureSource, options) {\n        // For canvas, we do not need to upload.\n        if (options.source.buffer) {\n            // Convert RGBA buffer to canvas.\n            const canvas = document.createElement('canvas');\n            canvas.width = options.w;\n            canvas.height = options.h;\n\n            const imageData = new ImageData(new Uint8ClampedArray(options.source.buffer), options.w, options.h);\n            canvas.getContext('2d').putImageData(imageData, 0, 0);\n            return canvas;\n        }\n\n        return options.source;\n    }\n\n    freeTextureSource(textureSource) {\n        this.tintManager.delete(textureSource.nativeTexture);\n    }\n\n    addQuad(renderState, quads, index) {\n        // Render context changes while traversing so we save it by ref.\n        const elementCore = quads.quadElements[index];\n        quads.setRenderContext(index, elementCore._renderContext);\n        quads.setWhite(index, elementCore.isWhite());\n        quads.setSimpleTc(index, elementCore.hasSimpleTexCoords());\n    }\n\n    isRenderTextureReusable(renderState, renderTextureInfo) {\n        // @todo: check render coords/matrix, maybe move this to core?\n        return false;\n    }\n\n    finishRenderState(renderState) {\n    }\n\n    setupC2d(canvas) {\n        const ctx = canvas.getContext('2d');\n        canvas.ctx = ctx;\n\n        ctx._scissor = null;\n\n        // Save base state so we can restore the defaults later.\n        canvas.ctx.save();\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport WebGLShader from \"../../webgl/WebGLShader.mjs\";\n\nexport default class SparkShader extends WebGLShader {\n\n    enableAttribs() {\n        // Enables the attribs in the shader program.\n        let gl = this.gl;\n        gl.vertexAttribPointer(this._attrib(\"aVertexPosition\"), 2, gl.FLOAT, false, 20, 0);\n        gl.enableVertexAttribArray(this._attrib(\"aVertexPosition\"));\n\n        if (this._attrib(\"aTextureCoord\") !== -1) {\n            gl.vertexAttribPointer(this._attrib(\"aTextureCoord\"), 2, gl.FLOAT, false, 20, 2 * 4);\n            gl.enableVertexAttribArray(this._attrib(\"aTextureCoord\"));\n        }\n\n        if (this._attrib(\"aColor\") !== -1) {\n            // Some shaders may ignore the color.\n            gl.vertexAttribPointer(this._attrib(\"aColor\"), 4, gl.UNSIGNED_BYTE, true, 20, 4 * 4);\n            gl.enableVertexAttribArray(this._attrib(\"aColor\"));\n        }\n    }\n\n    disableAttribs() {\n        // Disables the attribs in the shader program.\n        let gl = this.gl;\n        gl.disableVertexAttribArray(this._attrib(\"aVertexPosition\"));\n\n        if (this._attrib(\"aTextureCoord\") !== -1) {\n            gl.disableVertexAttribArray(this._attrib(\"aTextureCoord\"));\n        }\n\n        if (this._attrib(\"aColor\") !== -1) {\n            gl.disableVertexAttribArray(this._attrib(\"aColor\"));\n        }\n    }\n\n    setupUniforms(operation) {\n        this._setUniform(\"projection\", this._getProjection(operation), this.gl.uniform2fv, false);\n    }\n\n    draw(operation) {\n        let gl = this.gl;\n\n        let length = operation.length;\n\n        if (length) {\n            let glTexture = operation.getTexture(0);\n            let pos = 0;\n            for (let i = 0; i < length; i++) {\n                let tx = operation.getTexture(i);\n                if (glTexture !== tx) {\n                    if (glTexture.options && glTexture.options.imageRef) {\n                        let elementPostion = (i > 0) ? (i - 1) : i;\n                        const precision = this.ctx.stage.getOption('precision');\n                        let vc = operation.getElementCore(elementPostion);\n                        this.ctx.stage.platform.paint(gl, glTexture.options.imageRef, vc._worldContext.px*precision, vc._worldContext.py*precision, vc._colorUl, vc);\n                    } else {\n                        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n                        gl.drawElements(gl.TRIANGLES, 6 * (i - pos), gl.UNSIGNED_SHORT, (pos + operation.index) * 6 * 2);\n                    }\n                    glTexture = tx;\n                    pos = i;\n                }\n            }\n            if (pos < length) {\n                if (glTexture.options && glTexture.options.imageRef) {\n                    const precision = this.ctx.stage.getOption('precision');\n                    let vc = operation.getElementCore(pos);\n                    this.ctx.stage.platform.paint(gl, glTexture.options.imageRef, vc._worldContext.px*precision, vc._worldContext.py*precision, vc._colorUl, vc);\n                } else {\n                    gl.bindTexture(gl.TEXTURE_2D, glTexture);\n                    gl.drawElements(gl.TRIANGLES, 6 * (length - pos), gl.UNSIGNED_SHORT, (pos + operation.index) * 6 * 2);\n                }\n            }\n        }\n    }\n\n}\n\nSparkShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nSparkShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    void main(void){\n        gl_FragColor = texture2D(uSampler, vTextureCoord) * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport WebGLRenderer from \"../webgl/WebGLRenderer.mjs\";\nimport SparkShader from \"./shaders/SparkShader.mjs\";\n\nexport default class SparkRenderer extends WebGLRenderer {\n\n    constructor(stage) {\n        super(stage);\n    }\n\n    _createDefaultShader(ctx) {\n        return new SparkShader(ctx);\n    }\n\n    createCoreRenderExecutor(ctx) {\n        global.beginDrawing();\n        let ret = super.createCoreRenderExecutor(ctx);\n        global.endDrawing();\n        return ret;\n    }\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class ImageWorker {\n\n    constructor(options = {}) {\n        this._items = new Map();\n        this._id = 0;\n\n        this._initWorker();\n    }\n\n    destroy() {\n        if (this._worker) {\n            this._worker.terminate();\n        }\n\n        this._items = null;\n        this._worker = null;\n\n        delete this._items;\n        delete this._worker;        \n    }\n\n    _initWorker() {\n        const code = `(${createWorker.toString()})()`;\n        const blob = new Blob([code.replace('\"use strict\";', '')]); // firefox adds \"use strict\"; to any function which might block worker execution so knock it off\n        const blobURL = (window.URL ? URL : webkitURL).createObjectURL(blob, {\n            type: 'application/javascript; charset=utf-8'\n        });\n        this._worker = new Worker(blobURL);\n\n        this._worker.postMessage({type: 'config', config: {path: window.location.href, protocol: window.location.protocol}});\n\n        this._worker.onmessage = (e) => {\n            if (e.data && e.data.id) {\n                const id = e.data.id;\n                const item = this._items.get(id);\n                if (item) {\n                    if (e.data.type == 'data') {\n                        this.finish(item, e.data.info);\n                    } else {\n                        this.error(item, e.data.info);\n                    }\n                }\n            }\n        }\n    }\n\n    create(src) {\n        const id = ++this._id;\n        const item = new ImageWorkerImage(this, id, src);\n        this._items.set(id, item);\n        this._worker.postMessage({type: \"add\", id: id, src: src});\n        return item;\n    }\n\n    cancel(image) {\n        this._worker.postMessage({type: \"cancel\", id: image.id});\n        this._items.delete(image.id);\n    }\n\n    error(image, info) {\n        image.error(info);\n        this._items.delete(image.id);\n    }\n\n    finish(image, info) {\n        image.load(info);\n        this._items.delete(image.id);\n    }\n\n}\n\nclass ImageWorkerImage {\n\n    constructor(manager, id, src) {\n        this._manager = manager;\n        this._id = id;\n        this._src = src;\n        this._onError = null;\n        this._onLoad = null;\n    }\n\n    get id() {\n        return this._id;\n    }\n\n    get src() {\n        return this._src;\n    }\n\n    set onError(f) {\n        this._onError = f;\n    }\n\n    set onLoad(f) {\n        this._onLoad = f;\n    }\n\n    cancel() {\n        this._manager.cancel(this);\n    }\n\n    load(info) {\n        if (this._onLoad) {\n            this._onLoad(info);\n        }\n    }\n\n    error(info) {\n        if (this._onError) {\n            this._onError(info);\n        }\n    }\n\n}\n\n/**\n * Notice that, within the createWorker function, we must only use ES5 code to keep it ES5-valid after babelifying, as\n *  the converted code of this section is converted to a blob and used as the js of the web worker thread.\n */\nconst createWorker = function() {\n\n    function ImageWorkerServer() {\n\n        this.items = new Map();\n\n        var t = this;\n        onmessage = function(e) {\n            t._receiveMessage(e);\n        }\n\n    }\n\n    ImageWorkerServer.isPathAbsolute = function(path) {\n        return /^(?:\\/|[a-z]+:\\/\\/)/.test(path) || path.substr(0, 5) == 'data:';\n    };\n\n    ImageWorkerServer.prototype._receiveMessage = function(e) {\n        if (e.data.type === 'config') {\n            this.config = e.data.config;\n\n            var base = this.config.path;\n            // the constructing of the basepath fails\n            // if location.hash contains a slash\n            var hasHashPath = /#.*?\\//;\n            if(hasHashPath.test(base)){\n                base = base.replace(/#.*$/,'');\n            }\n\n            var parts = base.split(\"/\");\n            parts.pop();\n            this._relativeBase = parts.join(\"/\") + \"/\";\n\n        } else if (e.data.type === 'add') {\n            this.add(e.data.id, e.data.src);\n        } else if (e.data.type === 'cancel') {\n            this.cancel(e.data.id);\n        }\n    };\n\n    ImageWorkerServer.prototype.add = function(id, src) {\n        // Convert relative URLs.\n        if (!ImageWorkerServer.isPathAbsolute(src)) {\n            src = this._relativeBase + src;\n        }\n\n        if (src.substr(0,2) === \"//\") {\n            // This doesn't work for image workers.\n            src = this.config.protocol + src;\n        }\n\n        var item = new ImageWorkerServerItem(id, src);\n        var t = this;\n        item.onFinish = function(result) {\n            t.finish(item, result);\n        };\n        item.onError = function(info) {\n            t.error(item, info);\n        };\n        this.items.set(id, item);\n        item.start();\n    };\n\n    ImageWorkerServer.prototype.cancel = function(id) {\n        var item = this.items.get(id);\n        if (item) {\n            item.cancel();\n            this.items.delete(id);\n        }\n    }\n\n    ImageWorkerServer.prototype.finish = function(item, {imageBitmap, hasAlphaChannel}) {\n        postMessage({\n            type: \"data\",\n            id: item.id,\n            info: {\n                imageBitmap,\n                hasAlphaChannel\n            }\n        }, [imageBitmap]);\n        this.items.delete(item.id);\n    };\n\n    ImageWorkerServer.prototype.error = function(item, {type, message}) {\n        postMessage({\n            type: \"error\",\n            id: item.id,\n            info: {\n                type,\n                message\n            }\n        });\n        this.items.delete(item.id);\n    };\n\n    ImageWorkerServer.isWPEBrowser = function() {\n        return (navigator.userAgent.indexOf(\"WPE\") !== -1);\n    };\n\n    function ImageWorkerServerItem(id, src) {\n\n        this._onError = undefined;\n        this._onFinish = undefined;\n        this._id = id;\n        this._src = src;\n        this._xhr = undefined;\n        this._mimeType = undefined;\n        this._canceled = false;\n\n    }\n\n    Object.defineProperty(ImageWorkerServerItem.prototype, 'id', {\n        get: function() {\n            return this._id;\n        }\n    });\n\n    Object.defineProperty(ImageWorkerServerItem.prototype, 'onFinish', {\n        get: function() {\n            return this._onFinish;\n        },\n        set: function(f) {\n            this._onFinish = f;\n        }\n    });\n\n    Object.defineProperty(ImageWorkerServerItem.prototype, 'onError', {\n        get: function() {\n            return this._onError;\n        },\n        set: function(f) {\n            this._onError = f;\n        }\n    });\n\n    ImageWorkerServerItem.prototype.start = function() {\n        this._xhr = new XMLHttpRequest();\n        this._xhr.open(\"GET\", this._src, true);\n        this._xhr.responseType = \"blob\";\n\n        var t = this;\n        this._xhr.onerror = function(oEvent) {\n            t.error({type: \"connection\", message: \"Connection error\"});\n        };\n\n        this._xhr.onload = function(oEvent) {\n            var blob = t._xhr.response;\n            t._mimeType = blob.type;\n\n            t._createImageBitmap(blob);\n        };\n\n        this._xhr.send();\n    };\n\n    ImageWorkerServerItem.prototype._createImageBitmap = function(blob) {\n        var t = this;\n        createImageBitmap(blob, {premultiplyAlpha: 'premultiply', colorSpaceConversion: 'none', imageOrientation: 'none'}).then(function(imageBitmap) {\n            t.finish({\n                imageBitmap,\n                hasAlphaChannel: t._hasAlphaChannel()\n            });\n        }).catch(function(e) {\n            t.error({type: \"parse\", message: \"Error parsing image data\"});\n        });\n    };\n\n    ImageWorkerServerItem.prototype._hasAlphaChannel = function() {\n        if (ImageWorkerServer.isWPEBrowser()) {\n            // When using unaccelerated rendering image (https://github.com/WebPlatformForEmbedded/WPEWebKit/blob/wpe-20170728/Source/WebCore/html/ImageBitmap.cpp#L52),\n            // everything including JPG images are in RGBA format. Upload is way faster when using an alpha channel.\n            // @todo: after hardware acceleration is fixed and re-enabled, JPG should be uploaded in RGB to get the best possible performance and memory usage.\n            return true;\n        } else {\n            return (this._mimeType.indexOf(\"image/png\") !== -1);\n        }\n    };\n\n    ImageWorkerServerItem.prototype.cancel = function() {\n        if (this._canceled) return;\n        if (this._xhr) {\n            this._xhr.abort();\n        }\n        this._canceled = true;\n    };\n\n    ImageWorkerServerItem.prototype.error = function(type, message) {\n        if (!this._canceled && this._onError) {\n            this._onError({type, message});\n        }\n    };\n\n    ImageWorkerServerItem.prototype.finish = function(info) {\n        if (!this._canceled && this._onFinish) {\n            this._onFinish(info);\n        }\n    };\n\n    var worker = new ImageWorkerServer();\n};\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../../tree/Utils.mjs\";\nimport ImageWorker from \"./ImageWorker.mjs\";\n\n/**\n * Platform-specific functionality.\n */\nexport default class WebPlatform {\n\n    init(stage) {\n        this.stage = stage;\n        this._looping = false;\n        this._awaitingLoop = false;\n\n        // Alternative handler to avoid RAF when idle\n        this._loopHandler = null;\n        this._idleLoopCounter = 0;\n        this._idleLoopDelay = 60;\n        this._onIdle = false;\n\n        if (this.stage.getOption(\"useImageWorker\")) {\n            if (!window.createImageBitmap || !window.Worker) {\n                console.warn(\"[Lightning] Can't use image worker because browser does not have createImageBitmap and Web Worker support\");\n            } else {\n                this._imageWorker = new ImageWorker();\n            }\n        }\n\n        this._registerVisibilityChangeHandler();\n    }\n\n    destroy() {\n        if (this._imageWorker) {\n            this._imageWorker.destroy();\n        }\n\n        clearInterval(this._loopHandler);\n\n        this._removeKeyHandler();\n        this._removeClickHandler();\n        this._removeHoverHandler();\n        this._removeScrollWheelHandler();\n        this._removeVisibilityChangeHandler();\n\n        this.stage = null;\n        delete this.stage;\n    }\n\n    startLoop() {\n        this._looping = true;\n        if (!this._awaitingLoop) {\n            this.loop();\n        }\n    }\n\n    stopLoop() {\n        this._looping = false;\n    }\n\n    switchLoop() {\n        if (this._onIdle === false) {\n            this._onIdle = true;\n            this.stage.onIdle();\n        }\n\n        if (this._idleLoopCounter < this._idleLoopDelay) {\n            this._idleLoopCounter++;\n            return;\n        }\n        if (!this.stage.ctx.hasRenderUpdates()) {\n            this.stopLoop();\n            this._loopHandler = setInterval(() => {\n                this.stage.updateFrame();\n                this.stage.idleFrame();\n                if (this.stage.ctx.hasRenderUpdates()) {\n                    clearInterval(this._loopHandler);\n                    this.startLoop();\n                };\n            }, 1000 / 60);\n        } else {\n            this._idleLoopCounter = 0;\n        }\n    }\n\n    loop() {\n        let self = this;\n        let lp = function () {\n            self._awaitingLoop = false;\n            self._onIdle = false;\n            if (self._looping) {\n                self.stage.updateFrame();\n                if (self.stage.getOption(\"pauseRafLoopOnIdle\")) {\n                    self.switchLoop();\n                }\n                self.stage.renderFrame();\n                requestAnimationFrame(lp);\n                self._awaitingLoop = true;\n            }\n        }\n        requestAnimationFrame(lp);\n    }\n\n    uploadCompressedGlTexture(gl, textureSource, source, options) {\n        const view = !source.pvr ? new DataView(source.mipmaps[0]) : source.mipmaps[0];\n        gl.compressedTexImage2D(\n            gl.TEXTURE_2D,\n            0,\n            source.glInternalFormat,\n            source.pixelWidth,\n            source.pixelHeight,\n            0,\n            view,\n        )\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n    }\n\n    uploadGlTexture(gl, textureSource, source, options) {\n        if (source instanceof ImageData || source instanceof HTMLImageElement || source instanceof HTMLVideoElement || (window.ImageBitmap && source instanceof ImageBitmap)) {\n            // Web-specific data types.\n            gl.texImage2D(gl.TEXTURE_2D, 0, options.internalFormat, options.format, options.type, source);\n        } else if (source instanceof HTMLCanvasElement) {\n            if (Utils.isZiggo || this.stage.getOption(\"forceTxCanvasSource\")) {\n                // Ziggo EOS and Selene have issues with getImageData implementation causing artifacts.\n                gl.texImage2D(gl.TEXTURE_2D, 0, options.internalFormat, options.format, options.type, source);\n            } else if (source.width > 0 && source.height > 0) {\n                // Workaround for some browsers (e.g. Tizen) as they do not convert canvas data to texture correctly, sometimes causing artifacts.\n                // Width/Height check added because of https://github.com/rdkcentral/Lightning/issues/412\n                const ctx = source.getContext('2d');\n                gl.texImage2D(gl.TEXTURE_2D, 0, options.internalFormat, options.format, options.type, ctx.getImageData(0, 0, source.width, source.height));\n            }\n        } else {\n            gl.texImage2D(gl.TEXTURE_2D, 0, options.internalFormat, textureSource.w, textureSource.h, 0, options.format, options.type, source);\n        }\n    }\n\n    /**\n     * KTX File format specification\n     * https://www.khronos.org/registry/KTX/specs/1.0/ktxspec_v1.html\n     **/\n    handleKtxLoad(cb, src) {\n        var self = this;\n        return function () {\n            var arraybuffer = this.response;\n            var view = new DataView(arraybuffer);\n\n            // identifier, big endian\n            var targetIdentifier = 3632701469\n            if (targetIdentifier !== (view.getUint32(0) + view.getUint32(4) + view.getUint32(8))) {\n                cb('Parsing failed: identifier ktx mismatch:', src)\n            }\n\n            var littleEndian = (view.getUint32(12) === 16909060) ? true : false;\n            var data = {\n                glType: view.getUint32(16, littleEndian),\n                glTypeSize: view.getUint32(20, littleEndian),\n                glFormat: view.getUint32(24, littleEndian),\n                glInternalFormat: view.getUint32(28, littleEndian),\n                glBaseInternalFormat: view.getUint32(32, littleEndian),\n                pixelWidth: view.getUint32(36, littleEndian),\n                pixelHeight: view.getUint32(40, littleEndian),\n                pixelDepth: view.getUint32(44, littleEndian),\n                numberOfArrayElements: view.getUint32(48, littleEndian),\n                numberOfFaces: view.getUint32(52, littleEndian),\n                numberOfMipmapLevels: view.getUint32(56, littleEndian),\n                bytesOfKeyValueData: view.getUint32(60, littleEndian),\n                kvps: [],\n                mipmaps: [],\n                get width() { return this.pixelWidth },\n                get height() { return this.pixelHeight },\n            };\n\n            const props = (obj) => {\n                const p = [];\n                for (let v in obj) {\n                    p.push(obj[v]);\n                }\n                return p;\n            }\n\n            const formats = Object.values(self.stage.renderer.getCompressedTextureExtensions())\n                .filter((obj) => obj != null)\n                .map((obj) => props(obj))\n                .reduce((prev, current) => prev.concat(current));\n\n            if (!formats.includes(data.glInternalFormat)) {\n                console.warn(\"[Lightning] Unrecognized texture extension format:\", src, data.glInternalFormat, self.stage.renderer.getCompressedTextureExtensions());\n            }\n\n            var offset = 64\n            // Key Value Pairs of data start at byte offset 64\n            // But the only known kvp is the API version, so skipping parsing.\n            offset += data.bytesOfKeyValueData;\n\n            for (var i = 0; i < data.numberOfMipmapLevels; i++) {\n                var imageSize = view.getUint32(offset);\n                offset += 4;\n                data.mipmaps.push(view.buffer.slice(offset, imageSize));\n                offset += imageSize\n            }\n\n            cb(null, {\n                source: data,\n                renderInfo: { src: src, compressed: true },\n            })\n        }\n    }\n\n    handlePvrLoad(cb, src) {\n        return function () {\n            // pvr header length in 32 bits\n            const pvrHeaderLength = 13;\n            // for now only we only support: COMPRESSED_RGB_ETC1_WEBGL\n            const pvrFormatEtc1 = 0x8D64;\n            const pvrWidth = 7;\n            const pvrHeight = 6;\n            const pvrMipmapCount = 11;\n            const pvrMetadata = 12;\n            const arrayBuffer = this.response;\n            const header = new Int32Array(arrayBuffer, 0, pvrHeaderLength);\n            const dataOffset = header[pvrMetadata] + 52;\n            const pvrtcData = new Uint8Array(arrayBuffer, dataOffset);\n\n            var data = {\n                glInternalFormat: pvrFormatEtc1,\n                pixelWidth: header[pvrWidth],\n                pixelHeight: header[pvrHeight],\n                numberOfMipmapLevels: header[pvrMipmapCount],\n                mipmaps: [],\n                pvr: true,\n                get width() { return this.pixelWidth },\n                get height() { return this.pixelHeight },\n            };\n\n            let offset = 0\n            let width = data.pixelWidth;\n            let height = data.pixelHeight;\n\n            for (var i = 0; i < data.numberOfMipmapLevels; i++) {\n                const level = ((width + 3) >> 2) * ((height + 3) >> 2) * 8;\n                const view = new Uint8Array(arrayBuffer, pvrtcData.byteOffset + offset, level);\n                data.mipmaps.push(view);\n                offset += level;\n                width = width >> 1;\n                height = height >> 1;\n            }\n\n            cb(null, {\n                source: data,\n                renderInfo: { src: src, compressed: true },\n            })\n        }\n    }\n\n    loadSrcTexture({ src, hasAlpha }, cb) {\n        let cancelCb = undefined;\n        let isPng = (src.toLowerCase().indexOf(\".png\") >= 0) || src.substr(0, 21) == 'data:image/png;base64';\n        let isKtx = src.indexOf('.ktx') >= 0;\n        let isPvr = src.indexOf('.pvr') >= 0;\n        if (isKtx || isPvr) {\n            let request = new XMLHttpRequest();\n            request.addEventListener(\n                \"load\", isKtx ? this.handleKtxLoad(cb, src) : this.handlePvrLoad(cb, src)\n            );\n            request.open(\"GET\", src);\n            request.responseType = \"arraybuffer\";\n            request.send();\n            cancelCb = function () {\n                request.abort();\n            }\n        } else if (this._imageWorker) {\n            // WPE-specific image parser.\n            if (typeof src !== 'string') {\n                return cb(\"Invalid image URL\");\n            }\n            \n            // URL can start with http://, https://, and //\n            const separatorPos = src.indexOf('//');\n            if (separatorPos !== 0 && separatorPos !== 5 && separatorPos !== 6) {\n                return cb(\"Invalid image URL\");\n            }\n\n            const image = this._imageWorker.create(src);\n            image.onError = function (err) {\n                return cb(\"Image load error\");\n            };\n            image.onLoad = function ({ imageBitmap, hasAlphaChannel }) {\n                cb(null, {\n                    source: imageBitmap,\n                    renderInfo: { src: src, compressed: false },\n                    hasAlpha: hasAlphaChannel,\n                    premultiplyAlpha: true\n                });\n            };\n            cancelCb = function () {\n                image.cancel();\n            }\n        } else {\n            let image = new Image();\n\n            // On the PS4 platform setting the `crossOrigin` attribute on\n            // images can cause CORS failures.\n            if (!(src.substr(0, 5) == \"data:\") && !Utils.isPS4) {\n                // Base64.\n                image.crossOrigin = \"Anonymous\";\n            }\n            image.onerror = function (err) {\n                // Ignore error message when cancelled.\n                if (image.src) {\n                    return cb(\"Image load error\");\n                }\n            };\n            image.onload = function () {\n                cb(null, {\n                    source: image,\n                    renderInfo: { src: src, compressed: false },\n                    hasAlpha: isPng || hasAlpha\n                });\n            };\n            image.src = src;\n\n            cancelCb = function () {\n                image.onerror = null;\n                image.onload = null;\n                image.removeAttribute('src');\n            }\n        }\n\n        return cancelCb;\n    }\n\n    createWebGLContext(w, h) {\n        let canvas = this.stage.getOption('canvas') || document.createElement('canvas');\n\n        if (w && h) {\n            canvas.width = w;\n            canvas.height = h;\n        }\n\n        let opts = {\n            alpha: true,\n            antialias: false,\n            premultipliedAlpha: true,\n            stencil: true,\n            preserveDrawingBuffer: false\n        };\n\n        let gl = canvas.getContext('webgl', opts) || canvas.getContext('experimental-webgl', opts) || canvas.getContext('webgl2', opts);\n\n        if (!gl) {\n            throw new Error('This browser does not support webGL.');\n        }\n\n        return gl;\n    }\n\n    createCanvasContext(w, h) {\n        let canvas = this.stage.getOption('canvas') || document.createElement('canvas');\n\n        if (w && h) {\n            canvas.width = w;\n            canvas.height = h;\n        }\n\n        let c2d = canvas.getContext('2d');\n        if (!c2d) {\n            throw new Error('This browser does not support 2d canvas.');\n        }\n\n        return c2d;\n    }\n\n    getHrTime() {\n        return window.performance ? window.performance.now() : (new Date()).getTime();\n    }\n\n    getDrawingCanvas() {\n        // We can't reuse this canvas because textures may load async.\n        return document.createElement('canvas');\n    }\n\n    getTextureOptionsForDrawingCanvas(canvas) {\n        let options = {};\n        options.source = canvas;\n        return options;\n    }\n\n    nextFrame(changes) {\n        /* WebGL blits automatically */\n    }\n\n    registerKeydownHandler(keyhandler) {\n        this._keydownListener = (e) => {\n            keyhandler(e);\n        };\n        window.addEventListener('keydown', this._keydownListener);\n    }\n\n    registerKeyupHandler(keyhandler) {\n        this._keyupListener = (e) => {\n            keyhandler(e);\n        };\n        window.addEventListener('keyup', this._keyupListener);\n    }\n\n    _removeKeyHandler() {\n        if (this._keydownListener) {\n            window.removeEventListener('keydown', this._keydownListener);\n        }\n\n        if (this._keyupListener) {\n            window.removeEventListener('keyup', this._keyupListener);\n        }\n    }\n\n    registerClickHandler(clickHandler) {\n        this._clickListener = e => {\n            clickHandler(e);\n        };\n        window.addEventListener('mousedown', this._clickListener);\n    }\n\n    _removeClickHandler() {\n        if (this._clickListener) {\n            window.removeEventListener('mousedown', this._clickListener);\n        }\n    }\n\n    registerHoverHandler(hoverHandler) {\n        this._hoverListener = e => {\n            hoverHandler(e);\n        };\n        window.addEventListener('mousemove', this._hoverListener);\n    }\n\n    _removeHoverHandler() {\n        if (this._hoverListener) {\n            window.removeEventListener('mousemove', this._hoverListener);\n        }\n    }\n\n    registerScrollWheelHandler(registerScrollWheelHandler) {\n        this._scrollWheelListener = e => {\n            registerScrollWheelHandler(e);\n        }\n        window.addEventListener('wheel', this._scrollWheelListener);\n    }\n\n    _removeScrollWheelHandler() {\n        if (this._scrollWheelListener) {\n            window.removeEventListener('wheel', this._scrollWheelListener);\n        }\n    }\n\n    /**\n     * Fix for issue reported at: https://github.com/WebPlatformForEmbedded/WPEWebKit/issues/882\n     */\n    _registerVisibilityChangeHandler() {\n        this._visibilityChangeHandler = () => {\n            if (document.visibilityState === 'visible') {\n                this.stage.root.core.setHasRenderUpdates(2);\n                this.stage.renderFrame();\n            }\n        }\n        document.addEventListener('visibilitychange', this._visibilityChangeHandler);\n    }\n\n    _removeVisibilityChangeHandler() {\n        if (this._visibilityChangeHandler) {\n            document.removeEventListener('visibilitychange', this._visibilityChangeHandler);\n        }\n    }\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport WebPlatform from \"./browser/WebPlatform.mjs\";\n\nexport default class PlatformLoader {\n    static load(options) {\n        if (options.platform) {\n            return options.platform;\n        } else {\n            return WebPlatform;\n        }\n    }\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nclass Utils {\n\n    static isFunction(value) {\n        return typeof value === 'function';\n    }\n\n    static isNumber(value) {\n        return typeof value === 'number';\n    }\n\n    static isInteger(value) {\n        return (typeof value === 'number' && (value % 1) === 0);\n    }\n\n    static isBoolean(value) {\n        return value === true || value === false;\n    }\n\n    static isString(value) {\n        return typeof value == 'string';\n    }\n\n    static isObject(value) {\n        let type = typeof value;\n        return !!value && (type == 'object' || type == 'function');\n    }\n\n    static isPlainObject(value) {\n        let type = typeof value;\n        return !!value && (type == 'object');\n    }\n\n    static isObjectLiteral(value){\n        return typeof value === 'object' && value && value.constructor === Object\n    }\n\n    static getArrayIndex(index, arr) {\n        return Utils.getModuloIndex(index, arr.length);\n    }\n\n    static equalValues(v1, v2) {\n        if ((typeof v1) !== (typeof v2)) return false\n        if (Utils.isObjectLiteral(v1)) {\n            return Utils.isObjectLiteral(v2) && Utils.equalObjectLiterals(v1, v2)\n        } else if (Array.isArray(v1)) {\n            return Array.isArray(v2) && Utils.equalArrays(v1, v2)\n        } else {\n            return v1 === v2\n        }\n    }\n\n    static equalObjectLiterals(obj1, obj2) {\n        let keys1 = Object.keys(obj1);\n        let keys2 = Object.keys(obj2);\n        if (keys1.length !== keys2.length) {\n            return false\n        }\n\n        for (let i = 0, n = keys1.length; i < n; i++) {\n            const k1 = keys1[i];\n            const k2 = keys2[i];\n            if (k1 !== k2) {\n                return false\n            }\n\n            const v1 = obj1[k1];\n            const v2 = obj2[k2];\n\n            if (!Utils.equalValues(v1, v2)) {\n                return false\n            }\n        }\n\n        return true;\n    }\n\n    static equalArrays(v1, v2) {\n        if (v1.length !== v2.length) {\n            return false\n        }\n        for (let i = 0, n = v1.length; i < n; i++) {\n            if (!this.equalValues(v1[i], v2[i])) {\n                return false\n            }\n        }\n\n        return true\n    }\n\n}\n\n/**\n * Maintains the state of a WebGLRenderingContext.\n */\nclass WebGLState {\n\n    constructor(id, gl) {\n        this._id = id;\n        this._gl = gl;\n        this._program = undefined;\n        this._buffers = new Map();\n        this._framebuffers = new Map();\n        this._renderbuffers = new Map();\n\n        // Contains vertex attribute definition arrays (enabled, size, type, normalized, stride, offset).\n        this._vertexAttribs = new Array(16);\n        this._nonDefaultFlags = new Set();\n        this._settings = new Map();\n        this._textures = new Array(8);\n        this._maxTexture = 0;\n        this._activeTexture = gl.TEXTURE0;\n        this._pixelStorei = new Array(5);\n    }\n\n    _getDefaultFlag(cap) {\n        return (cap === this._gl.DITHER);\n    }\n\n    setFlag(cap, v) {\n        const def = this._getDefaultFlag(cap);\n        if (v === def) {\n            return this._nonDefaultFlags.delete(cap);\n        } else {\n            if (!this._nonDefaultFlags.has(cap)) {\n                this._nonDefaultFlags.add(cap);\n                return true;\n            } else {\n                return false;\n            }\n        }\n    }\n\n    setBuffer(target, buffer) {\n        const change = this._buffers.get(target) !== buffer;\n        this._buffers.set(target, buffer);\n\n        if (change && (target === this._gl.ARRAY_BUFFER)) {\n            // When the array buffer is changed all attributes are cleared.\n            this._vertexAttribs = [];\n        }\n\n        return change;\n    }\n\n    setFramebuffer(target, buffer) {\n        const change = this._framebuffers.get(target) !== buffer;\n        this._framebuffers.set(target, buffer);\n        return change;\n    }\n\n    setRenderbuffer(target, buffer) {\n        const change = this._renderbuffers.get(target) !== buffer;\n        this._renderbuffers.set(target, buffer);\n        return change;\n    }\n\n    setProgram(program) {\n        const change = this._program !== program;\n        this._program = program;\n        return change\n    }\n\n    setSetting(func, v) {\n        const s = this._settings.get(func);\n        const change = !s || !Utils.equalValues(s, v);\n        this._settings.set(func, v);\n        return change\n    }\n\n    disableVertexAttribArray(index) {\n        const va = this._vertexAttribs[index];\n        if (va && va[5]) {\n            va[5] = false;\n            return true;\n        }\n        return false;\n    }\n\n    enableVertexAttribArray(index) {\n        const va = this._vertexAttribs[index];\n        if (va) {\n            if (!va[0]) {\n                va[0] = true;\n                return true;\n            }\n        } else {\n            this._vertexAttribs[index] = [0, 0, 0, 0, 0, true];\n            return true;\n        }\n        return false;\n    }\n\n    vertexAttribPointer(index, props) {\n        let va = this._vertexAttribs[index];\n        let equal = false;\n        if (va) {\n            equal = va[0] === props[0] &&\n                va[1] === props[1] &&\n                va[2] === props[2] &&\n                va[3] === props[3] &&\n                va[4] === props[4];\n        }\n\n        if (equal) {\n            return false;\n        } else {\n            props[5] = va ? va[5] : false;\n            return true;\n        }\n    }\n\n    setActiveTexture(texture) {\n        const changed = this._activeTexture !== texture;\n        this._activeTexture = texture;\n        return changed;\n    }\n\n    bindTexture(target, texture) {\n        const activeIndex = WebGLState._getTextureIndex(this._activeTexture);\n        this._maxTexture = Math.max(this._maxTexture, activeIndex + 1);\n        const current = this._textures[activeIndex];\n        const targetIndex = WebGLState._getTextureTargetIndex(target);\n        if (current) {\n            if (current[targetIndex] === texture) {\n                return false;\n            }\n            current[targetIndex] = texture;\n            return true;\n        } else {\n            if (texture) {\n                this._textures[activeIndex] = [];\n                this._textures[activeIndex][targetIndex] = texture;\n                return true\n            } else {\n                return false\n            }\n        }\n    }\n\n    setPixelStorei(pname, param) {\n        const i = WebGLState._getPixelStoreiIndex(pname);\n        const change = !Utils.equalValues(this._pixelStorei[i], param);\n        this._pixelStorei[i] = param;\n        return change;\n    }\n\n    migrate(s) {\n        const t = this;\n\n        // Warning: migrate should call the original prototype methods directly.\n\n        this._migrateFlags(t, s);\n\n        // useProgram\n        if (s._program !== t._program) {\n            this._gl._useProgram(s._program);\n        }\n\n        this._migrateFramebuffers(t, s);\n        this._migrateRenderbuffers(t, s);\n\n        const buffersChanged = this._migrateBuffers(t, s);\n        this._migrateAttributes(t, s, buffersChanged);\n\n        this._migrateFlags(t, s);\n\n        this._migrateSettings(t, s);\n\n        this._migratePixelStorei(t, s);\n        \n        this._migrateTextures(t, s);\n        \n    }\n\n    _migratePixelStorei(t, s) {\n        for (let i = 0, n = t._pixelStorei.length; i < n; i++) {\n            if (t._pixelStorei[i] !== s._pixelStorei[i]) {\n                const value = s._pixelStorei[i] !== undefined ? s._pixelStorei[i] : WebGLState._getDefaultPixelStoreiByIndex(i);\n                this._gl._pixelStorei(WebGLState._getPixelStoreiByIndex(i), value);\n            }\n        }\n    }\n\n    _migrateTextures(t, s) {\n        const max = Math.max(t._maxTexture, s._maxTexture);\n\n        let activeTexture = t._activeTexture;\n\n        for (let i = 0; i < max; i++) {\n            const sTargets = s._textures[i];\n            const tTargets = t._textures[i];\n            const textureNumb = WebGLState._getTextureByIndex(i);\n\n            const targetMax = Math.max(tTargets ? tTargets.length : 0, sTargets ? sTargets.length : 0);\n            for (let j = 0, n = targetMax; j < n; j++) {\n                const target = WebGLState._getTextureTargetByIndex(j);\n                if (activeTexture !== textureNumb) {\n                    this._gl._activeTexture(textureNumb);\n                    activeTexture = textureNumb;\n                }\n\n                const texture = (sTargets && sTargets[j]) || null;\n                this._gl._bindTexture(target, texture);\n            }\n        }\n\n        if (s._activeTexture !== activeTexture) {\n            this._gl._activeTexture(s._activeTexture);\n        }\n    }\n\n    _migrateBuffers(t, s) {\n        s._buffers.forEach((framebuffer, target) => {\n            if (t._buffers.get(target) !== framebuffer) {\n                this._gl._bindBuffer(target, framebuffer);\n            }\n        });\n\n        t._buffers.forEach((buffer, target) => {\n            const b = s._buffers.get(target);\n            if (b === undefined) {\n                this._gl._bindBuffer(target, null);\n            }\n        });\n        return (s._buffers.get(this._gl.ARRAY_BUFFER) !== t._buffers.get(this._gl.ARRAY_BUFFER))\n    }\n\n    _migrateFramebuffers(t, s) {\n        s._framebuffers.forEach((framebuffer, target) => {\n            if (t._framebuffers.get(target) !== framebuffer) {\n                this._gl._bindFramebuffer(target, framebuffer);\n            }\n        });\n\n        t._framebuffers.forEach((framebuffer, target) => {\n            const fb = s._framebuffers.get(target);\n            if (fb === undefined) {\n                this._gl._bindFramebuffer(target, null);\n            }\n        });\n    }\n\n    _migrateRenderbuffers(t, s) {\n        s._renderbuffers.forEach((renderbuffer, target) => {\n            if (t._renderbuffers.get(target) !== renderbuffer) {\n                this._gl._bindRenderbuffer(target, renderbuffer);\n            }\n        });\n\n        t._renderbuffers.forEach((renderbuffer, target) => {\n            const fb = s._renderbuffers.get(target);\n            if (fb === undefined) {\n                this._gl._bindRenderbuffer(target, null);\n            }\n        });\n    }\n\n    _migrateAttributes(t, s, buffersChanged) {\n\n        if (!buffersChanged) {\n            t._vertexAttribs.forEach((attrib, index) => {\n                if (!s._vertexAttribs[index]) {\n                    // We can't 'delete' a vertex attrib so we'll disable it.\n                    this._gl._disableVertexAttribArray(index);\n                }\n            });\n\n            s._vertexAttribs.forEach((attrib, index) => {\n                this._gl._vertexAttribPointer(index, attrib[0], attrib[1], attrib[2], attrib[4]);\n                if (attrib[5]) {\n                    this._gl._enableVertexAttribArray(index);\n                } else {\n                    this._gl._disableVertexAttribArray(index);\n                }\n            });\n        } else {\n            // When buffers are changed, previous attributes were reset automatically.\n            s._vertexAttribs.forEach((attrib, index) => {\n                if (attrib[0]) {\n                    // Do not set vertex attrib pointer when it was just the default value.\n                    this._gl._vertexAttribPointer(index, attrib[0], attrib[1], attrib[2], attrib[3], attrib[4]);\n                }\n                if (attrib[5]) {\n                    this._gl._enableVertexAttribArray(index);\n                }\n            });\n        }\n    }\n\n    _migrateSettings(t, s) {\n        const defaults = this.constructor.getDefaultSettings();\n        t._settings.forEach((value, func) => {\n            const name = func.name || func.xname;\n            if (!s._settings.has(func)) {\n                let args = defaults.get(name);\n                if (Utils.isFunction(args)) {\n                    args = args(this._gl);\n                }\n                // We are actually setting the setting for optimization purposes.\n                s._settings.set(func, args);\n                func.apply(this._gl, args);\n            }\n        });\n        s._settings.forEach((value, func) => {\n            const tValue = t._settings.get(func);\n            if (!tValue || !Utils.equalValues(tValue, value)) {\n                func.apply(this._gl, value);\n            }\n        });\n    }\n\n    _migrateFlags(t, s) {\n        t._nonDefaultFlags.forEach(setting => {\n            if (!s._nonDefaultFlags.has(setting)) {\n                if (this._getDefaultFlag(setting)) {\n                    this._gl._enable(setting);\n                } else {\n                    this._gl._disable(setting);\n                }\n            }\n        });\n        s._nonDefaultFlags.forEach(setting => {\n            if (!t._nonDefaultFlags.has(setting)) {\n                if (this._getDefaultFlag(setting)) {\n                    this._gl._disable(setting);\n                } else {\n                    this._gl._enable(setting);\n                }\n            }\n        });\n    }\n\n    static getDefaultSettings() {\n        if (!this._defaultSettings) {\n            this._defaultSettings = new Map();\n            const d = this._defaultSettings;\n            const g = WebGLRenderingContext.prototype;\n            d.set(\"viewport\", function(gl) {return [0,0,gl.canvas.width, gl.canvas.height]});\n            d.set(\"scissor\", function(gl) {return [0,0,gl.canvas.width, gl.canvas.height]});\n            d.set(\"blendColor\", [0, 0, 0, 0]);\n            d.set(\"blendEquation\", [g.FUNC_ADD]);\n            d.set(\"blendEquationSeparate\", [g.FUNC_ADD, g.FUNC_ADD]);\n            d.set(\"blendFunc\", [g.ONE, g.ZERO]);\n            d.set(\"blendFuncSeparate\", [g.ONE, g.ZERO, g.ONE, g.ZERO]);\n            d.set(\"clearColor\", [0, 0, 0, 0]);\n            d.set(\"clearDepth\", [1]);\n            d.set(\"clearStencil\", [0]);\n            d.set(\"colorMask\", [true, true, true, true]);\n            d.set(\"cullFace\", [g.BACK]);\n            d.set(\"depthFunc\", [g.LESS]);\n            d.set(\"depthMask\", [true]);\n            d.set(\"depthRange\", [0, 1]);\n            d.set(\"frontFace\", [g.CCW]);\n            d.set(\"lineWidth\", [1]);\n            d.set(\"polygonOffset\", [0, 0]);\n            d.set(\"sampleCoverage\", [1, false]);\n            d.set(\"stencilFunc\", [g.ALWAYS, 0, 1]);\n            d.set(\"_stencilFuncSeparateFront\", [g.ALWAYS, 0, 1]);\n            d.set(\"_stencilFuncSeparateBack\", [g.ALWAYS, 0, 1]);\n            d.set(\"_stencilFuncSeparateFrontAndBack\", [g.ALWAYS, 0, 1]);\n            d.set(\"stencilMask\", [1]);\n            d.set(\"_stencilMaskSeparateFront\", [1]);\n            d.set(\"_stencilMaskSeparateBack\", [1]);\n            d.set(\"_stencilMaskSeparateFrontAndBack\", [1]);\n            d.set(\"stencilOp\", [g.KEEP, g.KEEP, g.KEEP]);\n            d.set(\"_stencilOpSeparateFront\", [g.KEEP, g.KEEP, g.KEEP]);\n            d.set(\"_stencilOpSeparateBack\", [g.KEEP, g.KEEP, g.KEEP]);\n            d.set(\"_stencilOpSeparateFrontAndBack\", [g.KEEP, g.KEEP, g.KEEP]);\n            d.set(\"vertexAttrib1f\", []);\n            d.set(\"vertexAttrib1fv\", []);\n            d.set(\"vertexAttrib2f\", []);\n            d.set(\"vertexAttrib2fv\", []);\n            d.set(\"vertexAttrib3f\", []);\n            d.set(\"vertexAttrib3fv\", []);\n            d.set(\"vertexAttrib4f\", []);\n            d.set(\"vertexAttrib4fv\", []);\n        }\n        return this._defaultSettings\n    }\n\n    static _getTextureTargetIndex(target) {\n        switch(target) {\n            case 0x0DE1:\n                /* TEXTURE_2D */\n                return 0;\n            case 0x8513:\n                /* TEXTURE_CUBE_MAP */\n                return 1;\n            default:\n                // Shouldn't happen.\n                throw new Error('Unknown texture target: ' + target);\n        }\n    }\n\n    static _getTextureTargetByIndex(index) {\n        if (!this._textureTargetIndices) {\n            this._textureTargetIndices = [0x0DE1, 0x8513];\n        }\n        return this._textureTargetIndices[index]\n    }\n\n    static _getTextureIndex(index) {\n        return index - 0x84C0 /* GL_TEXTURE0 */;\n    }\n\n    static _getTextureByIndex(index) {\n        return index + 0x84C0;\n    }\n\n    static _getPixelStoreiIndex(pname) {\n        switch(pname) {\n            case 0x0D05:\n                /* PACK_ALIGNMENT */\n                return 0;\n            case 0x0CF5:\n                /* UNPACK_ALIGNMENT */\n                return 1;\n            case 0x9240:\n                /* UNPACK_FLIP_Y_WEBGL */\n                return 2;\n            case 0x9241:\n                /* UNPACK_PREMULTIPLY_ALPHA_WEBGL */\n                return 3;\n            case 0x9243:\n                /* UNPACK_COLORSPACE_CONVERSION_WEBGL */\n                return 4;\n                //@todo: support WebGL2 properties, see https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/pixelStorei\n            case 0x9245:\n                /* UNPACK_FLIP_BLUE_RED */\n                return 5;\n            default:\n                // Shouldn't happen.\n                throw new Error('Unknown pixelstorei: ' + pname);\n        }\n    }\n\n    static _getPixelStoreiByIndex(index) {\n        if (!this._pixelStoreiIndices) {\n            this._pixelStoreiIndices = [0x0D05, 0x0CF5, 0x9240, 0x9241, 0x9243];\n        }\n        return this._pixelStoreiIndices[index]\n    }\n\n    static _getDefaultPixelStoreiByIndex(index) {\n        if (!this._pixelStoreiDefaults) {\n            this._pixelStoreiDefaults = [4, 4, false, false, WebGLRenderingContext.prototype.BROWSER_DEFAULT_WEBGL];\n        }\n        return this._pixelStoreiDefaults[index]\n    }\n}\n\nclass WebGLStateManager {\n\n    _initStateManager(id = \"default\") {\n        this._states = {};\n        this._state = this._getState(id);\n    }\n\n    _getState(id) {\n        if (!this._states[id]) {\n            this._states[id] = new WebGLState(id, this);\n        }\n        return this._states[id];\n    }\n\n    switchState(id = \"default\") {\n        if (this._state._id !== id) {\n            const newState = this._getState(id);\n            this._state.migrate(newState);\n            this._state = newState;\n        }\n    }\n\n    $useProgram(program) {\n        if (this._state.setProgram(program))\n            this._useProgram(program);\n    }\n\n    $bindBuffer(target, fb) {\n        if (this._state.setBuffer(target, fb))\n            this._bindBuffer(target, fb);\n    }\n\n    $bindFramebuffer(target, fb) {\n        if (this._state.setFramebuffer(target, fb))\n            this._bindFramebuffer(target, fb);\n    }\n\n    $bindRenderbuffer(target, fb) {\n        if (this._state.setRenderbuffer(target, fb))\n            this._bindRenderbuffer(target, fb);\n    }\n\n    $enable(cap) {\n        if (this._state.setFlag(cap, true))\n            this._enable(cap);\n    }\n\n    $disable(cap) {\n        if (this._state.setFlag(cap, false))\n            this._disable(cap);\n    }\n\n    $viewport(x, y, w, h) {\n        if (this._state.setSetting(this._viewport, [x, y, w, h]))\n            this._viewport(x, y, w, h);\n    }\n\n    $scissor(x, y, w, h) {\n        if (this._state.setSetting(this._scissor, [x, y, w, h]))\n            this._scissor(x, y, w, h);\n    }\n\n    $disableVertexAttribArray(index) {\n        if (this._state.disableVertexAttribArray(index))\n            this._disableVertexAttribArray(index);\n    }\n\n    $enableVertexAttribArray(index) {\n        if (this._state.enableVertexAttribArray(index))\n            this._enableVertexAttribArray(index);\n    }\n\n    $vertexAttribPointer(index, size, type, normalized, stride, offset) {\n        if (this._state.vertexAttribPointer(index, [size, type, normalized, stride, offset]))\n            this._vertexAttribPointer(index, size, type, normalized, stride, offset);\n    }\n\n    $activeTexture(texture) {\n        if (this._state.setActiveTexture(texture))\n            this._activeTexture(texture);\n    }\n\n    $bindTexture(target, texture) {\n        if (this._state.bindTexture(target, texture))\n            this._bindTexture(target, texture);\n    }\n\n    $pixelStorei(pname, param) {\n        if (this._state.setPixelStorei(pname, param)) {\n            this._pixelStorei(pname, param);\n        }\n    }\n\n    $stencilFuncSeparate(face, func, ref, mask) {\n        let f;\n        switch(face) {\n            case this.FRONT:\n                f = this._stencilFuncSeparateFront;\n                break;\n            case this.BACK:\n                f = this._stencilFuncSeparateBack;\n                break;\n            case this.FRONT_AND_BACK:\n                f = this._stencilFuncSeparateFrontAndBack;\n                break;\n        }\n\n        if (this._state.setSetting(f, [func, ref, mask]))\n            f.apply(this, [func, ref, mask]);\n    }\n\n    _stencilFuncSeparateFront(func, ref, mask) {\n        this._stencilFuncSeparate(this.FRONT, func, ref, mask);\n    }\n\n    _stencilFuncSeparateBack(func, ref, mask) {\n        this._stencilFuncSeparate(this.BACK, func, ref, mask);\n    }\n\n    _stencilFuncSeparateFrontAndBack(func, ref, mask) {\n        this._stencilFuncSeparate(this.FRONT_AND_BACK, func, ref, mask);\n    }\n\n    $stencilMaskSeparate(face, mask) {\n        let f;\n        switch(face) {\n            case this.FRONT:\n                f = this._stencilMaskSeparateFront;\n                break;\n            case this.BACK:\n                f = this._stencilMaskSeparateBack;\n                break;\n            case this.FRONT_AND_BACK:\n                f = this._stencilMaskSeparateFrontAndBack;\n                break;\n        }\n\n        if (this._state.setSetting(f, [mask]))\n            f.apply(this, [mask]);\n    }\n\n    _stencilMaskSeparateFront(mask) {\n        this._stencilMaskSeparate(this.FRONT, mask);\n    }\n\n    _stencilMaskSeparateBack(mask) {\n        this._stencilMaskSeparate(this.BACK, mask);\n    }\n\n    _stencilMaskSeparateFrontAndBack(mask) {\n        this._stencilMaskSeparate(this.FRONT_AND_BACK, mask);\n    }\n\n    $stencilOpSeparate(face, fail, zfail, zpass) {\n        let f;\n        switch(face) {\n            case this.FRONT:\n                f = this._stencilOpSeparateFront;\n                break;\n            case this.BACK:\n                f = this._stencilOpSeparateBack;\n                break;\n            case this.FRONT_AND_BACK:\n                f = this._stencilOpSeparateFrontAndBack;\n                break;\n        }\n\n        if (this._state.setSetting(f, [fail, zfail, zpass]))\n            f.apply(this, [fail, zfail, zpass]);\n    }\n\n    _stencilOpSeparateFront(fail, zfail, zpass) {\n        this._stencilOpSeparate(this.FRONT, fail, zfail, zpass);\n    }\n\n    _stencilOpSeparateBack(fail, zfail, zpass) {\n        this._stencilOpSeparate(this.BACK, fail, zfail, zpass);\n    }\n\n    _stencilOpSeparateFrontAndBack(fail, zfail, zpass) {\n        this._stencilOpSeparate(this.FRONT_AND_BACK, fail, zfail, zpass);\n    }\n\n    $blendColor(red, green, blue, alpha) {\n        if (this._state.setSetting(this._blendColor, [red, green, blue, alpha]))\n            this._blendColor(red, green, blue, alpha);\n    }\n\n    $blendEquation(mode) {\n        if (this._state.setSetting(this._blendEquation, [mode]))\n            this._blendEquation(mode);\n    }\n\n    $blendEquationSeparate(modeRGB, modeAlpha) {\n        if (this._state.setSetting(this._blendEquationSeparate, [modeRGB, modeAlpha]))\n            this._blendEquationSeparate(modeRGB, modeAlpha);\n    }\n\n    $blendFunc(sfactor, dfactor) {\n        if (this._state.setSetting(this._blendFunc, [sfactor, dfactor]))\n            this._blendFunc(sfactor, dfactor);\n    }\n\n    $blendFuncSeparate(srcRGB, dstRGB, srcAlpha, dstAlpha) {\n        if (this._state.setSetting(this._blendFuncSeparate, [srcRGB, dstRGB, srcAlpha, dstAlpha]))\n            this._blendFuncSeparate(srcRGB, dstRGB, srcAlpha, dstAlpha);\n    }\n\n    $clearColor(red, green, blue, alpha) {\n        if (this._state.setSetting(this._clearColor, [red, green, blue, alpha]))\n            this._clearColor(red, green, blue, alpha);\n    }\n\n    $clearDepth(depth) {\n        if (this._state.setSetting(this._clearDepth, [depth]))\n            this._clearDepth(depth);\n    }\n\n    $clearStencil(s) {\n        if (this._state.setSetting(this._clearStencil, [s]))\n            this._clearStencil(s);\n    }\n\n    $colorMask(red, green, blue, alpha) {\n        if (this._state.setSetting(this._colorMask, [red, green, blue, alpha]))\n            this._colorMask(red, green, blue, alpha);\n    }\n\n    $cullFace(mode) {\n        if (this._state.setSetting(this._cullFace, [mode]))\n            this._cullFace(mode);\n    }\n\n    $depthFunc(func) {\n        if (this._state.setSetting(this._depthFunc, [func]))\n            this._depthFunc(func);\n    }\n\n    $depthMask(flag) {\n        if (this._state.setSetting(this._depthMask, [flag]))\n            this._depthMask(flag);\n    }\n\n    $depthRange(zNear, zFar) {\n        if (this._state.setSetting(this._depthRange, [zNear, zFar]))\n            this._depthRange(zNear, zFar);\n    }\n\n    $frontFace(mode) {\n        if (this._state.setSetting(this._frontFace, [mode]))\n            this._frontFace(mode);\n    }\n\n    $lineWidth(width) {\n        if (this._state.setSetting(this._lineWidth, [width]))\n            this._lineWidth(width);\n    }\n\n    $polygonOffset(factor, units) {\n        if (this._state.setSetting(this._polygonOffset, [factor, units]))\n            this._polygonOffset(factor, units);\n    }\n\n    $sampleCoverage(value, invert) {\n        if (this._state.setSetting(this._sampleCoverage, [value, invert]))\n            this._sampleCoverage(value, invert);\n    }\n\n    $stencilFunc(func, ref, mask) {\n        if (this._state.setSetting(this._stencilFunc, [func, ref, mask]))\n            this._stencilFunc(func, ref, mask);\n    }\n\n    $stencilMask(mask) {\n        if (this._state.setSetting(this._stencilMask, [mask]))\n            this._stencilMask(mask);\n    }\n\n    $stencilOp(fail, zfail, zpass) {\n        if (this._state.setSetting(this._stencilOp, [fail, zfail, zpass]))\n            this._stencilOp(fail, zfail, zpass);\n    }\n\n    $vertexAttrib1f(indx, x) {\n        if (this._state.setSetting(this._vertexAttrib1f, [indx, x]))\n            this._vertexAttrib1f(indx, x);\n    }\n\n    $vertexAttrib1fv(indx, values) {\n        if (this._state.setSetting(this._vertexAttrib1fv, [indx, values]))\n            this._vertexAttrib1fv(indx, values);\n    }\n\n    $vertexAttrib2f(indx, x, y) {\n        if (this._state.setSetting(this._vertexAttrib2f, [indx, x, y]))\n            this._vertexAttrib2f(indx, x, y);\n    }\n\n    $vertexAttrib2fv(indx, values) {\n        if (this._state.setSetting(this._vertexAttrib2fv, [indx, values]))\n            this._vertexAttrib2fv(indx, values);\n    }\n\n    $vertexAttrib3f(indx, x, y, z) {\n        if (this._state.setSetting(this._vertexAttrib3f, [indx, x, y, z]))\n            this._vertexAttrib3f(indx, x, y, z);\n    }\n\n    $vertexAttrib3fv(indx, values) {\n        if (this._state.setSetting(this._vertexAttrib3fv, [indx, values]))\n            this._vertexAttrib3fv(indx, values);\n    }\n\n    $vertexAttrib4f(indx, x, y, z, w) {\n        if (this._state.setSetting(this._vertexAttrib4f, [indx, x, y, z, w]))\n            this._vertexAttrib4f(indx, x, y, z, w);\n    }\n\n    $vertexAttrib4fv(indx, values) {\n        if (this._state.setSetting(this._vertexAttrib4fv, [indx, values]))\n            this._vertexAttrib4fv(indx, values);\n    }\n\n    /**\n     * Sets up the rendering context for context sharing.\n     * @param {WebGLRenderingContext} gl\n     * @param {string} id\n     */\n    static enable(gl, id = \"default\") {\n        const names = Object.getOwnPropertyNames(WebGLStateManager.prototype);\n        const WebGLRenderingContextProto = gl.__proto__;\n        names.forEach(name => {\n            if (name !== \"constructor\") {\n                const method = WebGLStateManager.prototype[name];\n                if (name.charAt(0) === \"$\") {\n                    name = name.substr(1);\n                }\n                if (gl[name] !== method) {\n                    if (gl[name]) {\n                        if (!gl[name].name) {\n                            // We do this for compatibility with the Chrome WebGL Inspector plugin.\n                            gl[name].xname = name;\n                        }\n                        gl['_' + name] = gl[name];\n                    }\n                    gl[name] = method;\n                }\n            }\n        });\n\n        WebGLStateManager.prototype._initStateManager.call(gl, id);\n\n        return gl;\n    }\n\n}\n\nexport default WebGLStateManager;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport TextureSource from \"./TextureSource.mjs\";\nimport Stage from './Stage.mjs';\n\nexport default class TextureManager {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        /**\n         * The currently used amount of texture memory.\n         * @type {number}\n         */\n        this._usedMemory = 0;\n\n        /**\n         * All uploaded texture sources.\n         * @type {TextureSource[]}\n         */\n        this._uploadedTextureSources = [];\n\n        /**\n         * The texture source lookup id to texture source hashmap.\n         * @type {Map<String, TextureSource>}\n         */\n        this.textureSourceHashmap = new Map();\n\n    }\n\n    get usedMemory() {\n        return this._usedMemory;\n    }\n\n    destroy() {\n        for (let i = 0, n = this._uploadedTextureSources.length; i < n; i++) {\n            this._nativeFreeTextureSource(this._uploadedTextureSources[i]);\n        }\n        \n        this.textureSourceHashmap.clear();\n        this._usedMemory = 0;\n    }\n\n    getReusableTextureSource(id) {\n        return this.textureSourceHashmap.get(id);\n    }\n\n    getTextureSource(func, id) {\n        // Check if texture source is already known.\n        let textureSource = id ? this.textureSourceHashmap.get(id) : null;\n        if (!textureSource) {\n            // Create new texture source.\n            textureSource = new TextureSource(this, func);\n\n            if (id) {\n                textureSource.lookupId = id;\n                this.textureSourceHashmap.set(id, textureSource);\n            }\n        }\n\n        return textureSource;\n    }\n\n    uploadTextureSource(textureSource, options) {\n        if (textureSource.isLoaded()) return;\n\n        this._addMemoryUsage(textureSource.w * textureSource.h);\n\n        // Load texture.\n        const nativeTexture = this._nativeUploadTextureSource(textureSource, options);\n\n        textureSource._nativeTexture = nativeTexture;\n\n        // We attach w and h to native texture (we need it in CoreRenderState._isRenderTextureReusable).\n        nativeTexture.w = textureSource.w;\n        nativeTexture.h = textureSource.h;\n\n        nativeTexture.update = this.stage.frameCounter;\n\n        this._uploadedTextureSources.push(textureSource);\n        \n        this.addToLookupMap(textureSource);\n\n        // add VRAM tracking if using the webgl renderer\n        this._updateVramUsage(textureSource, 1);\n    }\n\n    _addMemoryUsage(delta) {\n        this._usedMemory += delta;\n        this.stage.addMemoryUsage(delta);\n    }\n\n    _updateVramUsage(textureSource, sign) {\n        const nativeTexture = textureSource.nativeTexture;\n        var usage;\n\n        // do nothing if webgl isn't even supported\n        if (!Stage.isWebglSupported())\n            return;\n\n        // or if there is no native texture\n        if (!textureSource.isLoaded())\n            return;\n\n        // or, finally, if there is no bytes per pixel specified\n        if (!nativeTexture.hasOwnProperty('bytesPerPixel') || isNaN(nativeTexture.bytesPerPixel))\n            return;\n\n        usage = sign * (textureSource.w * textureSource.h * nativeTexture.bytesPerPixel);\n\n        this.stage.addVramUsage(usage, textureSource.hasAlpha);\n    }\n\n    addToLookupMap(textureSource) {\n        const lookupId = textureSource.lookupId;\n        if (lookupId) {\n            if (!this.textureSourceHashmap.has(lookupId)) {\n                this.textureSourceHashmap.set(lookupId, textureSource);\n            }\n        }\n    }\n\n    gc() {\n        this.freeUnusedTextureSources();\n    }\n    \n    freeUnusedTextureSources() {\n        let remainingTextureSources = [];\n        for (let i = 0, n = this._uploadedTextureSources.length; i < n; i++) {\n            let ts = this._uploadedTextureSources[i];\n            if (ts.allowCleanup()) {\n                this._freeManagedTextureSource(ts);\n            } else {\n                remainingTextureSources.push(ts);\n            }\n        }\n\n        this._uploadedTextureSources = remainingTextureSources;\n\n        this._cleanupLookupMap();\n    }\n\n    _freeManagedTextureSource(textureSource) {\n        if (textureSource.isLoaded()) {\n            this._nativeFreeTextureSource(textureSource);\n            this._addMemoryUsage(-textureSource.w * textureSource.h);\n\n            // add VRAM tracking if using the webgl renderer\n            this._updateVramUsage(textureSource, -1);\n        }\n\n        // Should be reloaded.\n        textureSource.loadingSince = null;\n    }\n\n    _cleanupLookupMap() {\n        // We keep those that still have value (are being loaded or already loaded, or are likely to be reused).\n        this.textureSourceHashmap.forEach((textureSource, lookupId) => {\n            if (!(textureSource.isLoaded() || textureSource.isLoading()) && !textureSource.isUsed()) {\n                this.textureSourceHashmap.delete(lookupId);\n            }\n        });\n    }\n\n    /**\n     * Externally free texture source.\n     * @param textureSource\n     */\n    freeTextureSource(textureSource) {\n        const index = this._uploadedTextureSources.indexOf(textureSource);\n        const managed = (index !== -1);\n\n        if (textureSource.isLoaded()) {\n            if (managed) {\n                this._addMemoryUsage(-textureSource.w * textureSource.h);\n                this._uploadedTextureSources.splice(index, 1);\n            }\n            this._nativeFreeTextureSource(textureSource);\n        }\n\n        // Should be reloaded.\n        textureSource.loadingSince = null;\n    }\n\n    _nativeUploadTextureSource(textureSource, options) {\n        return this.stage.renderer.uploadTextureSource(textureSource, options);\n    }\n\n    _nativeFreeTextureSource(textureSource) {\n        this.stage.renderer.freeTextureSource(textureSource);\n        textureSource.clearNativeTexture();\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Allows throttling of loading texture sources, keeping the app responsive.\n */\nexport default class TextureThrottler {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        this.genericCancelCb = (textureSource) => {\n            this._remove(textureSource);\n        };\n\n        this._sources = [];\n        this._data = [];\n    }\n\n    destroy() {\n        this._sources = [];\n        this._data = [];\n        this.stage = null;\n\n        delete this._sources;\n        delete this._data;\n        delete this.stage;\n    }\n\n    processSome() {\n        if (this._sources.length) {\n            const start = Date.now();\n            do {\n                this._processItem();\n            } while(this._sources.length && (Date.now() - start < TextureThrottler.MAX_UPLOAD_TIME_PER_FRAME));\n        }\n    }\n\n    _processItem() {\n        const source = this._sources.pop();\n        const data = this._data.pop();\n        if (source.isLoading()) {\n            source.processLoadedSource(data);\n        }\n    }\n\n    add(textureSource, data) {\n        this._sources.push(textureSource);\n        this._data.push(data);\n    }\n\n    _remove(textureSource) {\n        const index = this._sources.indexOf(textureSource);\n        if (index >= 0) {\n            this._sources.splice(index, 1);\n            this._data.splice(index, 1);\n        }\n    }\n\n}\n\nTextureThrottler.MAX_UPLOAD_TIME_PER_FRAME = 10;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nexport default class CoreContext {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        this.root = null;\n\n        this.updateTreeOrder = 0;\n\n        this.renderState = this.stage.renderer.createCoreRenderState(this);\n\n        this.renderExec = this.stage.renderer.createCoreRenderExecutor(this);\n        this.renderExec.init();\n\n        this._usedMemory = 0;\n        this._renderTexturePool = [];\n\n        this._renderTextureId = 1;\n\n        this._zSorts = [];\n\n        this.renderToTextureCount = 0;\n    }\n\n    get usedMemory() {\n        return this._usedMemory;\n    }\n\n    destroy() {\n        this._renderTexturePool.forEach(texture => this._freeRenderTexture(texture));\n        this._usedMemory = 0;\n\n        this.stage = null;\n        this.root = null;\n\n        this.renderState = null;\n        this.renderExec = null;\n        this._renderTexturePool = null;\n        this._zSorts = null;\n\n        delete this.stage;\n        delete this.root;\n        delete this.renderState;\n        delete this.renderExec;\n        delete this._renderTexturePool;\n        delete this._zSorts;\n    }\n\n    hasRenderUpdates() {\n        return !!this.root._parent._hasRenderUpdates;\n    }\n\n    render() {\n        // Clear flag to identify if anything changes before the next frame.\n        this.root._parent._hasRenderUpdates = 0;\n\n        this._render();\n    }\n\n    update() {\n        this._update();\n\n        // Due to the boundsVisibility flag feature (and onAfterUpdate hook), it is possible that other elements were\n        // changed during the update loop (for example due to the txLoaded event). We process these changes immediately\n        // (but not recursively to prevent infinite loops).\n        if (this.root._hasUpdates) {\n            this._update();\n        }\n\n        this._performForcedZSorts();\n    }\n\n    /**\n     * Certain ElementCore items may be forced to zSort to strip out references to prevent memleaks..\n     */\n    _performForcedZSorts() {\n        const n = this._zSorts.length;\n        if (n) {\n            // Forced z-sorts (ElementCore may force a z-sort in order to free memory/prevent memory leaks).\n            for (let i = 0, n = this._zSorts.length; i < n; i++) {\n                if (this._zSorts[i].zSort) {\n                    this._zSorts[i].sortZIndexedChildren();\n                }\n            }\n            this._zSorts = [];\n        }\n    }\n\n    _update() {\n        this.updateTreeOrder = 0;\n\n        this.root.update();\n    }\n\n    _render() {\n        const debugFrame = this.stage.getOption('debugFrame');\n        // Obtain a sequence of the quad operations.\n        this._fillRenderState();\n\n        if (this.stage.getOption('readPixelsBeforeDraw')) {\n            this._readPixels();\n        }\n\n        // Now run them with the render executor.\n        this._performRender();\n\n        if (debugFrame) {\n            console.log(`[Lightning] RTT Renders in frame: ${this.renderToTextureCount}`)\n        }\n\n        // Block OpenGL pipeline to prevent framebuffer flickering\n        // on certain devices\n        if (this.stage.getOption('readPixelsAfterDraw') &&\n            this.renderToTextureCount >= this.stage.getOption('readPixelsAfterDrawThreshold')\n        ) {\n            if (debugFrame) {\n                console.log(`[Lightning] readPixelsAfterDraw behavior triggered`)\n            }\n            this._readPixels();\n        }\n\n        this.renderToTextureCount = 0;\n    }\n\n    _readPixels() {\n        const pixels = new Uint8Array(4);\n        const gl = this.stage.gl;\n        gl.readPixels(0, 0, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\n    }\n\n    _fillRenderState() {\n        this.renderState.reset();\n        this.root.render();\n        this.renderState.finish();\n    }\n\n    _performRender() {\n        this.renderExec.execute();\n    }\n\n    _addMemoryUsage(delta) {\n        this._usedMemory += delta;\n        this.stage.addMemoryUsage(delta);\n    }\n\n    allocateRenderTexture(w, h) {\n        let prec = this.stage.getRenderPrecision();\n        let pw = Math.max(1, Math.round(w * prec));\n        let ph = Math.max(1, Math.round(h * prec));\n\n        // Search last item first, so that last released render texture is preferred (may cause memory cache benefits).\n        const n = this._renderTexturePool.length;\n        for (let i = n - 1; i >= 0; i--) {\n            const texture = this._renderTexturePool[i];\n            // We don't want to reuse the same render textures within the same frame because that will create gpu stalls.\n            if (texture.w === pw && texture.h === ph && (texture.update !== this.stage.frameCounter)) {\n                texture.f = this.stage.frameCounter;\n                this._renderTexturePool.splice(i, 1);\n                return texture;\n            }\n        }\n\n        const texture = this._createRenderTexture(w, h, pw, ph);\n        texture.precision = prec;\n        return texture;\n    }\n\n    releaseRenderTexture(texture) {\n        this._renderTexturePool.push(texture);\n    }\n\n    freeUnusedRenderTextures(maxAge = 60) {\n        // Clean up all textures that are no longer used.\n        // This cache is short-lived because it is really just meant to supply running shaders that are\n        // updated during a number of frames.\n        let limit = this.stage.frameCounter - maxAge;\n\n        this._renderTexturePool = this._renderTexturePool.filter(texture => {\n            if (texture.f <= limit) {\n                this._freeRenderTexture(texture);\n                return false;\n            }\n            return true;\n        });\n    }\n\n    _createRenderTexture(w, h, pw, ph) {\n        this._addMemoryUsage(pw * ph);\n\n        const texture = this.stage.renderer.createRenderTexture(w, h, pw, ph);\n        texture.id = this._renderTextureId++;\n        texture.f = this.stage.frameCounter;\n        texture.ow = w;\n        texture.oh = h;\n        texture.w = pw;\n        texture.h = ph;\n\n        return texture;\n    }\n\n    _freeRenderTexture(nativeTexture) {\n        this.stage.renderer.freeRenderTexture(nativeTexture);\n        this._addMemoryUsage(-nativeTexture.w * nativeTexture.h);\n    }\n\n    copyRenderTexture(renderTexture, nativeTexture, options) {\n        this.stage.renderer.copyRenderTexture(renderTexture, nativeTexture, options);\n    }\n\n    forceZSort(elementCore) {\n        this._zSorts.push(elementCore);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport Base from \"../tree/Base.mjs\";\n\nexport default class TransitionSettings {\n    constructor(stage) {\n        this.stage = stage;\n        this._timingFunction = 'ease';\n        this._timingFunctionImpl = StageUtils.getTimingFunction(this._timingFunction);\n        this.delay = 0;\n        this.duration = 0.2;\n        this.merger = null;\n    }\n\n    get timingFunction() {\n        return this._timingFunction;\n    }\n\n    set timingFunction(v) {\n        this._timingFunction = v;\n        this._timingFunctionImpl = StageUtils.getTimingFunction(v);\n    }\n\n    get timingFunctionImpl() {\n        return this._timingFunctionImpl;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n}\n\nTransitionSettings.prototype.isTransitionSettings = true;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class TransitionManager {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        this.stage.on('frameStart', () => this.progress());\n\n        /**\n         * All transitions that are running and attached.\n         * (we don't support transitions on un-attached elements to prevent memory leaks)\n         * @type {Set<Transition>}\n         */\n        this.active = new Set();\n\n        this.defaultTransitionSettings = new TransitionSettings(this.stage);\n    }\n\n    progress() {\n        if (this.active.size) {\n            let dt = this.stage.dt;\n\n            let filter = false;\n            this.active.forEach(function(a) {\n                a.progress(dt);\n                if (!a.isRunning()) {\n                    filter = true;\n                }\n            });\n\n            if (filter) {\n                this.active = new Set([...this.active].filter(t => (t.isRunning())));\n            }\n        }\n    }\n\n    createSettings(settings) {\n        const transitionSettings = new TransitionSettings();\n        Base.patchObject(transitionSettings, settings);\n        return transitionSettings;\n    }\n\n    addActive(transition) {\n        this.active.add(transition);\n    }\n\n    removeActive(transition) {\n        this.active.delete(transition);\n    }\n}\n\nimport Base from \"../tree/Base.mjs\";\nimport TransitionSettings from \"./TransitionSettings.mjs\";\nimport Transition from \"./Transition.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../tree/Utils.mjs\";\n\nexport default class MultiSpline {\n\n    constructor() {\n        this._clear();\n    }\n\n    _clear() {\n        this._p = [];\n        this._pe = [];\n        this._idp = [];\n        this._f = [];\n        this._v = [];\n        this._lv = [];\n        this._sm = [];\n        this._s = [];\n        this._ve = [];\n        this._sme = [];\n        this._se = [];\n\n        this._length = 0;\n    }\n\n    parse(rgba, def) {\n        let i, n;\n        if (!Utils.isObjectLiteral(def)) {\n            def = {0: def}\n        }\n\n        let defaultSmoothness = 0.5;\n\n        let items = [];\n        for (let key in def) {\n            if (def.hasOwnProperty(key)) {\n                let obj = def[key];\n                if (!Utils.isObjectLiteral(obj)) {\n                    obj = {v: obj}\n                }\n\n                let p = parseFloat(key);\n\n                if (key === \"sm\") {\n                    defaultSmoothness = obj.v;\n                } else if (!isNaN(p) && p >= 0 && p <= 2) {\n                    obj.p = p;\n\n                    obj.f = Utils.isFunction(obj.v);\n                    obj.lv = obj.f ? obj.v(0, 0) : obj.v;\n\n                    items.push(obj);\n                }\n            }\n        }\n\n        // Sort by progress value.\n        items = items.sort(function(a, b) {return a.p - b.p});\n\n        n = items.length;\n\n        for (i = 0; i < n; i++) {\n            let last = (i === n - 1);\n            if (!items[i].hasOwnProperty('pe')) {\n                // Progress.\n                items[i].pe = last ? (items[i].p <= 1 ? 1 : 2 /* support onetotwo stop */) : items[i + 1].p;\n            } else {\n                // Prevent multiple items at the same time.\n                const max = i < n - 1 ? items[i + 1].p : 1;\n                if (items[i].pe > max) {\n                    items[i].pe = max;\n                }\n            }\n            if (items[i].pe === items[i].p) {\n                items[i].idp = 0;\n            } else {\n                items[i].idp = 1 / (items[i].pe - items[i].p);\n            }\n        }\n\n        // Color merger: we need to split/combine RGBA components.\n\n        // Calculate bezier helper values.;\n        for (i = 0; i < n; i++) {\n            if (!items[i].hasOwnProperty('sm')) {\n                // Smoothness.;\n                items[i].sm = defaultSmoothness;\n            }\n            if (!items[i].hasOwnProperty('s')) {\n                // Slope.;\n                if (i === 0 || i === n - 1 || (items[i].p === 1 /* for onetotwo */)) {\n                    // Horizontal slope at start and end.;\n                    items[i].s = rgba ? [0, 0, 0, 0] : 0;\n                } else {\n                    const pi = items[i - 1];\n                    const ni = items[i + 1];\n                    if (pi.p === ni.p) {\n                        items[i].s = rgba ? [0, 0, 0, 0] : 0;\n                    } else {\n                        if (rgba) {\n                            const nc = MultiSpline.getRgbaComponents(ni.lv);\n                            const pc = MultiSpline.getRgbaComponents(pi.lv);\n                            const d = 1 / (ni.p - pi.p);\n                            items[i].s = [\n                                d * (nc[0] - pc[0]),\n                                d * (nc[1] - pc[1]),\n                                d * (nc[2] - pc[2]),\n                                d * (nc[3] - pc[3])\n                            ];\n                        } else {\n                            items[i].s = (ni.lv - pi.lv) / (ni.p - pi.p);\n                        }\n                    }\n                }\n            }\n        }\n\n        for (i = 0; i < n - 1; i++) {\n            // Calculate value function.;\n            if (!items[i].f) {\n\n                let last = (i === n - 1);\n                if (!items[i].hasOwnProperty('ve')) {\n                    items[i].ve = last ? items[i].lv : items[i + 1].lv;\n                }\n\n                // We can only interpolate on numeric values. Non-numeric values are set literally when reached time.\n                if (Utils.isNumber(items[i].v) && Utils.isNumber(items[i].lv)) {\n                    if (!items[i].hasOwnProperty('sme')) {\n                        items[i].sme = last ? defaultSmoothness : items[i + 1].sm;\n                    }\n                    if (!items[i].hasOwnProperty('se')) {\n                        items[i].se = last ? (rgba ? [0, 0, 0, 0] : 0) : items[i + 1].s;\n                    }\n\n                    // Generate spline.;\n                    if (rgba) {\n                        items[i].v = MultiSpline.getSplineRgbaValueFunction(items[i].v, items[i].ve, items[i].p, items[i].pe, items[i].sm, items[i].sme, items[i].s, items[i].se);\n                    } else {\n                        items[i].v = MultiSpline.getSplineValueFunction(items[i].v, items[i].ve, items[i].p, items[i].pe, items[i].sm, items[i].sme, items[i].s, items[i].se);\n                    }\n\n                    items[i].f = true;\n                }\n            }\n        }\n\n        if (this.length) {\n            this._clear();\n        }\n\n        for (i = 0, n = items.length; i < n; i++) {\n            this._add(items[i]);\n        }\n    }\n\n    _add(item) {\n        this._p.push(item.p || 0);\n        this._pe.push(item.pe || 0);\n        this._idp.push(item.idp || 0);\n        this._f.push(item.f || false);\n        this._v.push(item.hasOwnProperty('v') ? item.v : 0 /* v might be false or null */ );\n        this._lv.push(item.lv || 0);\n        this._sm.push(item.sm || 0);\n        this._s.push(item.s || 0);\n        this._ve.push(item.ve || 0);\n        this._sme.push(item.sme || 0);\n        this._se.push(item.se || 0);\n        this._length++;\n    }\n\n    _getItem(p) {\n        const n = this._length;\n        if (!n) {\n            return -1;\n        }\n\n        if (p < this._p[0]) {\n            return 0;\n        }\n\n        for (let i = 0; i < n; i++) {\n            if (this._p[i] <= p && p < this._pe[i]) {\n                return i;\n            }\n        }\n\n        return n - 1;\n    }\n\n    getValue(p) {\n        const i = this._getItem(p);\n        if (i === -1) {\n            return undefined;\n        } else {\n            if (this._f[i]) {\n                const o = Math.min(1, Math.max(0, (p - this._p[i]) * this._idp[i]));\n                return this._v[i](o);\n            } else {\n                return this._v[i];\n            }\n        }\n    }\n\n    get length() {\n        return this._length;\n    }\n\n    static getRgbaComponents(argb) {\n        let r = ((argb / 65536) | 0) % 256;\n        let g = ((argb / 256) | 0) % 256;\n        let b = argb % 256;\n        let a = ((argb / 16777216) | 0);\n        return [r, g, b, a];\n    };\n\n    static getSplineValueFunction(v1, v2, p1, p2, o1, i2, s1, s2) {\n        // Normalize slopes because we use a spline that goes from 0 to 1.\n        let dp = p2 - p1;\n        s1 *= dp;\n        s2 *= dp;\n\n        let helpers = MultiSpline.getSplineHelpers(v1, v2, o1, i2, s1, s2);\n        if (!helpers) {\n            return function (p) {\n                if (p === 0) return v1;\n                if (p === 1) return v2;\n\n                return v2 * p + v1 * (1 - p);\n            };\n        } else {\n            return function (p) {\n                if (p === 0) return v1;\n                if (p === 1) return v2;\n                return MultiSpline.calculateSpline(helpers, p);\n            };\n        }\n    };\n\n    static getSplineRgbaValueFunction(v1, v2, p1, p2, o1, i2, s1, s2) {\n        // Normalize slopes because we use a spline that goes from 0 to 1.\n        let dp = p2 - p1;\n        s1[0] *= dp;\n        s1[1] *= dp;\n        s1[2] *= dp;\n        s1[3] *= dp;\n        s2[0] *= dp;\n        s2[1] *= dp;\n        s2[2] *= dp;\n        s2[3] *= dp;\n\n        let cv1 = MultiSpline.getRgbaComponents(v1);\n        let cv2 = MultiSpline.getRgbaComponents(v2);\n\n        let helpers = [\n            MultiSpline.getSplineHelpers(cv1[0], cv2[0], o1, i2, s1[0], s2[0]),\n            MultiSpline.getSplineHelpers(cv1[1], cv2[1], o1, i2, s1[1], s2[1]),\n            MultiSpline.getSplineHelpers(cv1[2], cv2[2], o1, i2, s1[2], s2[2]),\n            MultiSpline.getSplineHelpers(cv1[3], cv2[3], o1, i2, s1[3], s2[3])\n        ];\n\n        if (!helpers[0]) {\n            return function (p) {\n                // Linear.\n                if (p === 0) return v1;\n                if (p === 1) return v2;\n\n                return MultiSpline.mergeColors(v2, v1, p);\n            };\n        } else {\n            return function (p) {\n                if (p === 0) return v1;\n                if (p === 1) return v2;\n\n                return MultiSpline.getArgbNumber([\n                    Math.min(255, MultiSpline.calculateSpline(helpers[0], p)),\n                    Math.min(255, MultiSpline.calculateSpline(helpers[1], p)),\n                    Math.min(255, MultiSpline.calculateSpline(helpers[2], p)),\n                    Math.min(255, MultiSpline.calculateSpline(helpers[3], p))\n                ]);\n            };\n        }\n\n    };\n\n    /**\n     * Creates helpers to be used in the spline function.\n     * @param {number} v1\n     *   From value.\n     * @param {number} v2\n     *   To value.\n     * @param {number} o1\n     *   From smoothness (0 = linear, 1 = smooth).\n     * @param {number} s1\n     *   From slope (0 = horizontal, infinite = vertical).\n     * @param {number} i2\n     *   To smoothness.\n     * @param {number} s2\n     *   To slope.\n     * @returns {Number[]}\n     *   The helper values to be supplied to the spline function.\n     *   If the configuration is actually linear, null is returned.\n     */\n    static getSplineHelpers(v1, v2, o1, i2, s1, s2) {\n        if (!o1 && !i2) {\n            // Linear.\n            return null;\n        }\n\n        // Cubic bezier points.\n        // http://cubic-bezier.com/\n        let csx = o1;\n        let csy = v1 + s1 * o1;\n        let cex = 1 - i2;\n        let cey = v2 - s2 * i2;\n\n        let xa = 3 * csx - 3 * cex + 1;\n        let xb = -6 * csx + 3 * cex;\n        let xc = 3 * csx;\n\n        let ya = 3 * csy - 3 * cey + v2 - v1;\n        let yb = 3 * (cey + v1) - 6 * csy;\n        let yc = 3 * (csy - v1);\n        let yd = v1;\n\n        return [xa, xb, xc, ya, yb, yc, yd];\n    };\n\n    /**\n     * Calculates the intermediate spline value based on the specified helpers.\n     * @param {number[]} helpers\n     *   Obtained from getSplineHelpers.\n     * @param {number} p\n     * @return {number}\n     */\n    static calculateSpline(helpers, p) {\n        let xa = helpers[0];\n        let xb = helpers[1];\n        let xc = helpers[2];\n        let ya = helpers[3];\n        let yb = helpers[4];\n        let yc = helpers[5];\n        let yd = helpers[6];\n\n        if (xa === -2 && ya === -2 && xc === 0 && yc === 0) {\n            // Linear.\n            return p;\n        }\n\n        // Find t for p.\n        let t = 0.5, cbx, dx;\n\n        for (let it = 0; it < 20; it++) {\n            // Cubic bezier function: f(t)=t*(t*(t*a+b)+c).\n            cbx = t * (t * (t * xa + xb) + xc);\n\n            dx = p - cbx;\n            if (dx > -1e-8 && dx < 1e-8) {\n                // Solution found!\n                return t * (t * (t * ya + yb) + yc) + yd;\n            }\n\n            // Cubic bezier derivative function: f'(t)=t*(t*(3*a)+2*b)+c\n            let cbxd = t * (t * (3 * xa) + 2 * xb) + xc;\n\n            if (cbxd > 1e-10 && cbxd < 1e-10) {\n                // Problematic. Fall back to binary search method.\n                break;\n            }\n\n            t += dx / cbxd;\n        }\n\n        // Fallback: binary search method. This is more reliable when there are near-0 slopes.\n        let minT = 0;\n        let maxT = 1;\n        for (let it = 0; it < 20; it++) {\n            t = 0.5 * (minT + maxT);\n\n            // Cubic bezier function: f(t)=t*(t*(t*a+b)+c)+d.\n            cbx = t * (t * (t * xa + xb) + xc);\n\n            dx = p - cbx;\n            if (dx > -1e-8 && dx < 1e-8) {\n                // Solution found!\n                return t * (t * (t * ya + yb) + yc) + yd;\n            }\n\n            if (dx < 0) {\n                maxT = t;\n            } else {\n                minT = t;\n            }\n        }\n\n        return t;\n    };\n\n    static mergeColors(c1, c2, p) {\n        let r1 = ((c1 / 65536) | 0) % 256;\n        let g1 = ((c1 / 256) | 0) % 256;\n        let b1 = c1 % 256;\n        let a1 = ((c1 / 16777216) | 0);\n\n        let r2 = ((c2 / 65536) | 0) % 256;\n        let g2 = ((c2 / 256) | 0) % 256;\n        let b2 = c2 % 256;\n        let a2 = ((c2 / 16777216) | 0);\n\n        let r = r1 * p + r2 * (1 - p);\n        let g = g1 * p + g2 * (1 - p);\n        let b = b1 * p + b2 * (1 - p);\n        let a = a1 * p + a2 * (1 - p);\n\n        return Math.round(a) * 16777216 + Math.round(r) * 65536 + Math.round(g) * 256 + Math.round(b);\n    };\n\n    static getArgbNumber(rgba) {\n        rgba[0] = Math.max(0, Math.min(255, rgba[0]));\n        rgba[1] = Math.max(0, Math.min(255, rgba[1]));\n        rgba[2] = Math.max(0, Math.min(255, rgba[2]));\n        rgba[3] = Math.max(0, Math.min(255, rgba[3]));\n        let v = ((rgba[3] | 0) << 24) + ((rgba[0] | 0) << 16) + ((rgba[1] | 0) << 8) + (rgba[2] | 0);\n        if (v < 0) {\n            v = 0xFFFFFFFF + v + 1;\n        }\n        return v;\n    };\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class AnimationActionSettings {\n\n    constructor(animationSettings) {\n\n        this.animationSettings = animationSettings;\n\n        /**\n         * The selector that selects the elements, or the element itself.\n         * @type {string | object}\n         */\n        this._selector = \"\";\n\n        /**\n         * The value items, ordered by progress offset.\n         * @type {MultiSpline}\n         * @private;\n         */\n        this._items = new MultiSpline();\n\n        /**\n         * The affected properties (paths).\n         * @private;\n         */\n        this._props = [];\n\n        /**\n         * Property setters, indexed according to props.\n         * @private;\n         */\n        this._propSetters = [];\n\n        this._resetValue = undefined;\n        this._hasResetValue = false;\n\n        this._hasColorProperty = undefined;\n    }\n\n    getResetValue() {\n        if (this._hasResetValue) {\n            return this._resetValue;\n        } else {\n            return this._items.getValue(0);\n        }\n    }\n\n    apply(element, p, factor) {\n        const elements = this.getAnimatedElements(element);\n\n        let v = this._items.getValue(p);\n\n        if (v === undefined || !elements.length) {\n            return;\n        }\n\n        if (factor !== 1) {\n            // Stop factor.;\n            let sv = this.getResetValue();\n\n            if (Utils.isNumber(v) && Utils.isNumber(sv)) {\n                if (this.hasColorProperty()) {\n                    v = StageUtils.mergeColors(v, sv, factor);\n                } else {\n                    v = StageUtils.mergeNumbers(v, sv, factor);\n                }\n            }\n        }\n\n        // Apply transformation to all components.;\n        const n = this._propSetters.length;\n\n        const m = elements.length;\n        for (let j = 0; j < m; j++) {\n            for (let i = 0; i < n; i++) {\n                this._propSetters[i](elements[j], v);\n            }\n        }\n    }\n    \n    getAnimatedElements(element) {\n        const selector = this._selector;\n        if (typeof selector === 'string') {\n            return element.select(selector);\n        } else {\n            return [selector];\n        }\n    }\n\n    reset(element) {\n        const elements = this.getAnimatedElements(element);\n\n        let v = this.getResetValue();\n\n        if (v === undefined || !elements.length) {\n            return;\n        }\n\n        // Apply transformation to all components.\n        const n = this._propSetters.length;\n\n        const m = elements.length;\n        for (let j = 0; j < m; j++) {\n            for (let i = 0; i < n; i++) {\n                this._propSetters[i](elements[j], v);\n            }\n        }\n    }\n    \n    set selector(v) {\n        this._selector = v;\n    }\n\n    set t(v) {\n        this.selector = v;\n    }\n\n    get resetValue() {\n        return this._resetValue;\n    }\n    \n    set resetValue(v) {\n        this._resetValue = v;\n        this._hasResetValue = (v !== undefined);\n    }\n\n    set rv(v) {\n        this.resetValue = v;\n    }\n\n    set value(v) {\n        this._items.parse(this.hasColorProperty(), v);\n    }\n\n    set v(v) {\n        this.value = v;\n    }\n\n    set properties(v) {\n        if (!Array.isArray(v)) {\n            v = [v];\n        }\n\n        this._props = [];\n\n        v.forEach((prop) => {\n            this._props.push(prop);\n            this._propSetters.push(Element.getSetter(prop));\n        });\n    }\n\n    set property(v) {\n        this._hasColorProperty = undefined;\n        this.properties = v;\n    }\n\n    set p(v) {\n        this.properties = v;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n    hasColorProperty() {\n        if (this._hasColorProperty === undefined) {\n            this._hasColorProperty = this._props.length ? Element.isColorProperty(this._props[0]) : false;\n        }\n        return this._hasColorProperty;\n    }\n}\n\nAnimationActionSettings.prototype.isAnimationActionSettings = true;\n\nimport MultiSpline from \"../tools/MultiSpline.mjs\";\nimport Element from \"../tree/Element.mjs\";\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\nimport Base from \"../tree/Base.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport AnimationActionSettings from \"./AnimationActionSettings.mjs\";\nimport Base from \"../tree/Base.mjs\";\n\nexport default class AnimationSettings {\n    constructor() {\n        /**\n         * @type {AnimationActionSettings[]}\n         */\n        this._actions = [];\n\n        this.delay = 0;\n        this.duration = 1;\n\n        this.repeat = 0;\n        this.repeatOffset = 0;\n        this.repeatDelay = 0;\n\n        this.autostop = false;\n\n        this.stopMethod = AnimationSettings.STOP_METHODS.FADE;\n        this._stopTimingFunction = 'ease';\n        this._stopTimingFunctionImpl = StageUtils.getTimingFunction(this._stopTimingFunction);\n        this.stopDuration = 0;\n        this.stopDelay = 0;\n    }\n\n    get actions() {\n        return this._actions;\n    }\n\n    set actions(v) {\n        this._actions = [];\n        for (let i = 0, n = v.length; i < n; i++) {\n            const e = v[i];\n            if (!e.isAnimationActionSettings) {\n                const aas = new AnimationActionSettings(this);\n                aas.patch(e);\n                this._actions.push(aas);\n            } else {\n                this._actions.push(e);\n            }\n        }\n    }\n\n    /**\n     * Applies the animation to the specified element, for the specified progress between 0 and 1.\n     * @param {Element} element;\n     * @param {number} p;\n     * @param {number} factor;\n     */\n    apply(element, p, factor = 1) {\n        this._actions.forEach(function(action) {\n            action.apply(element, p, factor);\n        });\n    }\n\n    /**\n     * Resets the animation to the reset values.\n     * @param {Element} element;\n     */\n    reset(element) {\n        this._actions.forEach(function(action) {\n            action.reset(element);\n        });\n    }\n\n    get stopTimingFunction() {\n        return this._stopTimingFunction;\n    }\n\n    set stopTimingFunction(v) {\n        this._stopTimingFunction = v;\n        this._stopTimingFunctionImpl = StageUtils.getTimingFunction(v);\n    }\n\n    get stopTimingFunctionImpl() {\n        return this._stopTimingFunctionImpl;\n    }\n\n    patch(settings) {\n        Base.patchObject(this, settings);\n    }\n\n}\n\nAnimationSettings.STOP_METHODS = {\n    FADE: 'fade',\n    REVERSE: 'reverse',\n    FORWARD: 'forward',\n    IMMEDIATE: 'immediate',\n    ONETOTWO: 'onetotwo'\n};\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport EventEmitter from \"../EventEmitter.mjs\";\nimport AnimationSettings from \"./AnimationSettings.mjs\";\n\nexport default class Animation extends EventEmitter {\n\n    constructor(manager, settings, element) {\n        super();\n\n        this.manager = manager;\n\n        this._settings = settings;\n\n        this._element = element;\n\n        this._state = Animation.STATES.IDLE;\n\n        this._p = 0;\n        this._delayLeft = 0;\n        this._repeatsLeft = 0;\n\n        this._stopDelayLeft = 0;\n        this._stopP = 0;\n    }\n\n    start() {\n        if (this._element && this._element.attached) {\n            this._p = 0;\n            this._delayLeft = this.settings.delay;\n            this._repeatsLeft = this.settings.repeat;\n            this._state = Animation.STATES.PLAYING;\n            this.emit('start');\n            this.checkActive();\n        } else {\n            console.warn(\"[Lightning] Element must be attached before starting animation\");\n        }\n    }\n\n    play() {\n        if (this._state === Animation.STATES.PAUSED) {\n            // Continue.;\n            this._state = Animation.STATES.PLAYING;\n            this.checkActive();\n            this.emit('resume');\n        } else if (this._state == Animation.STATES.STOPPING && this.settings.stopMethod == AnimationSettings.STOP_METHODS.REVERSE) {\n            // Continue.;\n            this._state = Animation.STATES.PLAYING;\n            this.emit('stopContinue');\n        } else if (this._state != Animation.STATES.PLAYING && this._state != Animation.STATES.FINISHED) {\n            // Restart.;\n            this.start();\n        }\n    }\n\n    pause() {\n        if (this._state === Animation.STATES.PLAYING) {\n            this._state = Animation.STATES.PAUSED;\n            this.emit('pause');\n        }\n    }\n\n    replay() {\n        if (this._state == Animation.STATES.FINISHED) {\n            this.start();\n        } else {\n            this.play();\n        }\n    }\n\n    skipDelay() {\n        this._delayLeft = 0;\n        this._stopDelayLeft = 0;\n    }\n\n    finish() {\n        if (this._state === Animation.STATES.PLAYING) {\n            this._delayLeft = 0;\n            this._p = 1;\n        } else if (this._state === Animation.STATES.STOPPING) {\n            this._stopDelayLeft = 0;\n            this._p = 0;\n        }\n    }\n\n    stop() {\n        if (this._state === Animation.STATES.STOPPED || this._state === Animation.STATES.IDLE) return;\n\n        this._stopDelayLeft = this.settings.stopDelay || 0;\n\n        if (((this.settings.stopMethod === AnimationSettings.STOP_METHODS.IMMEDIATE) && !this._stopDelayLeft) || this._delayLeft > 0) {\n            // Stop upon next progress.;\n            this._state = Animation.STATES.STOPPING;\n            this.emit('stop');\n        } else {\n            if (this.settings.stopMethod === AnimationSettings.STOP_METHODS.FADE) {\n                this._stopP = 0;\n            }\n\n            this._state = Animation.STATES.STOPPING;\n            this.emit('stop');\n        }\n\n        this.checkActive();\n    }\n\n    stopNow() {\n        if (this._state !== Animation.STATES.STOPPED || this._state !== Animation.STATES.IDLE) {\n            this._state = Animation.STATES.STOPPING;\n            this._p = 0;\n            this.emit('stop');\n            this.reset();\n            this._state = Animation.STATES.STOPPED;\n            this.emit('stopFinish');\n        }\n    }\n\n    isPaused() {\n        return this._state === Animation.STATES.PAUSED;\n    }\n\n    isPlaying() {\n        return this._state === Animation.STATES.PLAYING;\n    }\n\n    isStopping() {\n        return this._state === Animation.STATES.STOPPING;\n    }\n\n    isFinished() {\n        return this._state === Animation.STATES.FINISHED;\n    }\n\n    checkActive() {\n        if (this.isActive()) {\n            this.manager.addActive(this);\n        }\n    }\n\n    isActive() {\n        return (this._state == Animation.STATES.PLAYING || this._state == Animation.STATES.STOPPING) && this._element && this._element.attached;\n    }\n\n    progress(dt) {\n        if (!this._element) return;\n        this._progress(dt);\n        this.apply();\n    }\n\n    _progress(dt) {\n        if (this._state == Animation.STATES.STOPPING) {\n            this._stopProgress(dt);\n            return;\n        }\n\n        if (this._state != Animation.STATES.PLAYING) {\n            return;\n        }\n\n        if (this._delayLeft > 0) {\n            this._delayLeft -= dt;\n\n            if (this._delayLeft < 0) {\n                dt = -this._delayLeft;\n                this._delayLeft = 0;\n\n                this.emit('delayEnd');\n            } else {\n                return;\n            }\n        }\n\n        if (this.settings.duration === 0) {\n            this._p = 1;\n        } else if (this.settings.duration > 0) {\n            this._p += dt / this.settings.duration;\n        }\n        if (this._p >= 1) {\n            // Finished!;\n            if (this.settings.repeat == -1 || this._repeatsLeft > 0) {\n                if (this._repeatsLeft > 0) {\n                    this._repeatsLeft--;\n                }\n                this._p = this.settings.repeatOffset;\n                this.emit('progress', this._p);\n                \n                if (this.settings.repeatDelay) {\n                    this._delayLeft = this.settings.repeatDelay;\n                }\n\n                this.emit('repeat', this._repeatsLeft);\n            } else {\n                this._p = 1;\n                this.emit('progress', this._p);\n                \n                this._state = Animation.STATES.FINISHED;\n                this.emit('finish');\n                if (this.settings.autostop) {\n                    this.stop();\n                }\n            }\n        } else {\n            this.emit('progress', this._p);\n        }\n    }\n    \n    _stopProgress(dt) {\n        let duration = this._getStopDuration();\n\n        if (this._stopDelayLeft > 0) {\n            this._stopDelayLeft -= dt;\n\n            if (this._stopDelayLeft < 0) {\n                dt = -this._stopDelayLeft;\n                this._stopDelayLeft = 0;\n\n                this.emit('stopDelayEnd');\n            } else {\n                return;\n            }\n        }\n        if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.IMMEDIATE) {\n            this._state = Animation.STATES.STOPPED;\n            this.emit('stopFinish');\n        } else if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.REVERSE) {\n            if (duration === 0) {\n                this._p = 0;\n            } else if (duration > 0) {\n                this._p -= dt / duration;\n            }\n\n            if (this._p <= 0) {\n                this._p = 0;\n                this._state = Animation.STATES.STOPPED;\n                this.emit('stopFinish');\n            }\n        } else if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.FADE) {\n            this._progressStopTransition(dt);\n            if (this._stopP >= 1) {\n                this._p = 0;\n                this._state = Animation.STATES.STOPPED;\n                this.emit('stopFinish');\n            }\n        } else if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.ONETOTWO) {\n            if (this._p < 2) {\n                if (duration === 0) {\n                    this._p = 2;\n                } else if (duration > 0) {\n                    if (this._p < 1) {\n                        this._p += dt / this.settings.duration;\n                    } else {\n                        this._p += dt / duration;\n                    }\n                }\n                if (this._p >= 2) {\n                    this._p = 2;\n                    this._state = Animation.STATES.STOPPED;\n                    this.emit('stopFinish');\n                } else {\n                    this.emit('progress', this._p);\n                }\n            }\n        } else if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.FORWARD) {\n            if (this._p < 1) {\n                if (this.settings.duration == 0) {\n                    this._p = 1;\n                } else {\n                    this._p += dt / this.settings.duration;\n                }\n                if (this._p >= 1) {\n                    if (this.settings.stopMethod == AnimationSettings.STOP_METHODS.FORWARD) {\n                        this._p = 1;\n                        this._state = Animation.STATES.STOPPED;\n                        this.emit('stopFinish');\n                    } else {\n                        if (this._repeatsLeft > 0) {\n                            this._repeatsLeft--;\n                            this._p = 0;\n                            this.emit('repeat', this._repeatsLeft);\n                        } else {\n                            this._p = 1;\n                            this._state = Animation.STATES.STOPPED;\n                            this.emit('stopFinish');\n                        }\n                    }\n                } else {\n                    this.emit('progress', this._p);\n                }\n            }\n        }\n        \n    }\n    \n    _progressStopTransition(dt) {\n        if (this._stopP < 1) {\n            if (this._stopDelayLeft > 0) {\n                this._stopDelayLeft -= dt;\n\n                if (this._stopDelayLeft < 0) {\n                    dt = -this._stopDelayLeft;\n                    this._stopDelayLeft = 0;\n\n                    this.emit('delayEnd');\n                } else {\n                    return;\n                }\n            }\n            \n            const duration = this._getStopDuration();\n\n            if (duration == 0) {\n                this._stopP = 1;\n            } else {\n                this._stopP += dt / duration;\n            }\n            if (this._stopP >= 1) {\n                // Finished!;\n                this._stopP = 1;\n            }\n        }\n    }\n\n    _getStopDuration() {\n        return this.settings.stopDuration || this.settings.duration;\n    }\n\n    apply() {\n        if (this._state === Animation.STATES.STOPPED) {\n            this.reset();\n        } else {\n            let factor = 1;\n            if (this._state === Animation.STATES.STOPPING && this.settings.stopMethod === AnimationSettings.STOP_METHODS.FADE) {\n                factor = (1 - this.settings.stopTimingFunctionImpl(this._stopP));\n            }\n            this._settings.apply(this._element, this._p, factor);\n        }\n    }\n\n    reset() {\n        this._settings.reset(this._element);\n    }\n\n    get state() {\n        return this._state;\n    }\n\n    get p() {\n        return this._p;\n    }\n\n    get delayLeft() {\n        return this._delayLeft;\n    }\n\n    get element() {\n        return this._element;\n    }\n\n    get frame() {\n        return Math.round(this._p * this._settings.duration * 60);\n    }\n\n    get settings() {\n        return this._settings;\n    }\n\n}\n\nAnimation.STATES = {\n    IDLE: 0,\n    PLAYING: 1,\n    STOPPING: 2,\n    STOPPED: 3,\n    FINISHED: 4,\n    PAUSED: 5\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport default class AnimationManager {\n\n    constructor(stage) {\n        this.stage = stage;\n\n        this.stage.on('frameStart', () => this.progress());\n\n        /**\n         * All running animations on attached subjects.\n         * @type {Set<Animation>}\n         */\n        this.active = new Set();\n    }\n\n    progress() {\n        if (this.active.size) {\n            let dt = this.stage.dt;\n\n            let filter = false;\n            this.active.forEach(function(a) {\n                if (a.isActive()) {\n                    a.progress(dt);\n                } else {\n                    filter = true;\n                }\n            });\n\n            if (filter) {\n                this.active = new Set([...this.active].filter(t => t.isActive()));\n            }\n        }\n    }\n\n    createAnimation(element, settings) {\n        if (Utils.isObjectLiteral(settings)) {\n            // Convert plain object to proper settings object.\n            settings = this.createSettings(settings);\n        }\n\n        return new Animation(\n            this,\n            settings,\n            element\n        );\n    }\n\n    createSettings(settings) {\n        const animationSettings = new AnimationSettings();\n        Base.patchObject(animationSettings, settings);\n        return animationSettings;\n    }\n\n    addActive(transition) {\n        this.active.add(transition);\n    }\n}\n\nimport Base from \"../tree/Base.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\nimport AnimationSettings from \"./AnimationSettings.mjs\";\nimport Animation from \"./Animation.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class RectangleTexture extends Texture {\n\n    _getLookupId() {\n        return '__whitepix';\n    }\n\n    _getSourceLoader() {\n        return function(cb) {\n            var whitePixel = new Uint8Array([255, 255, 255, 255]);\n            cb(null, {source: whitePixel, w: 1, h: 1, permanent: true});\n        }\n    }\n\n    isAutosizeTexture() {\n        return false;\n    }\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Application render tree.\n */\n\nimport EventEmitter from \"../EventEmitter.mjs\";\nimport Utils from \"./Utils.mjs\";\nimport WebGLRenderer from \"../renderer/webgl/WebGLRenderer.mjs\";\nimport C2dRenderer from \"../renderer/c2d/C2dRenderer.mjs\";\nimport SparkRenderer from \"../renderer/spark/SparkRenderer.mjs\";\nimport PlatformLoader from \"../platforms/PlatformLoader.mjs\";\nimport WebGLStateManager from \"../tools/WebGLStateManager.mjs\";\nimport Shader from \"./Shader.mjs\";\n\nexport default class Stage extends EventEmitter {\n\n    constructor(options = {}) {\n        super();\n        this._setOptions(options);\n\n        this._usedMemory = 0;\n        this._lastGcFrame = 0;\n\n        // attempt to track VRAM usage more accurately by accounting for different color channels\n        this._usedVramAlpha = 0;\n        this._usedVramNonAlpha = 0;\n\n        const platformType = Stage.platform ? Stage.platform : PlatformLoader.load(options);\n        this.platform = new platformType();\n\n        if (this.platform.init) {\n            this.platform.init(this);\n        }\n\n        this.gl = null;\n        this.c2d = null;\n\n        const context = this.getOption('context');\n        if (context) {\n            if (context.useProgram) {\n                this.gl = context;\n            } else {\n                this.c2d = context;\n            }\n        } else {\n            if (Utils.isWeb && (!Stage.isWebglSupported() || this.getOption('canvas2d'))) {\n                this.c2d = this.platform.createCanvasContext(this.getOption('w'), this.getOption('h'));\n            } else {\n                this.gl = this.platform.createWebGLContext(this.getOption('w'), this.getOption('h'));\n            }\n        }\n\n        if (this.gl) {\n            // Wrap in WebGLStateManager.\n            // This prevents unnecessary double WebGL commands from being executed, and allows context switching.\n            // Context switching is necessary when reusing the same context for Three.js.\n            // Note that the user must make sure that the WebGL context is untouched before creating the application,\n            //  when manually passing over a canvas or context in the options.\n            WebGLStateManager.enable(this.gl, \"lightning\")\n        }\n\n        this._mode = this.gl ? 0 : 1;\n\n        // Override width and height.\n        if (this.getCanvas()) {\n            if (this.getOption('devicePixelRatio') !== 1) {\n                const ratio = this.getOption('devicePixelRatio');\n                // set correct display sie\n                this.getCanvas().style.width = this._options['w'] / ratio  + 'px';\n                this.getCanvas().style.height = this._options['h'] / ratio + 'px';\n            }\n\n            // set display buffer size\n            this._options.w = this.getCanvas().width;\n            this._options.h = this.getCanvas().height;\n        }\n\n        if (this._mode === 0) {\n            if (Utils.isSpark) {\n                this._renderer = new SparkRenderer(this);\n            } else {\n                this._renderer = new WebGLRenderer(this);\n            }\n        } else {\n            this._renderer = new C2dRenderer(this);\n        }\n\n        this.setClearColor(this.getOption('clearColor'));\n\n        this.frameCounter = 0;\n\n        this.transitions = new TransitionManager(this);\n        this.animations = new AnimationManager(this);\n\n        this.textureManager = new TextureManager(this);\n        this.textureThrottler = new TextureThrottler(this);\n\n        this.startTime = 0;\n        this.currentTime = 0;\n        this.dt = 0;\n\n        // Preload rectangle texture, so that we can skip some border checks for loading textures.\n        this.rectangleTexture = new RectangleTexture(this);\n        this.rectangleTexture.load();\n\n        // Never clean up because we use it all the time.\n        this.rectangleTexture.source.permanent = true;\n\n        this.ctx = new CoreContext(this);\n\n        this._updateSourceTextures = new Set();\n    }\n\n    get renderer() {\n        return this._renderer;\n    }\n\n    static isWebglSupported() {\n        if (Utils.isNode) {\n            return true;\n        }\n\n        try {\n            return !!window.WebGLRenderingContext;\n        } catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * Returns the rendering mode.\n     * @returns {number}\n     *  0: WebGL\n     *  1: Canvas2d\n     */\n    get mode() {\n        return this._mode;\n    }\n\n    isWebgl() {\n        return this.mode === 0;\n    }\n\n    isC2d() {\n        return this.mode === 1;\n    }\n\n    getOption(name) {\n        return this._options[name];\n    }\n\n    _setOptions(o) {\n        this._options = {};\n\n        let opt = (name, def) => {\n            let value = o[name];\n\n            if (value === undefined) {\n                this._options[name] = def;\n            } else {\n                this._options[name] = value;\n            }\n        }\n\n        opt('canvas', null);\n        opt('context', null);\n        opt('w', 1920);\n        opt('h', 1080);\n        opt('srcBasePath', null);\n        opt('memoryPressure', 24e6);\n        opt('bufferMemory', 2e6);\n        opt('textRenderIssueMargin', 0);\n        opt('fontSharp', { precision: 0.6666666667, fontSize: 24 })\n        opt('clearColor', [0, 0, 0, 0]);\n        opt('defaultFontFace', 'sans-serif');\n        opt('fixedDt', 0);\n        opt('useImageWorker', true);\n        opt('autostart', true);\n        opt('precision', 1);\n        opt('canvas2d', false);\n        opt('platform', null);\n        opt('readPixelsBeforeDraw', false);\n        opt('devicePixelRatio', 1)       \n        opt('readPixelsAfterDraw', false);\n        opt('readPixelsAfterDrawThreshold', 0);\n        opt('debugFrame', false);\n        opt('forceTxCanvasSource', false);\n        opt('pauseRafLoopOnIdle', false);\n\n        if (o['devicePixelRatio'] != null && o['devicePixelRatio'] !== 1) {\n            this._options['precision'] *= o['devicePixelRatio']\n            this._options['w'] *= o['devicePixelRatio']\n            this._options['h'] *= o['devicePixelRatio']\n        }\n    }\n\n    setApplication(app) {\n        this.application = app;\n    }\n\n    init() {\n\n        if (this.application.getOption('debug') && this.platform._imageWorker) {\n            console.log('[Lightning] Using image worker!');\n        }\n\n        if (this.application.getOption('debug') && this.c2d) {\n            console.log('[Lightning] Using canvas2d renderer');\n        }\n\n        this.application.setAsRoot();\n        if (this.getOption('autostart')) {\n            this.platform.startLoop();\n        }\n    }\n\n    destroy() {\n        this.platform.stopLoop();\n        this.platform.destroy();\n        this.ctx.destroy();\n        this.textureManager.destroy();\n        this._renderer.destroy();\n\n        // clear last rendered frame\n        if (this.gl) {\n            this.gl.clearColor(0.0, 0.0, 0.0, 0.0);\n            this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n        } else if (this.c2d) {\n            this.c2d.clearRect(\n                0, 0, this.c2d.canvas.width, this.c2d.canvas.height\n            );\n        }\n\n        this.gl = null;\n        this.c2d = null;\n        this.ctx = null;\n        this._options = null;\n        this.platform = null;\n        this.textureManager = null;\n        this._renderer = null;\n\n        delete this.gl;\n        delete this.c2d;\n        delete this.ctx;\n        delete this._options;\n        delete this.platform;\n        delete this.textureManager;\n        delete this._renderer;\n    }\n\n    stop() {\n        this.platform.stopLoop();\n    }\n\n    resume() {\n        this.platform.startLoop();\n    }\n\n    get root() {\n        return this.application;\n    }\n\n    getCanvas() {\n        return this._mode ? this.c2d.canvas : this.gl.canvas;\n    }\n\n    getRenderPrecision() {\n        return this._options.precision;\n    }\n\n    /**\n     * Marks a texture for updating it's source upon the next drawFrame.\n     * @param texture\n     */\n    addUpdateSourceTexture(texture) {\n        if (this._updatingFrame) {\n            // When called from the upload loop, we must immediately load the texture in order to avoid a 'flash'.\n            texture._performUpdateSource();\n        } else {\n            this._updateSourceTextures.add(texture);\n        }\n    }\n\n    removeUpdateSourceTexture(texture) {\n        if (this._updateSourceTextures) {\n            this._updateSourceTextures.delete(texture);\n        }\n    }\n\n    hasUpdateSourceTexture(texture) {\n        return (this._updateSourceTextures && this._updateSourceTextures.has(texture));\n    }\n\n\n    _performUpdateSource() {\n        if (this._updateSourceTextures.size) {\n            this._updateSourceTextures.forEach(texture => {\n                texture._performUpdateSource();\n            });\n            this._updateSourceTextures = new Set();\n        }\n    }\n\n    _calculateDt() {\n        this.startTime = this.currentTime;\n        this.currentTime = this.platform.getHrTime();\n\n        if (this._options.fixedDt) {\n            this.dt = this._options.fixedDt;\n        } else {\n            this.dt = (!this.startTime) ? .02 : .001 * (this.currentTime - this.startTime);\n        }\n    }\n\n    updateFrame() {\n        this._calculateDt();\n        this.emit('frameStart');\n        this._performUpdateSource();\n        this.emit('update');\n    }\n\n    idleFrame() {\n        this.textureThrottler.processSome();\n        this.emit('frameEnd');\n        this.frameCounter++;\n    }\n\n    onIdle() {\n        this.emit('idle');\n    }\n\n    renderFrame() {\n        const changes = this.ctx.hasRenderUpdates();\n\n        // Update may cause textures to be loaded in sync, so by processing them here we may be able to show them\n        // during the current frame already.\n        this.textureThrottler.processSome();\n\n        if (changes) {\n            this._updatingFrame = true;\n            this.ctx.update();\n            this.ctx.render();\n            this._updatingFrame = false;\n        }\n\n        this.platform.nextFrame(changes);\n\n        this.emit('frameEnd');\n\n        this.frameCounter++;\n    }\n\n    isUpdatingFrame() {\n        return this._updatingFrame;\n    }\n\n    drawFrame() {\n        // Maintain original functionality of `drawFrame()` while retaining the\n        // RAF mitigration feature from: https://github.com/rdkcentral/Lightning/pull/402\n        // The full functionality of this method is relied directly by our own unit tests and\n        // the unit tests of third party users\n        this.updateFrame();\n        this.renderFrame();\n    }\n\n    forceRenderUpdate() {\n        // Enforce re-rendering.\n        if (this.root) {\n            this.root.core._parent.setHasRenderUpdates(1);\n        }\n    }\n\n    setClearColor(clearColor) {\n        this.forceRenderUpdate();\n        if (clearColor === null) {\n            // Do not clear.\n            this._clearColor = null;\n        } else if (Array.isArray(clearColor)) {\n            this._clearColor = clearColor;\n        } else {\n            this._clearColor = StageUtils.getRgbaComponentsNormalized(clearColor);\n        }\n    }\n\n    getClearColor() {\n        return this._clearColor;\n    }\n\n    createElement(settings) {\n        if (settings) {\n            return this.element(settings);\n        } else {\n            return new Element(this);\n        }\n    }\n\n    createShader(settings) {\n        return Shader.create(this, settings);\n    }\n\n    element(settings) {\n        if (settings.isElement) return settings;\n\n        let element;\n        if (settings.type) {\n            element = new settings.type(this);\n        } else {\n            element = new Element(this);\n        }\n\n        element.patch(settings);\n\n        return element;\n    }\n\n    c(settings) {\n        return this.element(settings);\n    }\n\n    get w() {\n        return this._options.w;\n    }\n\n    get h() {\n        return this._options.h;\n    }\n\n    get coordsWidth() {\n        return this.w / this._options.precision;\n    }\n\n    get coordsHeight() {\n        return this.h / this._options.precision;\n    }\n\n    addMemoryUsage(delta) {\n        this._usedMemory += delta;\n        if (delta > 0 && this._lastGcFrame !== this.frameCounter) {\n            if (this._usedMemory > this.getOption('memoryPressure')) {\n                this.gc(false);\n                if (this._usedMemory > this.getOption('memoryPressure') - 2e6) {\n                    // Too few released. Aggressive cleanup.\n                    this.gc(true);\n                }\n            }\n        }\n    }\n\n    get usedMemory() {\n        return this._usedMemory;\n    }\n\n    addVramUsage(delta, alpha) {\n        if (alpha) {\n            this._usedVramAlpha += delta;\n        }\n        else {\n            this._usedVramNonAlpha += delta;\n        }\n    }\n\n    get usedVramAlpha() {\n        return this._usedVramAlpha;\n    }\n\n    get usedVramNonAlpha() {\n        return this._usedVramNonAlpha;\n    }\n\n    get usedVram() {\n        return this._usedVramAlpha + this._usedVramNonAlpha;\n    }\n\n    gc(aggressive) {\n        if (this._lastGcFrame !== this.frameCounter) {\n            this._lastGcFrame = this.frameCounter;\n            const memoryUsageBefore = this._usedMemory;\n            this.gcTextureMemory(aggressive);\n            this.gcRenderTextureMemory(aggressive);\n            this.renderer.gc(aggressive);\n\n            if (this.application.getOption('debug')) {\n                console.log(`[Lightning] GC${aggressive ? \"[aggressive]\" : \"\"}! Frame ${this._lastGcFrame} Freed ${((memoryUsageBefore - this._usedMemory) / 1e6).toFixed(2)}MP from GPU memory. Remaining: ${(this._usedMemory / 1e6).toFixed(2)}MP`);\n                const other = this._usedMemory - this.textureManager.usedMemory - this.ctx.usedMemory;\n                console.log(`[Lightning] Textures: ${(this.textureManager.usedMemory / 1e6).toFixed(2)}MP, Render Textures: ${(this.ctx.usedMemory / 1e6).toFixed(2)}MP, Renderer caches: ${(other / 1e6).toFixed(2)}MP`);\n            }\n        }\n    }\n\n    gcTextureMemory(aggressive = false) {\n        if (aggressive && this.ctx.root.visible) {\n            // Make sure that ALL textures are cleaned;\n            this.ctx.root.visible = false;\n            this.textureManager.gc();\n            this.ctx.root.visible = true;\n        } else {\n            this.textureManager.gc();\n        }\n    }\n\n    gcRenderTextureMemory(aggressive = false) {\n        if (aggressive && this.root.visible) {\n            // Make sure that ALL render textures are cleaned;\n            this.root.visible = false;\n            this.ctx.freeUnusedRenderTextures(0);\n            this.root.visible = true;\n        } else {\n            this.ctx.freeUnusedRenderTextures(0);\n        }\n    }\n\n    getDrawingCanvas() {\n        return this.platform.getDrawingCanvas();\n    }\n\n    update() {\n        this.ctx.update()\n    }\n\n    addServiceProvider(serviceprovider) {\n        if (Utils.isSpark) {\n            this.platform.addServiceProvider(serviceprovider);\n        }\n    }\n\n    getChildrenByPosition(x, y) {\n        const children = [];\n        this.root.core.update();\n        this.root.core.collectAtCoord(x, y, children);\n\n        return children;\n    }\n}\n\nimport Element from \"./Element.mjs\";\nimport StageUtils from \"./StageUtils.mjs\";\nimport TextureManager from \"./TextureManager.mjs\";\nimport TextureThrottler from \"./TextureThrottler.mjs\";\nimport CoreContext from \"./core/CoreContext.mjs\";\nimport TransitionManager from \"../animation/TransitionManager.mjs\";\nimport AnimationManager from \"../animation/AnimationManager.mjs\";\nimport RectangleTexture from \"../textures/RectangleTexture.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"./Component.mjs\";\nimport Utils from \"../tree/Utils.mjs\";\n\nexport default class Application extends Component {\n\n    constructor(options = {}, properties) {\n        // Save options temporarily to avoid having to pass it through the constructor.\n        Application._temp_options = options;\n\n        // Booting flag is used to postpone updateFocusSettings;\n        Application.booting = true;\n        const stage = new Stage(options.stage);\n        super(stage, properties);\n        Application.booting = false;\n\n        this.__updateFocusCounter = 0;\n        this.__keypressTimers = new Map();\n        this.__hoveredChild = null;\n\n        // We must construct while the application is not yet attached.\n        // That's why we 'init' the stage later (which actually emits the attach event).\n        this.stage.init();\n\n        // Initially, the focus settings are updated after both the stage and application are constructed.\n        this.updateFocusSettings();\n\n        this.__keymap = this.getOption('keys');\n\n        if (this.__keymap) {\n            this.stage.platform.registerKeydownHandler((e) => {\n                this._receiveKeydown(e);\n            });\n\n            this.stage.platform.registerKeyupHandler((e) => {\n                this._receiveKeyup(e);\n            });\n        }\n\n        if (this.getOption(\"enablePointer\")) {\n            this.stage.platform.registerClickHandler((e) => {\n                this._receiveClick(e);\n            });\n\n            this.stage.platform.registerHoverHandler((e) => {\n                this._receiveHover(e);\n            });\n\n            this.stage.platform.registerScrollWheelHandler((e) => {\n                this._recieveScrollWheel(e);\n            });\n\n            this.cursor = 'default';\n        }\n    }\n\n    getOption(name) {\n        return this.__options[name];\n    }\n\n    _setOptions(o) {\n        this.__options = {};\n\n        let opt = (name, def) => {\n            let value = o[name];\n\n            if (value === undefined) {\n                this.__options[name] = def;\n            } else {\n                this.__options[name] = value;\n            }\n        }\n\n        opt('debug', false);\n        opt('keys', {\n            38: \"Up\",\n            40: \"Down\",\n            37: \"Left\",\n            39: \"Right\",\n            13: \"Enter\",\n            8: \"Back\",\n            27: \"Exit\"\n        });\n        opt('enablePointer', false);\n    }\n\n    __construct() {\n        this.stage.setApplication(this);\n\n        this._setOptions(Application._temp_options);\n        delete Application._temp_options;\n\n        super.__construct();\n    }\n\n    __init() {\n        super.__init();\n        this.__updateFocus();\n    }\n\n    updateFocusPath() {\n        this.__updateFocus();\n    }\n\n    __updateFocus() {\n        const notOverridden = this.__updateFocusRec();\n\n        if (!Application.booting && notOverridden) {\n            this.updateFocusSettings();\n        }\n    }\n\n    __updateFocusRec() {\n        const updateFocusId = ++this.__updateFocusCounter;\n        this.__updateFocusId = updateFocusId;\n\n        const newFocusPath = this.__getFocusPath();\n        const newFocusedComponent = newFocusPath[newFocusPath.length - 1];\n        const prevFocusedComponent = this._focusPath ? this._focusPath[this._focusPath.length - 1] : undefined;\n\n        if (!prevFocusedComponent) {\n            // Focus events.\n            this._focusPath = [];\n            for (let i = 0, n = newFocusPath.length; i < n; i++) {\n                this._focusPath.push(newFocusPath[i]);\n                this._focusPath[i]._focus(newFocusedComponent, undefined);\n                const focusOverridden = (this.__updateFocusId !== updateFocusId);\n                if (focusOverridden) {\n                    return false;\n                }\n            }\n            return true;\n        } else {\n            let m = Math.min(this._focusPath.length, newFocusPath.length);\n            let index;\n            for (index = 0; index < m; index++) {\n                if (this._focusPath[index] !== newFocusPath[index]) {\n                    break;\n                }\n            }\n\n            if (this._focusPath.length !== newFocusPath.length || index !== newFocusPath.length) {\n\n                if (this.getOption('debug')) {\n                    console.log('[Lightning] Focus changed: ' + newFocusedComponent.getLocationString());\n                }\n\n                // Unfocus events.\n                for (let i = this._focusPath.length - 1; i >= index; i--) {\n                    const unfocusedElement = this._focusPath.pop();\n                    unfocusedElement._unfocus(newFocusedComponent, prevFocusedComponent);\n                    const focusOverridden = (this.__updateFocusId !== updateFocusId);\n                    if (focusOverridden) {\n                        return false;\n                    }\n                }\n\n                // Focus events.\n                for (let i = index, n = newFocusPath.length; i < n; i++) {\n                    this._focusPath.push(newFocusPath[i]);\n                    this._focusPath[i]._focus(newFocusedComponent, prevFocusedComponent);\n                    const focusOverridden = (this.__updateFocusId !== updateFocusId);\n                    if (focusOverridden) {\n                        return false;\n                    }\n                }\n\n                // Focus changed events.\n                for (let i = 0; i < index; i++) {\n                    this._focusPath[i]._focusChange(newFocusedComponent, prevFocusedComponent);\n                }\n            }\n        }\n\n        return true;\n    }\n\n    updateFocusSettings() {\n        const focusedComponent = this._focusPath[this._focusPath.length - 1];\n\n        // Get focus settings. These can be used for dynamic application-wide settings that depend on the\n        // focus directly (such as the application background).\n        const focusSettings = {};\n        const defaultSetFocusSettings = Component.prototype._setFocusSettings;\n        for (let i = 0, n = this._focusPath.length; i < n; i++) {\n            if (this._focusPath[i]._setFocusSettings !== defaultSetFocusSettings) {\n                this._focusPath[i]._setFocusSettings(focusSettings);\n            }\n        }\n\n        const defaultHandleFocusSettings = Component.prototype._handleFocusSettings;\n        for (let i = 0, n = this._focusPath.length; i < n; i++) {\n            if (this._focusPath[i]._handleFocusSettings !== defaultHandleFocusSettings) {\n                this._focusPath[i]._handleFocusSettings(focusSettings, this.__prevFocusSettings, focusedComponent);\n            }\n        }\n\n        this.__prevFocusSettings = focusSettings;\n    }\n\n    _handleFocusSettings(settings, prevSettings, focused, prevFocused) {\n        // Override to handle focus-based settings.\n    }\n\n    __getFocusPath() {\n        const path = [this];\n        let current = this;\n        do {\n            const nextFocus = current._getFocused();\n            if (!nextFocus || (nextFocus === current)) {\n                // Found!;\n                break;\n            }\n\n\n            let ptr = nextFocus.cparent;\n            if (ptr === current) {\n                path.push(nextFocus);\n            } else {\n                // Not an immediate child: include full path to descendant.\n                const newParts = [nextFocus];\n                do {\n                    if (!ptr) {\n                        current._throwError(\"Return value for _getFocused must be an attached descendant component but its '\" + nextFocus.getLocationString() + \"'\");\n                    }\n                    newParts.push(ptr);\n                    ptr = ptr.cparent;\n                } while (ptr !== current);\n\n                // Add them reversed.\n                for (let i = 0, n = newParts.length; i < n; i++) {\n                    path.push(newParts[n - i - 1]);\n                }\n            }\n\n            current = nextFocus;\n        } while (true);\n\n        return path;\n    }\n\n    get focusPath() {\n        return this._focusPath;\n    }\n\n    /**\n     * Injects an event in the state machines, top-down from application to focused component.\n     */\n    focusTopDownEvent(events, ...args) {\n        const path = this.focusPath;\n        const n = path.length;\n\n        // Multiple events.\n        for (let i = 0; i < n; i++) {\n            const event = path[i]._getMostSpecificHandledMember(events);\n            if (event !== undefined) {\n                const returnValue = path[i][event](...args);\n                if (returnValue !== false) {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Injects an event in the state machines, bottom-up from focused component to application.\n     */\n    focusBottomUpEvent(events, ...args) {\n        const path = this.focusPath;\n        const n = path.length;\n\n        // Multiple events.\n        for (let i = n - 1; i >= 0; i--) {\n            const event = path[i]._getMostSpecificHandledMember(events);\n            if (event !== undefined) {\n                const returnValue = path[i][event](...args);\n                if (returnValue !== false) {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }\n\n    _receiveKeydown(e) {\n        const obj = e;\n        const key = this.__keymap[e.keyCode];\n        const path = this.focusPath;\n\n        let keys;\n        if (key) {\n            keys = Array.isArray(key) ? key : [key];\n        }\n\n        if (keys) {\n            for (let i = 0, n = keys.length; i < n; i++) {\n                const hasTimer = this.__keypressTimers.has(keys[i]);\n                // prevent event from getting fired when the timeout is still active\n                if (path[path.length - 1].longpress && hasTimer) {\n                    return;\n                }\n\n                if (!this.stage.application.focusTopDownEvent([`_capture${keys[i]}`, \"_captureKey\"], obj)) {\n                    this.stage.application.focusBottomUpEvent([`_handle${keys[i]}`, \"_handleKey\"], obj);\n                }\n            }\n        } else {\n            if (!this.stage.application.focusTopDownEvent([\"_captureKey\"], obj)) {\n                this.stage.application.focusBottomUpEvent([\"_handleKey\"], obj);\n            }\n        }\n\n        this.updateFocusPath();\n\n        const consumer = path[path.length - 1];\n\n        if (keys && consumer.longpress) {\n            for (let i = 0, n = keys.length; i < n; i++) {\n                this._startLongpressTimer(keys[i], consumer);\n            }\n        }\n    }\n\n    /**\n     * Keyup listener\n     * To take away some confusion we add `Release` to the event to prevent ending up with method names like:\n     *  _handleLeftUp / _handleUpUp / _handleEnterUp etc\n     *\n     * @param e\n     * @private\n     */\n    _receiveKeyup(e) {\n        const obj = e;\n        const key = this.__keymap[e.keyCode];\n\n        let keys;\n        if (key) {\n            keys = Array.isArray(key) ? key : [key];\n        }\n\n        if (keys) {\n            for (let i = 0, n = keys.length; i < n; i++) {\n                if (!this.stage.application.focusTopDownEvent([`_capture${keys[i]}Release`, \"_captureKeyRelease\"], obj)) {\n                    this.stage.application.focusBottomUpEvent([`_handle${keys[i]}Release`, \"_handleKeyRelease\"], obj);\n                }\n            }\n        } else {\n            if (!this.stage.application.focusTopDownEvent([\"_captureKeyRelease\"], obj)) {\n                this.stage.application.focusBottomUpEvent([\"_handleKeyRelease\"], obj);\n            }\n        }\n\n        this.updateFocusPath();\n\n        if (keys) {\n            for (let i = 0, n = keys.length; i < n; i++) {\n                if (this.__keypressTimers.has(keys[i])) {\n                    // keyup has fired before end of timeout so we clear it\n                    clearTimeout(this.__keypressTimers.get(keys[i]));\n                    // delete so we can register it again\n                    this.__keypressTimers.delete(keys[i]);\n                }\n            }\n        }\n    }\n\n    /**\n     * Registers and starts a timer for the pressed key. Timer will be cleared when the key is released\n     * before the timer goes off.\n     *\n     * If key is not release (keyup) the longpress handler will be fired.\n     * Configuration can be via the Components template:\n     *\n     * static _template() {\n     *     return {\n     *         w:100, h:100,\n     *         longpress:{up:700, down:500}\n     *     }\n     * }     *\n     * // this will get called when up has been pressed for 700ms\n     * _handleUpLong() {\n     *\n     * }\n     *\n     * @param key\n     * @param element\n     * @private\n     */\n    _startLongpressTimer(key, element) {\n        const config = element.longpress;\n        const lookup = key.toLowerCase();\n\n        if (config[lookup]) {\n            const timeout = config[lookup];\n            if (!Utils.isNumber(timeout)) {\n                element._throwError(\"config value for longpress must be a number\");\n            } else {\n                this.__keypressTimers.set(key, setTimeout(() => {\n                    if (!this.stage.application.focusTopDownEvent([`_capture${key}Long`, \"_captureKey\"], {})) {\n                        this.stage.application.focusBottomUpEvent([`_handle${key}Long`, \"_handleKey\"], {});\n                    }\n\n                    this.__keypressTimers.delete(key);\n                }, timeout || 500 /* prevent 0ms */));\n            }\n        }\n        return;\n    }\n\n    _recieveScrollWheel(e) {\n        const obj = e;\n        const { clientX, clientY } = obj;\n\n        if (clientX <= this.stage.w && clientY <= this.stage.h) {\n            if (!this.fireTopDownScrollWheelHandler(\"_captureScroll\", obj)) {\n                this.fireBottomUpScrollWheelHandler(\"_handleScroll\", obj);\n            }\n        }\n    }\n\n    fireTopDownScrollWheelHandler(event, obj) {\n        let children = this.stage.application.children;\n        let affected = this._findChildren([], children).reverse();\n        let n = affected.length;\n\n        while (n--) {\n            const child = affected[n];\n            if (child && child[event]) {\n                child._captureScroll(obj);\n                return true;\n            }\n        }\n        return false;\n    }\n\n    fireBottomUpScrollWheelHandler(event, obj) {\n        const { clientX, clientY } = obj;\n        const target = this._getTargetChild(clientX, clientY);\n        let child = target;\n\n        // Search tree bottom up for a handler\n        while (child !== null) {\n            if (child && child[event]) {\n                child._handleScroll(obj);\n                return true;\n            }\n            child = child.parent;\n        }\n        return false;\n    }\n\n    _receiveClick(e) {\n        const obj = e;\n        const { clientX, clientY } = obj;\n\n        if (clientX <= this.stage.w && clientY <= this.stage.h) {\n            this.stage.application.fireBottomUpClickHandler(obj);\n        }\n    }\n\n    fireBottomUpClickHandler(obj) {\n        const { clientX, clientY } = obj;\n        const target = this._getTargetChild(clientX, clientY);\n        const precision = this.stage.getRenderPrecision() / this.stage.getOption('devicePixelRatio');\n        let child = target;\n\n        // Search tree bottom up for a handler\n        while (child !== null) {\n            if (child && child[\"_handleClick\"]) {\n                const { px, py } = child.core._worldContext;\n                const cx = px * precision;\n                const cy = py * precision;\n\n                const localCoords = {\n                    x: clientX - cx,\n                    y: clientY - cy\n                }\n\n                const returnValue = child._handleClick(target, localCoords);\n                if (returnValue !== false) {\n                    break;\n                }\n            }\n            child = child.parent;\n        }\n    }\n\n    _receiveHover(e) {\n        const obj = e;\n        const { clientX, clientY } = obj;\n\n        if (clientX <= this.stage.w && clientY <= this.stage.h) {\n            this.stage.application.fireBottomUpHoverHandler(obj);\n        }\n    }\n\n    fireBottomUpHoverHandler(obj) {\n        const { clientX, clientY } = obj;\n        const target = this._getTargetChild(clientX, clientY);\n\n        // Only fire handlers when pointer target changes\n        if (target !== this.__hoveredChild) {\n\n            let hoveredBranch = new Set();\n            let newHoveredBranch = new Set();\n\n            if (target) {\n                newHoveredBranch = new Set(target.getAncestors());\n            }\n\n            if (this.__hoveredChild) {\n                hoveredBranch = new Set(this.__hoveredChild.getAncestors());\n                for (const elem of [...hoveredBranch].filter((e) => !newHoveredBranch.has(e))) {\n                    const c = Component.getComponent(elem);\n                    if (c[\"_handleUnhover\"]) {\n                        c._handleUnhover(elem);\n                    }\n                    if (elem.parent && elem.parent.cursor) {\n                        this.stage.getCanvas().style.cursor = elem.parent.cursor;\n                    }\n                }\n            }\n\n            this.__hoveredChild = target;\n\n            const diffBranch = [...newHoveredBranch].filter((e) => !hoveredBranch.has(e))\n            for (const elem of diffBranch) {\n                const c = Component.getComponent(elem);\n                if (c[\"_handleHover\"]) {\n                    c._handleHover(elem);\n                }\n            }\n\n            // New element hover cursor\n            const lastElement = diffBranch[0];\n            if (lastElement && lastElement.cursor) {\n                this.stage.getCanvas().style.cursor = lastElement.cursor;\n            }\n\n            // Rerun _handleHover for target element in case it's been hovered\n            // back from its child\n            if (diffBranch.length === 0 && target) {\n                const c = Component.getComponent(target);\n                if (c[\"_handleHover\"]) {\n                    c._handleHover(target);\n                }\n            }\n        }\n    }\n\n    _getTargetChild(clientX, clientY) {\n        let children = this.stage.application.children;\n        let affected = this._findChildren([], children);\n        let hoverableChildren = this._withinClickableRange(affected, clientX, clientY);\n\n        hoverableChildren.sort((a, b) => {\n            // Sort by zIndex and then id\n            if (a.zIndex > b.zIndex) {\n                return 1;\n            } else if (a.zIndex < b.zIndex) {\n                return -1;\n            } else {\n                return a.id > b.id ? 1 : -1;\n            }\n        });\n\n        if (hoverableChildren.length) {\n            // Assume target has highest zIndex (id when zIndex equal)\n            return hoverableChildren.slice(-1)[0];\n        } else {\n            return null;\n        }\n    }\n\n    _findChildren(bucket, children) {\n        let n = children.length;\n        while (n--) {\n            const child = children[n];\n            // only add active children\n            if (child.__active && child.collision) {\n                if (child.collision === true) {\n                    bucket.push(child);\n                }\n                if (child.hasChildren()) {\n                    this._findChildren(bucket, child.children);\n                }\n            }\n        }\n        return bucket;\n    }\n\n    _withinClickableRange(affectedChildren, cursorX, cursorY) {\n        let n = affectedChildren.length;\n        const candidates = [];\n\n        // loop through affected children\n        // and perform collision detection\n        while (n--) {\n            const child = affectedChildren[n];\n            const precision = this.stage.getRenderPrecision() / this.stage.getOption('devicePixelRatio');\n            const ctx = child.core._worldContext;\n\n            const cx = ctx.px * precision;\n            const cy = ctx.py * precision;\n            const cw = child.finalW * ctx.ta * precision;\n            const ch = child.finalH * ctx.td * precision;\n\n            if (cx > this.stage.w || cy > this.stage.h) {\n                continue;\n            }\n\n            if (child.parent.core._scissor) {\n                const scissor = child.parent.core._scissor.map((v) => v * precision);\n                if (!this._testCollision(cursorX, cursorY, ...scissor))\n                    continue\n            }\n\n            if (this._testCollision(cursorX, cursorY, cx, cy, cw, ch)) {\n                candidates.push(child);\n            }\n        }\n        return candidates;\n    }\n\n    _testCollision(px, py, cx, cy, cw, ch) {\n        if (px >= cx &&\n            px <= cx + cw &&\n            py >= cy &&\n            py <= cy + ch) {\n            return true;\n        }\n        return false;\n    }\n\n    destroy() {\n        if (!this._destroyed) {\n            this._destroy();\n            this.stage.destroy();\n            this._destroyed = true;\n        }\n    }\n\n    _destroy() {\n        // This forces the _detach, _disabled and _active events to be called.\n        this.stage.setApplication(undefined);\n        this._updateAttachedFlag();\n        this._updateEnabledFlag();\n\n        if (this.__keypressTimers.size) {\n            for (const timer of this.__keypressTimers.values()) {\n                clearTimeout(timer);\n            }\n\n            this.__keypressTimers.clear();\n        }\n    }\n\n    getCanvas() {\n        return this.stage.getCanvas();\n    }\n\n}\n\nimport Stage from \"../tree/Stage.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class StaticCanvasTexture extends Texture {\n\n    constructor(stage) {\n        super(stage);\n        this._factory = undefined;\n        this._lookupId = undefined;\n    }\n\n    set content({factory, lookupId = undefined}) {\n        this._factory = factory;\n        this._lookupId = lookupId;\n        this._changed();\n    }\n\n    _getIsValid() {\n        return !!this._factory;\n    }\n\n    _getLookupId() {\n        return this._lookupId;\n    }\n\n    _getSourceLoader() {\n        const f = this._factory;\n        return (cb) => {\n            return f((err, canvas) => {\n                if (err) {\n                    return cb(err);\n                }\n                cb(null, this.stage.platform.getTextureOptionsForDrawingCanvas(canvas));\n            }, this.stage);\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../tree/Utils.mjs\";\nimport StageUtils from \"../tree/StageUtils.mjs\";\nimport StaticCanvasTexture from \"../textures/StaticCanvasTexture.mjs\"\n\nexport default class Tools {\n\n    static getCanvasTexture(canvasFactory, lookupId) {\n        return {type: StaticCanvasTexture, content: {factory: canvasFactory, lookupId: lookupId}}\n    }\n\n    static getRoundRect(w, h, radius, strokeWidth, strokeColor, fill, fillColor) {\n        if (!Array.isArray(radius)){\n            // upper-left, upper-right, bottom-right, bottom-left.\n            radius = [radius, radius, radius, radius];\n        }\n\n        let factory = (cb, stage) => {\n            if (Utils.isSpark) {\n                stage.platform.createRoundRect(cb, stage, w, h, radius, strokeWidth, strokeColor, fill, fillColor);\n            } else {\n                cb(null, this.createRoundRect(stage, w, h, radius, strokeWidth, strokeColor, fill, fillColor));\n            }\n        };\n        let id = 'rect' + [w, h, strokeWidth, strokeColor, fill ? 1 : 0, fillColor].concat(radius).join(\",\");\n        return Tools.getCanvasTexture(factory, id);\n    }\n\n    static createRoundRect(stage, w, h, radius, strokeWidth, strokeColor, fill, fillColor) {\n        if (fill === undefined) fill = true;\n        if (strokeWidth === undefined) strokeWidth = 0;\n\n        let canvas = stage.platform.getDrawingCanvas();\n        let ctx = canvas.getContext('2d');\n        ctx.imageSmoothingEnabled = true;\n\n        canvas.width = w + strokeWidth + 2;\n        canvas.height = h + strokeWidth + 2;\n\n        ctx.beginPath();\n        let x = 0.5 * strokeWidth + 1, y = 0.5 * strokeWidth + 1;\n\n        ctx.moveTo(x + radius[0], y);\n        ctx.lineTo(x + w - radius[1], y);\n        ctx.arcTo(x + w, y, x + w, y + radius[1], radius[1]);\n        ctx.lineTo(x + w, y + h - radius[2]);\n        ctx.arcTo(x + w, y + h, x + w - radius[2], y + h, radius[2]);\n        ctx.lineTo(x + radius[3], y + h);\n        ctx.arcTo(x, y + h, x, y + h - radius[3], radius[3]);\n        ctx.lineTo(x, y + radius[0]);\n        ctx.arcTo(x, y, x + radius[0], y, radius[0]);\n        ctx.closePath();\n\n        if (fill) {\n            if (Utils.isNumber(fillColor)) {\n                ctx.fillStyle = StageUtils.getRgbaString(fillColor);\n            } else {\n                ctx.fillStyle = \"white\";\n            }\n            ctx.fill();\n        }\n\n        if (strokeWidth) {\n            if (Utils.isNumber(strokeColor)) {\n                ctx.strokeStyle = StageUtils.getRgbaString(strokeColor);\n            } else {\n                ctx.strokeStyle = \"white\";\n            }\n            ctx.lineWidth = strokeWidth;\n            ctx.stroke();\n        }\n\n        return canvas;\n    }\n\n    static getShadowRect(w, h, radius = 0, blur = 5, margin = blur * 2) {\n        if (!Array.isArray(radius)){\n            // upper-left, upper-right, bottom-right, bottom-left.\n            radius = [radius, radius, radius, radius];\n        }\n\n        let factory = (cb, stage) => {\n            if (Utils.isSpark) {\n                stage.platform.createShadowRect(cb, stage, w, h, radius, blur, margin);\n            } else {\n                cb(null, this.createShadowRect(stage, w, h, radius, blur, margin));\n            }\n        };\n        let id = 'shadow' + [w, h, blur, margin].concat(radius).join(\",\");\n        return Tools.getCanvasTexture(factory, id);\n    }\n\n    static createShadowRect(stage, w, h, radius, blur, margin) {\n        let canvas = stage.platform.getDrawingCanvas();\n        let ctx = canvas.getContext('2d');\n        ctx.imageSmoothingEnabled = true;\n\n        canvas.width = w + margin * 2;\n        canvas.height = h + margin * 2;\n\n        // WpeWebKit bug: we experienced problems without this with shadows in noncompositedwebgl mode.\n        ctx.globalAlpha = 0.01;\n        ctx.fillRect(0, 0, 0.01, 0.01);\n        ctx.globalAlpha = 1.0;\n\n        ctx.shadowColor = StageUtils.getRgbaString(0xFFFFFFFF);\n        ctx.fillStyle = StageUtils.getRgbaString(0xFFFFFFFF);\n        ctx.shadowBlur = blur;\n        ctx.shadowOffsetX = (w + 10) + margin;\n        ctx.shadowOffsetY = margin;\n\n        ctx.beginPath();\n        const x = -(w + 10);\n        const y = 0;\n\n        ctx.moveTo(x + radius[0], y);\n        ctx.lineTo(x + w - radius[1], y);\n        ctx.arcTo(x + w, y, x + w, y + radius[1], radius[1]);\n        ctx.lineTo(x + w, y + h - radius[2]);\n        ctx.arcTo(x + w, y + h, x + w - radius[2], y + h, radius[2]);\n        ctx.lineTo(x + radius[3], y + h);\n        ctx.arcTo(x, y + h, x, y + h - radius[3], radius[3]);\n        ctx.lineTo(x, y + radius[0]);\n        ctx.arcTo(x, y, x + radius[0], y, radius[0]);\n        ctx.closePath();\n        ctx.fill();\n\n        return canvas;\n    }\n\n    static getSvgTexture(url, w, h) {\n        let factory = (cb, stage) => {\n            if (Utils.isSpark) {\n                stage.platform.createSvg(cb, stage, url, w, h);\n            } else {\n                this.createSvg(cb, stage, url, w, h);\n            }\n        };\n        let id = 'svg' + [w, h, url].join(\",\");\n        return Tools.getCanvasTexture(factory, id);\n    }\n\n    static createSvg(cb, stage, url, w, h) {\n        let canvas = stage.platform.getDrawingCanvas();\n        let ctx = canvas.getContext('2d');\n        ctx.imageSmoothingEnabled = true;\n\n        let img = new Image();\n        img.onload = () => {\n            canvas.width = w;\n            canvas.height = h;\n            ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n            cb(null, canvas);\n        }\n        img.onerror = (err) => {\n            cb(err);\n        }\n\n        // On the PS4 platform setting the `crossOrigin` attribute on images\n        // can cause CORS failures.\n        if (!Utils.isPS4) {\n            img.crossOrigin = \"Anonymous\";\n        }\n\n        img.src = url;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../tree/Utils.mjs\";\n\nexport default class ObjMerger {\n\n    static isMf(f) {\n        return Utils.isFunction(f) && f.__mf;\n    }\n\n    static mf(f) {\n        // Set as merge function.\n        f.__mf = true;\n        return f;\n    }\n\n    static merge(a, b) {\n        const aks = Object.keys(a);\n        const bks = Object.keys(b);\n\n        if (!bks.length) {\n            return a;\n        }\n\n        // Create index array for all elements.\n        const ai = {};\n        const bi = {};\n        for (let i = 0, n = bks.length; i < n; i++) {\n            const key = bks[i];\n            ai[key] = -1;\n            bi[key] = i;\n        }\n        for (let i = 0, n = aks.length; i < n; i++) {\n            const key = aks[i];\n            ai[key] = i;\n            if (bi[key] === undefined) {\n                bi[key] = -1;\n            }\n        }\n\n        const aksl = aks.length;\n\n        const result = {};\n        for (let i = 0, n = bks.length; i < n; i++) {\n            const key = bks[i];\n\n            // Prepend all items in a that are not in b - before the now added b attribute.\n            const aIndex = ai[key];\n            let curIndex = aIndex;\n            while(--curIndex >= 0) {\n                const akey = aks[curIndex];\n                if (bi[akey] !== -1) {\n                    // Already found? Stop processing.\n                    // Not yet found but exists in b? Also stop processing: wait until we find it in b.\n                    break;\n                }\n            }\n            while(++curIndex < aIndex) {\n                const akey = aks[curIndex];\n                result[akey] = a[akey];\n            }\n\n            const bv = b[key];\n            const av = a[key];\n            let r;\n            if (this.isMf(bv)) {\n                r = bv(av);\n            } else {\n                if (!Utils.isObjectLiteral(av) || !Utils.isObjectLiteral(bv)) {\n                    r = bv;\n                } else {\n                    r = ObjMerger.merge(av, bv);\n                }\n            }\n\n            // When marked as undefined, property is deleted.\n            if (r !== undefined) {\n                result[key] = r;\n            }\n        }\n\n        // Append remaining final items in a.\n        let curIndex = aksl;\n        while(--curIndex >= 0) {\n            const akey = aks[curIndex];\n            if (bi[akey] !== -1) {\n                break;\n            }\n        }\n        while(++curIndex < aksl) {\n            const akey = aks[curIndex];\n            result[akey] = a[akey];\n        }\n\n        return result;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Manages the list of children for an element.\n */\n\nimport ObjectList from \"../tree/ObjectList.mjs\";\n\nexport default class ObjectListProxy extends ObjectList {\n\n    constructor(target) {\n        super();\n        this._target = target;\n    }\n\n    onAdd(item, index) {\n        this._target.addAt(item, index);\n    }\n\n    onRemove(item, index) {\n        this._target.removeAt(index);\n    }\n\n    onSync(removed, added, order) {\n        this._target._setByArray(order);\n    }\n\n    onSet(item, index) {\n        this._target.setAt(item, index);\n    }\n\n    onMove(item, fromIndex, toIndex) {\n        this._target.setAt(item, toIndex);\n    }\n\n    createItem(object) {\n        return this._target.createItem(object);\n    }\n\n    isItem(object) {\n        return this._target.isItem(object);\n    }\n\n}\n\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Manages the list of children for an element.\n */\n\nimport ObjectListProxy from \"./ObjectListProxy.mjs\";\n\nexport default class ObjectListWrapper extends ObjectListProxy {\n\n    constructor(target, wrap) {\n        super(target);\n        this._wrap = wrap;\n    }\n\n    wrap(item) {\n        let wrapper = this._wrap(item);\n        item._wrapper = wrapper;\n        return wrapper;\n    }\n\n    onAdd(item, index) {\n        item = this.wrap(item);\n        super.onAdd(item, index);\n    }\n\n    onRemove(item, index) {\n        super.onRemove(item, index);\n    }\n\n    onSync(removed, added, order) {\n        added.forEach(a => this.wrap(a));\n        order = order.map(a => a._wrapper);\n        super.onSync(removed, added, order);\n    }\n\n    onSet(item, index) {\n        item = this.wrap(item);\n        super.onSet(item, index);\n    }\n\n    onMove(item, fromIndex, toIndex) {\n        super.onMove(item, fromIndex, toIndex);\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class NoiseTexture extends Texture {\n\n    _getLookupId() {\n        return '__noise';\n    }\n\n    _getSourceLoader() {\n        const gl = this.stage.gl;\n        return function(cb) {\n            const noise = new Uint8Array(128 * 128 * 4);\n            for (let i = 0; i < 128 * 128 * 4; i+=4) {\n                const v = Math.floor(Math.random() * 256);\n                noise[i] = v;\n                noise[i+1] = v;\n                noise[i+2] = v;\n                noise[i+3] = 255;\n            }\n            const texParams = {}\n\n            if (gl) {\n                texParams[gl.TEXTURE_WRAP_S] = gl.REPEAT;\n                texParams[gl.TEXTURE_WRAP_T] = gl.REPEAT;\n                texParams[gl.TEXTURE_MIN_FILTER] = gl.NEAREST;\n                texParams[gl.TEXTURE_MAG_FILTER] = gl.NEAREST;\n            }\n\n            cb(null, {source: noise, w: 128, h: 128, texParams: texParams});\n        }\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class HtmlTexture extends Texture {\n\n    constructor(stage) {\n        super(stage);\n        this._htmlElement = undefined;\n        this._scale = 1;\n    }\n\n    set htmlElement(v) {\n        this._htmlElement = v;\n        this._changed();\n    }\n\n    get htmlElement() {\n        return this._htmlElement;\n    }\n\n    set scale(v) {\n        this._scale = v;\n        this._changed();\n    }\n\n    get scale() {\n        return this._scale;\n    }\n\n    set html(v) {\n        if (!v) {\n            this.htmlElement = undefined;\n        } else {\n            const d = document.createElement('div');\n            d.innerHTML = \"<div>\" + v + \"</div>\";\n            this.htmlElement = d.firstElementChild;\n        }\n    }\n\n    get html() {\n        return this._htmlElement.innerHTML;\n    }\n\n    _getIsValid() {\n        return this.htmlElement;\n    }\n\n    _getLookupId() {\n        return this._scale + \":\" + this._htmlElement.innerHTML;\n    }\n\n    _getSourceLoader() {\n        const htmlElement = this._htmlElement;\n        const scale = this._scale;\n        return function(cb) {\n            if (!window.html2canvas) {\n                return cb(new Error(\"Please include html2canvas (https://html2canvas.hertzen.com/)\"));\n            }\n\n            const area = HtmlTexture.getPreloadArea();\n            area.appendChild(htmlElement);\n\n            html2canvas(htmlElement, {backgroundColor: null, scale: scale}).then(function(canvas) {\n                area.removeChild(htmlElement);\n                if (canvas.height === 0) {\n                    return cb(new Error(\"Canvas height is 0\"));\n                }\n                cb(null, {source: canvas, width: canvas.width, height: canvas.height});\n            }).catch(e => {\n                console.error('[Lightning]', e);\n            });\n        }\n    }\n\n    static getPreloadArea() {\n        if (!this._preloadArea) {\n            // Preload area must be included in document body and must be visible to trigger html element rendering.\n            this._preloadArea = document.createElement('div');\n            if (this._preloadArea.attachShadow) {\n                // Use a shadow DOM if possible to prevent styling from interfering.\n                this._preloadArea.attachShadow({mode: 'closed'});\n            }\n            this._preloadArea.style.opacity = 0;\n            this._preloadArea.style.pointerEvents = 'none';\n            this._preloadArea.style.position = 'fixed';\n            this._preloadArea.style.display = 'block';\n            this._preloadArea.style.top = '100vh';\n            this._preloadArea.style.overflow = 'hidden';\n            document.body.appendChild(this._preloadArea);\n        }\n        return this._preloadArea;\n    }\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Texture from \"../tree/Texture.mjs\";\n\nexport default class StaticTexture extends Texture {\n\n    constructor(stage, options) {\n        super(stage);\n\n        this._options = options;\n    }\n\n    set options(v) {\n        if (this._options !== v) {\n            this._options = v;\n            this._changed();\n        }\n    }\n\n    get options() {\n        return this._options;\n    }\n\n    _getIsValid() {\n        return !!this._options;\n    }\n\n    _getSourceLoader() {\n        return (cb) => {\n            cb(null, this._options);\n        }\n    }\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"../application/Component.mjs\";\n\nexport default class ListComponent extends Component {\n\n    constructor(stage) {\n        super(stage);\n\n        this._wrapper = super._children.a({});\n\n        this._reloadVisibleElements = false;\n\n        this._visibleItems = new Set();\n\n        this._index = 0;\n\n        this._started = false;\n\n        /**\n         * The transition definition that is being used when scrolling the items.\n         * @type TransitionSettings\n         */\n        this._scrollTransitionSettings = this.stage.transitions.createSettings({});\n\n        /**\n         * The scroll area size in pixels per item.\n         */\n        this._itemSize = 100;\n\n        this._viewportScrollOffset = 0;\n\n        this._itemScrollOffset = 0;\n\n        /**\n         * Should the list jump when scrolling between end to start, or should it be continuous, like a carrousel?\n         */\n        this._roll = false;\n\n        /**\n         * Allows restricting the start scroll position.\n         */\n        this._rollMin = 0;\n\n        /**\n         * Allows restricting the end scroll position.\n         */\n        this._rollMax = 0;\n\n        /**\n         * Definition for a custom animation that is applied when an item is (partially) selected.\n         * @type AnimationSettings\n         */\n        this._progressAnimation = null;\n\n        /**\n         * Inverts the scrolling direction.\n         * @type {boolean}\n         * @private\n         */\n        this._invertDirection = false;\n\n        /**\n         * Layout the items horizontally or vertically?\n         * @type {boolean}\n         * @private\n         */\n        this._horizontal = true;\n\n        this.itemList = new ListItems(this);\n    }\n\n    _allowChildrenAccess() {\n        return false;\n    }\n\n    get items() {\n        return this.itemList.get();\n    }\n\n    set items(children) {\n        this.itemList.patch(children);\n    }\n\n    start() {\n        this._wrapper.transition(this.property, this._scrollTransitionSettings);\n        this._scrollTransition = this._wrapper.transition(this.property);\n        this._scrollTransition.on('progress', p => this.update());\n\n        this.setIndex(0, true, true);\n\n        this._started = true;\n\n        this.update();\n    }\n\n    setIndex(index, immediate = false, closest = false) {\n        let nElements = this.length;\n        if (!nElements) return;\n\n        this.emit('unfocus', this.getElement(this.realIndex), this._index, this.realIndex);\n\n        if (closest) {\n            // Scroll to same offset closest to the index.\n            let offset = Utils.getModuloIndex(index, nElements);\n            let o = Utils.getModuloIndex(this.index, nElements);\n            let diff = offset - o;\n            if (diff > 0.5 * nElements) {\n                diff -= nElements;\n            } else if (diff < -0.5 * nElements) {\n                diff += nElements;\n            }\n            this._index += diff;\n        } else {\n            this._index = index;\n        }\n\n        if (this._roll || (this.viewportSize > this._itemSize * nElements)) {\n            this._index = Utils.getModuloIndex(this._index, nElements);\n        }\n\n        let direction = (this._horizontal ^ this._invertDirection ? -1 : 1);\n        let value = direction * this._index * this._itemSize;\n\n        if (this._roll) {\n            let min, max, scrollDelta;\n            if (direction == 1) {\n                max = (nElements - 1) * this._itemSize;\n                scrollDelta = this._viewportScrollOffset * this.viewportSize - this._itemScrollOffset * this._itemSize;\n\n                max -= scrollDelta;\n\n                min = this.viewportSize - (this._itemSize + scrollDelta);\n\n                if (this._rollMin) min -= this._rollMin;\n                if (this._rollMax) max += this._rollMax;\n\n                value = Math.max(Math.min(value, max), min);\n            } else {\n                max = (nElements * this._itemSize - this.viewportSize);\n                scrollDelta = this._viewportScrollOffset * this.viewportSize - this._itemScrollOffset * this._itemSize;\n\n                max += scrollDelta;\n\n                let min = scrollDelta;\n\n                if (this._rollMin) min -= this._rollMin;\n                if (this._rollMax) max += this._rollMax;\n\n                value = Math.min(Math.max(-max, value), -min);\n            }\n        }\n\n        this._scrollTransition.start(value);\n\n        if (immediate) {\n            this._scrollTransition.finish();\n        }\n\n        this.emit('focus', this.getElement(this.realIndex), this._index, this.realIndex);\n    }\n\n    getAxisPosition() {\n        let target = -this._scrollTransition._targetValue;\n\n        let direction = (this._horizontal ^ this._invertDirection ? -1 : 1);\n        let value = -direction * this._index * this._itemSize;\n\n        return this._viewportScrollOffset * this.viewportSize + (value - target);\n    }\n\n    update() {\n        if (!this._started) return;\n\n        let nElements = this.length;\n        if (!nElements) return;\n\n        let direction = (this._horizontal ^ this._invertDirection ? -1 : 1);\n\n        // Map position to index value.\n        let v = (this._horizontal ? this._wrapper.x : this._wrapper.y);\n\n        let viewportSize = this.viewportSize;\n        let scrollDelta = this._viewportScrollOffset * viewportSize - this._itemScrollOffset * this._itemSize;\n        v += scrollDelta;\n\n        let s, e, ps, pe;\n        if (direction == -1) {\n            s = Math.floor(-v / this._itemSize);\n            ps = 1 - ((-v / this._itemSize) - s);\n            e = Math.floor((viewportSize - v) / this._itemSize);\n            pe = (((viewportSize - v) / this._itemSize) - e);\n        } else {\n            s = Math.ceil(v / this._itemSize);\n            ps = 1 + (v / this._itemSize) - s;\n            e = Math.ceil((v - viewportSize) / this._itemSize);\n            pe = e - ((v - viewportSize) / this._itemSize);\n        }\n        if (this._roll || (viewportSize > this._itemSize * nElements)) {\n            // Don't show additional items.\n            if (e >= nElements) {\n                e = nElements - 1;\n                pe = 1;\n            }\n            if (s >= nElements) {\n                s = nElements - 1;\n                ps = 1;\n            }\n            if (e <= -1) {\n                e = 0;\n                pe = 1;\n            }\n            if (s <= -1) {\n                s = 0;\n                ps = 1;\n            }\n        }\n\n        let offset = -direction * s * this._itemSize;\n\n        let item;\n        for (let index = s; (direction == -1 ? index <= e : index >= e); (direction == -1 ? index++ : index--)) {\n            let realIndex = Utils.getModuloIndex(index, nElements);\n\n            let element = this.getElement(realIndex);\n            item = element.parent;\n            this._visibleItems.delete(item);\n            if (this._horizontal) {\n                item.x = offset + scrollDelta;\n            } else {\n                item.y = offset + scrollDelta;\n            }\n\n            let wasVisible = item.visible;\n            item.visible = true;\n\n            if (!wasVisible || this._reloadVisibleElements) {\n                // Turned visible.\n                this.emit('visible', index, realIndex);\n            }\n\n\n\n            if (this._progressAnimation) {\n                let p = 1;\n                if (index == s) {\n                    p = ps;\n                } else if (index == e) {\n                    p = pe;\n                }\n\n                // Use animation to progress.\n                this._progressAnimation.apply(element, p);\n            }\n\n            offset += this._itemSize;\n        }\n\n        // Handle item visibility.\n        let self = this;\n        this._visibleItems.forEach(function(invisibleItem) {\n            invisibleItem.visible = false;\n            self._visibleItems.delete(invisibleItem);\n        });\n\n        for (let index = s; (direction == -1 ? index <= e : index >= e); (direction == -1 ? index++ : index--)) {\n            let realIndex = Utils.getModuloIndex(index, nElements);\n            this._visibleItems.add(this.getWrapper(realIndex));\n        }\n\n        this._reloadVisibleElements = false;\n    }\n\n    setPrevious() {\n        this.setIndex(this._index - 1);\n    }\n\n    setNext() {\n        this.setIndex(this._index + 1);\n    }\n\n    getWrapper(index) {\n        return this._wrapper.children[index];\n    }\n\n    getElement(index) {\n        let e = this._wrapper.children[index];\n        return e ? e.children[0] : null;\n    }\n\n    reload() {\n        this._reloadVisibleElements = true;\n        this.update();\n    }\n\n    get element() {\n        let e = this._wrapper.children[this.realIndex];\n        return e ? e.children[0] : null;\n    }\n\n    get length() {\n        return this._wrapper.children.length;\n    }\n\n    get property() {\n        return this._horizontal ? 'x' : 'y';\n    }\n\n    get viewportSize() {\n        return this._horizontal ? this.w : this.h;\n    }\n\n    get index() {\n        return this._index;\n    }\n\n    get realIndex() {\n        return Utils.getModuloIndex(this._index, this.length);\n    }\n\n    get itemSize() {\n        return this._itemSize;\n    }\n\n    set itemSize(v) {\n        this._itemSize = v;\n        this.update();\n    }\n\n    get viewportScrollOffset() {\n        return this._viewportScrollOffset;\n    }\n\n    set viewportScrollOffset(v) {\n        this._viewportScrollOffset = v;\n        this.update();\n    }\n\n    get itemScrollOffset() {\n        return this._itemScrollOffset;\n    }\n\n    set itemScrollOffset(v) {\n        this._itemScrollOffset = v;\n        this.update();\n    }\n\n    get scrollTransitionSettings() {\n        return this._scrollTransitionSettings;\n    }\n\n    set scrollTransitionSettings(v) {\n        this._scrollTransitionSettings.patch(v);\n    }\n\n    set scrollTransition(v) {\n        this._scrollTransitionSettings.patch(v);\n    }\n\n    get scrollTransition() {\n        return this._scrollTransition;\n    }\n\n    get progressAnimation() {\n        return this._progressAnimation;\n    }\n\n    set progressAnimation(v) {\n        if (Utils.isObjectLiteral(v)) {\n            this._progressAnimation = this.stage.animations.createSettings(v);\n        } else {\n            this._progressAnimation = v;\n        }\n        this.update();\n    }\n\n    get roll() {\n        return this._roll;\n    }\n\n    set roll(v) {\n        this._roll = v;\n        this.update();\n    }\n\n    get rollMin() {\n        return this._rollMin;\n    }\n\n    set rollMin(v) {\n        this._rollMin = v;\n        this.update();\n    }\n\n    get rollMax() {\n        return this._rollMax;\n    }\n\n    set rollMax(v) {\n        this._rollMax = v;\n        this.update();\n    }\n\n    get invertDirection() {\n        return this._invertDirection;\n    }\n\n    set invertDirection(v) {\n        if (!this._started) {\n            this._invertDirection = v;\n        }\n    }\n\n    get horizontal() {\n        return this._horizontal;\n    }\n\n    set horizontal(v) {\n        if (v !== this._horizontal) {\n            if (!this._started) {\n                this._horizontal = v;\n            }\n        }\n    }\n\n}\n\nimport ObjectListWrapper from \"../tools/ObjectListWrapper.mjs\";\nclass ListItems extends ObjectListWrapper {\n    constructor(list) {\n        let wrap = (item => {\n            let parent = item.stage.createElement();\n            parent.add(item);\n            parent.visible = false;\n            return parent;\n        })\n\n        super(list._wrapper._children, wrap);\n        this.list = list;\n    }\n\n    onAdd(item, index) {\n        super.onAdd(item, index);\n        this.checkStarted(index);\n    }\n\n    checkStarted(index) {\n        this.list._reloadVisibleElements = true;\n        if (!this.list._started) {\n            this.list.start();\n        } else {\n            if (this.list.length === 1) {\n                this.list.setIndex(0, true, true);\n            } else {\n                if (this.list._index >= this.list.length) {\n                    this.list.setIndex(0);\n                }\n            }\n            this.list.update();\n        }\n    }\n\n    onRemove(item, index) {\n        super.onRemove(item, index);\n        let ri = this.list.realIndex;\n        if (ri === index) {\n            if (ri === this.list.length) {\n                ri--;\n            }\n            if (ri >= 0) {\n                this.list.setIndex(ri);\n            }\n        } else if (ri > index) {\n            this.list.setIndex(ri - 1);\n        }\n\n        this.list._reloadVisibleElements = true;\n    }\n\n    onSet(item, index) {\n        super.onSet(item, index);\n        this.checkStarted(index);\n    }\n\n    onSync(removed, added, order) {\n        super.onSync(removed, added, order);\n        this.checkStarted(0);\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n}\n\nimport Utils from \"../tree/Utils.mjs\";\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class LinearBlurShader extends DefaultShader {\n\n    constructor(context) {\n        super(context);\n\n        this._direction = new Float32Array([1, 0]);\n        this._kernelRadius = 1;\n    }\n\n    get x() {\n        return this._direction[0];\n    }\n\n    set x(v) {\n        this._direction[0] = v;\n        this.redraw();\n    }\n\n    get y() {\n        return this._direction[1];\n    }\n\n    set y(v) {\n        this._direction[1] = v;\n        this.redraw();\n    }\n\n    get kernelRadius() {\n        return this._kernelRadius;\n    }\n\n    set kernelRadius(v) {\n        this._kernelRadius = v;\n        this.redraw();\n    }\n\n\n    useDefault() {\n        return (this._kernelRadius === 0);\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"direction\", this._direction, this.gl.uniform2fv);\n        this._setUniform(\"kernelRadius\", this._kernelRadius, this.gl.uniform1i);\n\n        const w = operation.getRenderWidth();\n        const h = operation.getRenderHeight();\n        this._setUniform(\"resolution\", new Float32Array([w, h]), this.gl.uniform2fv);\n    }\n}\n\nLinearBlurShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    uniform vec2 resolution;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform vec2 direction;\n    uniform int kernelRadius;\n    \n    vec4 blur1(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\n        vec4 color = vec4(0.0);\n        vec2 off1 = vec2(1.3333333333333333) * direction;\n        color += texture2D(image, uv) * 0.29411764705882354;\n        color += texture2D(image, uv + (off1 / resolution)) * 0.35294117647058826;\n        color += texture2D(image, uv - (off1 / resolution)) * 0.35294117647058826;\n        return color; \n    }\n    \n    vec4 blur2(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\n        vec4 color = vec4(0.0);\n        vec2 off1 = vec2(1.3846153846) * direction;\n        vec2 off2 = vec2(3.2307692308) * direction;\n        color += texture2D(image, uv) * 0.2270270270;\n        color += texture2D(image, uv + (off1 / resolution)) * 0.3162162162;\n        color += texture2D(image, uv - (off1 / resolution)) * 0.3162162162;\n        color += texture2D(image, uv + (off2 / resolution)) * 0.0702702703;\n        color += texture2D(image, uv - (off2 / resolution)) * 0.0702702703;\n        return color;\n    }\n    \n    vec4 blur3(sampler2D image, vec2 uv, vec2 resolution, vec2 direction) {\n        vec4 color = vec4(0.0);\n        vec2 off1 = vec2(1.411764705882353) * direction;\n        vec2 off2 = vec2(3.2941176470588234) * direction;\n        vec2 off3 = vec2(5.176470588235294) * direction;\n        color += texture2D(image, uv) * 0.1964825501511404;\n        color += texture2D(image, uv + (off1 / resolution)) * 0.2969069646728344;\n        color += texture2D(image, uv - (off1 / resolution)) * 0.2969069646728344;\n        color += texture2D(image, uv + (off2 / resolution)) * 0.09447039785044732;\n        color += texture2D(image, uv - (off2 / resolution)) * 0.09447039785044732;\n        color += texture2D(image, uv + (off3 / resolution)) * 0.010381362401148057;\n        color += texture2D(image, uv - (off3 / resolution)) * 0.010381362401148057;\n        return color;\n    }    \n\n    void main(void){\n        if (kernelRadius == 1) {\n            gl_FragColor = blur1(uSampler, vTextureCoord, resolution, direction) * vColor;\n        } else if (kernelRadius == 2) {\n            gl_FragColor = blur2(uSampler, vTextureCoord, resolution, direction) * vColor;\n        } else {\n            gl_FragColor = blur3(uSampler, vTextureCoord, resolution, direction) * vColor;\n        }\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\n/**\n * 4x4 box blur shader which works in conjunction with a 50% rescale.\n */\nexport default class BoxBlurShader extends DefaultShader {\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const dx = 1.0 / operation.getTextureWidth(0);\n        const dy = 1.0 / operation.getTextureHeight(0);\n        this._setUniform(\"stepTextureCoord\", new Float32Array([dx, dy]), this.gl.uniform2fv);\n    }\n\n}\n\nBoxBlurShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    uniform vec2 stepTextureCoord;\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec4 vColor;\n    varying vec2 vTextureCoordUl;\n    varying vec2 vTextureCoordUr;\n    varying vec2 vTextureCoordBl;\n    varying vec2 vTextureCoordBr;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoordUl = aTextureCoord - stepTextureCoord;\n        vTextureCoordBr = aTextureCoord + stepTextureCoord;\n        vTextureCoordUr = vec2(vTextureCoordBr.x, vTextureCoordUl.y);\n        vTextureCoordBl = vec2(vTextureCoordUl.x, vTextureCoordBr.y);\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nBoxBlurShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoordUl;\n    varying vec2 vTextureCoordUr;\n    varying vec2 vTextureCoordBl;\n    varying vec2 vTextureCoordBr;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    void main(void){\n        vec4 color = 0.25 * (texture2D(uSampler, vTextureCoordUl) + texture2D(uSampler, vTextureCoordUr) + texture2D(uSampler, vTextureCoordBl) + texture2D(uSampler, vTextureCoordBr));\n        gl_FragColor = color * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class BlurShader extends DefaultShader {\n\n    constructor(context) {\n        super(context);\n        this._kernelRadius = 1;\n    }\n\n    get kernelRadius() {\n        return this._kernelRadius;\n    }\n\n    set kernelRadius(v) {\n        this._kernelRadius = v;\n        this.redraw();\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    _beforeDrawEl({target}) {\n        target.ctx.filter = \"blur(\" + this._kernelRadius + \"px)\";\n    }\n\n    _afterDrawEl({target}) {\n        target.ctx.filter = \"none\";\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"../application/Component.mjs\";\nimport LinearBlurShader from \"../renderer/webgl/shaders/LinearBlurShader.mjs\";\nimport BoxBlurShader from \"../renderer/webgl/shaders/BoxBlurShader.mjs\";\nimport DefaultShader from \"../renderer/webgl/shaders/DefaultShader.mjs\";\nimport C2dBlurShader from \"../renderer/c2d/shaders/BlurShader.mjs\";\nimport Shader from \"../tree/Shader.mjs\";\nimport MultiSpline from \"../tools/MultiSpline.mjs\";\n\nexport default class FastBlurComponent extends Component {\n    static _template() {\n        return {}\n    }\n\n    get wrap() {\n        return this.tag(\"Wrap\");\n    }\n\n    set content(v) {\n        return this.wrap.content = v;\n    }\n\n    get content() {\n        return this.wrap.content;\n    }\n\n    set padding(v) {\n        this.wrap._paddingX = v;\n        this.wrap._paddingY = v;\n        this.wrap._updateBlurSize();\n    }\n\n    set paddingX(v) {\n        this.wrap._paddingX = v;\n        this.wrap._updateBlurSize();\n    }\n\n    set paddingY(v) {\n        this.wrap._paddingY = v;\n        this.wrap._updateBlurSize();\n    }\n\n    set amount(v) {\n        return this.wrap.amount = v;\n    }\n\n    get amount() {\n        return this.wrap.amount;\n    }\n\n    _onResize() {\n        this.wrap.w = this.renderWidth;\n        this.wrap.h = this.renderHeight;\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n    _build() {\n        this.patch({\n            Wrap: {type: this.stage.gl ? WebGLFastBlurComponent : C2dFastBlurComponent}\n        });\n    }\n\n}\n\n\nclass C2dFastBlurComponent extends Component {\n\n    static _template() {\n        return {\n            forceZIndexContext: true,\n            rtt: true,\n            Textwrap: {shader: {type: C2dBlurShader}, Content: {}}\n        }\n    }\n\n    constructor(stage) {\n        super(stage);\n        this._textwrap = this.sel(\"Textwrap\");\n        this._wrapper = this.sel(\"Textwrap>Content\");\n\n        this._amount = 0;\n        this._paddingX = 0;\n        this._paddingY = 0;\n\n    }\n\n    static getSpline() {\n        if (!this._multiSpline) {\n            this._multiSpline = new MultiSpline();\n            this._multiSpline.parse(false, {0: 0, 0.25: 1.5, 0.5: 5.5, 0.75: 18, 1: 39});\n        }\n        return this._multiSpline;\n    }\n\n    get content() {\n        return this.sel('Textwrap>Content');\n    }\n\n    set content(v) {\n        this.sel('Textwrap>Content').patch(v, true);\n    }\n\n    set padding(v) {\n        this._paddingX = v;\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    set paddingX(v) {\n        this._paddingX = v;\n        this._updateBlurSize();\n    }\n\n    set paddingY(v) {\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    _updateBlurSize() {\n        let w = this.renderWidth;\n        let h = this.renderHeight;\n\n        let paddingX = this._paddingX;\n        let paddingY = this._paddingY;\n\n        this._wrapper.x = paddingX;\n        this._textwrap.x = -paddingX;\n\n        this._wrapper.y = paddingY;\n        this._textwrap.y = -paddingY;\n\n        this._textwrap.w = w + paddingX * 2;\n        this._textwrap.h = h + paddingY * 2;\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    /**\n     * Sets the amount of blur. A value between 0 and 4. Goes up exponentially for blur.\n     * Best results for non-fractional values.\n     * @param v;\n     */\n    set amount(v) {\n        this._amount = v;\n        this._textwrap.shader.kernelRadius = C2dFastBlurComponent._amountToKernelRadius(v);\n    }\n\n    static _amountToKernelRadius(v) {\n        return C2dFastBlurComponent.getSpline().getValue(Math.min(1, v * 0.25));\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n}\n\nclass WebGLFastBlurComponent extends Component {\n\n    static _template() {\n        const onUpdate = function(element, elementCore) {\n            if ((elementCore._recalc & (2 + 128))) {\n                const w = elementCore.w;\n                const h = elementCore.h;\n                let cur = elementCore;\n                do {\n                    cur = cur._children[0];\n                    cur._element.w = w;\n                    cur._element.h = h;\n                } while(cur._children);\n            }\n        };\n\n        return {\n            Textwrap: {rtt: true, forceZIndexContext: true, renderOffscreen: true, Content: {}},\n            Layers: {\n                L0: {rtt: true, onUpdate: onUpdate, renderOffscreen: true, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L1: {rtt: true, onUpdate: onUpdate, renderOffscreen: true, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L2: {rtt: true, onUpdate: onUpdate, renderOffscreen: true, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L3: {rtt: true, onUpdate: onUpdate, renderOffscreen: true, visible: false, Content: {shader: {type: BoxBlurShader}}}\n            },\n            Result: {shader: {type: FastBlurOutputShader}, visible: false}\n        }\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n    constructor(stage) {\n        super(stage);\n        this._textwrap = this.sel(\"Textwrap\");\n        this._wrapper = this.sel(\"Textwrap>Content\");\n        this._layers = this.sel(\"Layers\");\n        this._output = this.sel(\"Result\");\n\n        this._amount = 0;\n        this._paddingX = 0;\n        this._paddingY = 0;\n    }\n\n    _buildLayers() {\n        const filterShaderSettings = [{x:1,y:0,kernelRadius:1},{x:0,y:1,kernelRadius:1},{x:1.5,y:0,kernelRadius:1},{x:0,y:1.5,kernelRadius:1}];\n        const filterShaders = filterShaderSettings.map(s => {\n            const shader = Shader.create(this.stage, Object.assign({type: LinearBlurShader}, s));\n            return shader;\n        });\n\n        this._setLayerTexture(this.getLayerContents(0), this._textwrap.getTexture(), []);\n        this._setLayerTexture(this.getLayerContents(1), this.getLayer(0).getTexture(), [filterShaders[0], filterShaders[1]]);\n\n        // Notice that 1.5 filters should be applied before 1.0 filters.\n        this._setLayerTexture(this.getLayerContents(2), this.getLayer(1).getTexture(), [filterShaders[0], filterShaders[1], filterShaders[2], filterShaders[3]]);\n        this._setLayerTexture(this.getLayerContents(3), this.getLayer(2).getTexture(), [filterShaders[0], filterShaders[1], filterShaders[2], filterShaders[3]]);\n    }\n\n    _setLayerTexture(element, texture, steps) {\n        if (!steps.length) {\n            element.texture = texture;\n        } else {\n            const step = steps.pop();\n            const child = element.stage.c({rtt: true, shader: step});\n\n            // Recurse.\n            this._setLayerTexture(child, texture, steps);\n\n            element.childList.add(child);\n        }\n        return element;\n    }\n\n    get content() {\n        return this.sel('Textwrap>Content');\n    }\n\n    set content(v) {\n        this.sel('Textwrap>Content').patch(v, true);\n    }\n\n    set padding(v) {\n        this._paddingX = v;\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    set paddingX(v) {\n        this._paddingX = v;\n        this._updateBlurSize();\n    }\n\n    set paddingY(v) {\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    getLayer(i) {\n        return this._layers.sel(\"L\" + i);\n    }\n\n    getLayerContents(i) {\n        return this.getLayer(i).sel(\"Content\");\n    }\n\n    _onResize() {\n        this._updateBlurSize();\n    }\n\n    _updateBlurSize() {\n        let w = this.renderWidth;\n        let h = this.renderHeight;\n\n        let paddingX = this._paddingX;\n        let paddingY = this._paddingY;\n\n        let fw = w + paddingX * 2;\n        let fh = h + paddingY * 2;\n        this._textwrap.w = fw;\n        this._wrapper.x = paddingX;\n        this.getLayer(0).w = this.getLayerContents(0).w = fw / 2;\n        this.getLayer(1).w = this.getLayerContents(1).w = fw / 4;\n        this.getLayer(2).w = this.getLayerContents(2).w = fw / 8;\n        this.getLayer(3).w = this.getLayerContents(3).w = fw / 16;\n        this._output.x = -paddingX;\n        this._textwrap.x = -paddingX;\n        this._output.w = fw;\n\n        this._textwrap.h = fh;\n        this._wrapper.y = paddingY;\n        this.getLayer(0).h = this.getLayerContents(0).h = fh / 2;\n        this.getLayer(1).h = this.getLayerContents(1).h = fh / 4;\n        this.getLayer(2).h = this.getLayerContents(2).h = fh / 8;\n        this.getLayer(3).h = this.getLayerContents(3).h = fh / 16;\n        this._output.y = -paddingY;\n        this._textwrap.y = -paddingY;\n        this._output.h = fh;\n\n        this.w = w;\n        this.h = h;\n    }\n\n    /**\n     * Sets the amount of blur. A value between 0 and 4. Goes up exponentially for blur.\n     * Best results for non-fractional values.\n     * @param v;\n     */\n    set amount(v) {\n        this._amount = v;\n        this._update();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    _update() {\n        let v = Math.min(4, Math.max(0, this._amount));\n        if (v === 0) {\n            this._textwrap.renderToTexture = false;\n            this._output.shader.otherTextureSource = null;\n            this._output.visible = false;\n        } else {\n            this._textwrap.renderToTexture = true;\n            this._output.visible = true;\n\n            this.getLayer(0).visible = (v > 0);\n            this.getLayer(1).visible = (v > 1);\n            this.getLayer(2).visible = (v > 2);\n            this.getLayer(3).visible = (v > 3);\n\n            if (v <= 1) {\n                this._output.texture = this._textwrap.getTexture();\n                this._output.shader.otherTextureSource = this.getLayer(0).getTexture();\n                this._output.shader.a = v;\n            } else if (v <= 2) {\n                this._output.texture = this.getLayer(0).getTexture();\n                this._output.shader.otherTextureSource = this.getLayer(1).getTexture();\n                this._output.shader.a = v - 1;\n            } else if (v <= 3) {\n                this._output.texture = this.getLayer(1).getTexture();\n                this._output.shader.otherTextureSource = this.getLayer(2).getTexture();\n                this._output.shader.a = v - 2;\n            } else if (v <= 4) {\n                this._output.texture = this.getLayer(2).getTexture();\n                this._output.shader.otherTextureSource = this.getLayer(3).getTexture();\n                this._output.shader.a = v - 3;\n            }\n        }\n    }\n\n    set shader(s) {\n        super.shader = s;\n        if (!this.renderToTexture) {\n            console.warn(\"[Lightning] Please enable renderToTexture to use with a shader.\");\n        }\n    }\n\n    _firstActive() {\n        this._buildLayers();\n    }\n\n}\n\n/**\n * Shader that combines two textures into one output.\n */\nclass FastBlurOutputShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._a = 0;\n        this._otherTextureSource = null;\n    }\n\n    get a() {\n        return this._a;\n    }\n\n    set a(v) {\n        this._a = v;\n        this.redraw();\n    }\n\n    set otherTextureSource(v) {\n        this._otherTextureSource = v;\n        this.redraw();\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"a\", this._a, this.gl.uniform1f);\n        this._setUniform(\"uSampler2\", 1, this.gl.uniform1i);\n    }\n\n    beforeDraw(operation) {\n        let glTexture = this._otherTextureSource ? this._otherTextureSource.nativeTexture : null;\n\n        let gl = this.gl;\n        gl.activeTexture(gl.TEXTURE1);\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n        gl.activeTexture(gl.TEXTURE0);\n    }\n}\n\nFastBlurOutputShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform sampler2D uSampler2;\n    uniform float a;\n    void main(void){\n        if (a == 1.0) {\n            gl_FragColor = texture2D(uSampler2, vTextureCoord) * vColor;\n        } else {\n            gl_FragColor = ((1.0 - a) * texture2D(uSampler, vTextureCoord) + (a * texture2D(uSampler2, vTextureCoord))) * vColor;\n        }\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"../application/Component.mjs\";\nimport LinearBlurShader from \"../renderer/webgl/shaders/LinearBlurShader.mjs\";\nimport BoxBlurShader from \"../renderer/webgl/shaders/BoxBlurShader.mjs\";\nimport DefaultShader from \"../renderer/webgl/shaders/DefaultShader.mjs\";\n\nexport default class BloomComponent extends Component {\n\n    static _template() {\n        const onUpdate = function(element, elementCore) {\n            if ((elementCore._recalc & (2 + 128))) {\n                const w = elementCore.w;\n                const h = elementCore.h;\n                let cur = elementCore;\n                do {\n                    cur = cur._children[0];\n                    cur._element.w = w;\n                    cur._element.h = h;\n                } while(cur._children);\n            }\n        };\n\n        return {\n            Textwrap: {rtt: true, forceZIndexContext: true, renderOffscreen: true,\n                BloomBase: {shader: {type: BloomBaseShader},\n                    Content: {}\n                }\n            },\n            Layers: {\n                L0: {rtt: true, onUpdate: onUpdate, scale: 2, pivot: 0, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L1: {rtt: true, onUpdate: onUpdate, scale: 4, pivot: 0, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L2: {rtt: true, onUpdate: onUpdate, scale: 8, pivot: 0, visible: false, Content: {shader: {type: BoxBlurShader}}},\n                L3: {rtt: true, onUpdate: onUpdate, scale: 16, pivot: 0, visible: false, Content: {shader: {type: BoxBlurShader}}}\n            }\n        }\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n    constructor(stage) {\n        super(stage);\n        this._textwrap = this.sel(\"Textwrap\");\n        this._wrapper = this.sel(\"Textwrap.Content\");\n        this._layers = this.sel(\"Layers\");\n\n        this._amount = 0;\n        this._paddingX = 0;\n        this._paddingY = 0;\n    }\n\n    _build() {\n        const filterShaderSettings = [{x:1,y:0,kernelRadius:3},{x:0,y:1,kernelRadius:3},{x:1.5,y:0,kernelRadius:3},{x:0,y:1.5,kernelRadius:3}];\n        const filterShaders = filterShaderSettings.map(s => {\n            const shader = this.stage.createShader(Object.assign({type: LinearBlurShader}, s));\n            return shader;\n        });\n\n        this._setLayerTexture(this.getLayerContents(0), this._textwrap.getTexture(), []);\n        this._setLayerTexture(this.getLayerContents(1), this.getLayer(0).getTexture(), [filterShaders[0], filterShaders[1]]);\n\n        // Notice that 1.5 filters should be applied before 1.0 filters.\n        this._setLayerTexture(this.getLayerContents(2), this.getLayer(1).getTexture(), [filterShaders[0], filterShaders[1], filterShaders[2], filterShaders[3]]);\n        this._setLayerTexture(this.getLayerContents(3), this.getLayer(2).getTexture(), [filterShaders[0], filterShaders[1], filterShaders[2], filterShaders[3]]);\n    }\n\n    _setLayerTexture(element, texture, steps) {\n        if (!steps.length) {\n            element.texture = texture;\n        } else {\n            const step = steps.pop();\n            const child = element.stage.c({rtt: true, shader: step});\n\n            // Recurse.\n            this._setLayerTexture(child, texture, steps);\n\n            element.childList.add(child);\n        }\n        return element;\n    }\n\n    get content() {\n        return this.sel('Textwrap.Content');\n    }\n\n    set content(v) {\n        this.sel('Textwrap.Content').patch(v);\n    }\n\n    set padding(v) {\n        this._paddingX = v;\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    set paddingX(v) {\n        this._paddingX = v;\n        this._updateBlurSize();\n    }\n\n    set paddingY(v) {\n        this._paddingY = v;\n        this._updateBlurSize();\n    }\n\n    getLayer(i) {\n        return this._layers.sel(\"L\" + i);\n    }\n\n    getLayerContents(i) {\n        return this.getLayer(i).sel(\"Content\");\n    }\n\n    _onResize() {\n        this._updateBlurSize();\n    }\n\n    _updateBlurSize() {\n        let w = this.renderWidth;\n        let h = this.renderHeight;\n\n        let paddingX = this._paddingX;\n        let paddingY = this._paddingY;\n\n        let fw = w + paddingX * 2;\n        let fh = h + paddingY * 2;\n        this._textwrap.w = fw;\n        this._wrapper.x = paddingX;\n        this.getLayer(0).w = this.getLayerContents(0).w = fw / 2;\n        this.getLayer(1).w = this.getLayerContents(1).w = fw / 4;\n        this.getLayer(2).w = this.getLayerContents(2).w = fw / 8;\n        this.getLayer(3).w = this.getLayerContents(3).w = fw / 16;\n        this._textwrap.x = -paddingX;\n\n        this._textwrap.h = fh;\n        this._wrapper.y = paddingY;\n        this.getLayer(0).h = this.getLayerContents(0).h = fh / 2;\n        this.getLayer(1).h = this.getLayerContents(1).h = fh / 4;\n        this.getLayer(2).h = this.getLayerContents(2).h = fh / 8;\n        this.getLayer(3).h = this.getLayerContents(3).h = fh / 16;\n        this._textwrap.y = -paddingY;\n\n        this.w = w;\n        this.h = h;\n    }\n\n    /**\n     * Sets the amount of blur. A value between 0 and 4. Goes up exponentially for blur.\n     * Best results for non-fractional values.\n     * @param v;\n     */\n    set amount(v) {\n        this._amount = v;\n        this._update();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    _update() {\n        let v = Math.min(4, Math.max(0, this._amount));\n        if (v > 0) {\n            this.getLayer(0).visible = (v > 0);\n            this.getLayer(1).visible = (v > 1);\n            this.getLayer(2).visible = (v > 2);\n            this.getLayer(3).visible = (v > 3);\n        }\n    }\n\n    set shader(s) {\n        super.shader = s;\n        if (!this.renderToTexture) {\n            console.warn(\"[Lightning] Please enable renderToTexture to use with a shader.\");\n        }\n    }\n\n    _firstActive() {\n        this._build();\n    }\n\n}\n\nclass BloomBaseShader extends DefaultShader {\n}\n\nBloomBaseShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord) * vColor;\n        float m = max(max(color.r, color.g), color.b);\n        float c = max(0.0, (m - 0.80)) * 5.0;\n        color = color * c;\n        gl_FragColor = color;\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"../application/Component.mjs\";\n\nexport default class SmoothScaleComponent extends Component {\n\n    static _template() {\n        return {\n            ContentWrap: {renderOffscreen: true, forceZIndexContext: true, onAfterUpdate: SmoothScaleComponent._updateDimensions,\n                Content: {}\n            },\n            Scale: {visible: false}\n        }\n    }\n\n    constructor(stage) {\n        super(stage);\n\n        this._smoothScale = 1;\n        this._iterations = 0;\n    }\n\n    get content() {\n        return this.tag('Content');\n    }\n\n    set content(v) {\n        this.tag('Content').patch(v, true);\n    }\n\n    get smoothScale() {\n        return this._smoothScale;\n    }\n\n    set smoothScale(v) {\n        if (this._smoothScale !== v) {\n            let its = 0;\n            while(v < 0.5 && its < 12) {\n                its++;\n                v = v * 2;\n            }\n\n            this.scale = v;\n            this._setIterations(its);\n\n            this._smoothScale = v;\n        }\n    }\n\n    _setIterations(its) {\n        if (this._iterations !== its) {\n            const scalers = this.sel(\"Scale\").childList;\n            const content = this.sel(\"ContentWrap\");\n            while (scalers.length < its) {\n                const first = scalers.length === 0;\n                const texture = (first ? content.getTexture() : scalers.last.getTexture());\n                scalers.a({rtt: true, renderOffscreen: true, texture: texture});\n            }\n\n            SmoothScaleComponent._updateDimensions(this.tag(\"ContentWrap\"), true);\n\n            const useScalers = (its > 0);\n            this.patch({\n                ContentWrap: {renderToTexture: useScalers},\n                Scale: {visible: useScalers}\n            });\n\n            for (let i = 0, n = scalers.length; i < n; i++) {\n                scalers.getAt(i).patch({\n                    visible: i < its,\n                    renderOffscreen: i !== its - 1\n                });\n            }\n            this._iterations = its;\n        }\n    }\n\n    static _updateDimensions(contentWrap, force) {\n        const content = contentWrap.children[0];\n        let w = content.renderWidth;\n        let h = content.renderHeight;\n        if (w !== contentWrap.w || h !== contentWrap.h || force) {\n            contentWrap.w = w;\n            contentWrap.h = h;\n\n            const scalers = contentWrap.parent.tag(\"Scale\").children;\n            for (let i = 0, n = scalers.length; i < n; i++) {\n                w = w * 0.5;\n                h = h * 0.5;\n                scalers[i].w = w;\n                scalers[i].h = h;\n            }\n        }\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Component from \"../application/Component.mjs\";\n\nexport default class BorderComponent extends Component {\n\n    static _template() {\n        return {\n            Content: {},\n            Borders: {\n                Top: {rect: true, visible: false, mountY: 1},\n                Right: {rect: true, visible: false},\n                Bottom: {rect: true, visible: false},\n                Left: {rect: true, visible: false, mountX: 1}\n            }\n        };\n    }\n\n    get _signalProxy() {\n        return true;\n    }\n\n    constructor(stage) {\n        super(stage);\n\n        this._borderTop = this.tag(\"Top\");\n        this._borderRight = this.tag(\"Right\");\n        this._borderBottom = this.tag(\"Bottom\");\n        this._borderLeft = this.tag(\"Left\");\n\n        this.onAfterUpdate = function (element) {\n            const content = element.childList.first;\n            let w = element.core.w || content.renderWidth;\n            let h = element.core.h || content.renderHeight;\n            element._borderTop.w = w;\n            element._borderBottom.y = h;\n            element._borderBottom.w = w;\n            element._borderLeft.h = h + element._borderTop.h + element._borderBottom.h;\n            element._borderLeft.y = -element._borderTop.h;\n            element._borderRight.x = w;\n            element._borderRight.h = h + element._borderTop.h + element._borderBottom.h;\n            element._borderRight.y = -element._borderTop.h;\n        };\n\n        this.borderWidth = 1;\n    }\n\n    get content() {\n        return this.sel('Content');\n    }\n\n    set content(v) {\n        this.sel('Content').patch(v, true);\n    }\n\n    get borderWidth() {\n        return this.borderWidthTop;\n    }\n\n    get borderWidthTop() {\n        return this._borderTop.h;\n    }\n\n    get borderWidthRight() {\n        return this._borderRight.w;\n    }\n\n    get borderWidthBottom() {\n        return this._borderBottom.h;\n    }\n\n    get borderWidthLeft() {\n        return this._borderLeft.w;\n    }\n\n    set borderWidth(v) {\n        this.borderWidthTop = v;\n        this.borderWidthRight = v;\n        this.borderWidthBottom = v;\n        this.borderWidthLeft = v;\n    }\n\n    set borderWidthTop(v) {\n        this._borderTop.h = v;\n        this._borderTop.visible = (v > 0);\n    }\n\n    set borderWidthRight(v) {\n        this._borderRight.w = v;\n        this._borderRight.visible = (v > 0);\n    }\n\n    set borderWidthBottom(v) {\n        this._borderBottom.h = v;\n        this._borderBottom.visible = (v > 0);\n    }\n\n    set borderWidthLeft(v) {\n        this._borderLeft.w = v;\n        this._borderLeft.visible = (v > 0);\n    }\n\n    get colorBorder() {\n        return this.colorBorderTop;\n    }\n\n    get colorBorderTop() {\n        return this._borderTop.color;\n    }\n\n    get colorBorderRight() {\n        return this._borderRight.color;\n    }\n\n    get colorBorderBottom() {\n        return this._borderBottom.color;\n    }\n\n    get colorBorderLeft() {\n        return this._borderLeft.color;\n    }\n\n    set colorBorder(v) {\n        this.colorBorderTop = v;\n        this.colorBorderRight = v;\n        this.colorBorderBottom = v;\n        this.colorBorderLeft = v;\n    }\n\n    set colorBorderTop(v) {\n        this._borderTop.color = v;\n    }\n\n    set colorBorderRight(v) {\n        this._borderRight.color = v;\n    }\n\n    set colorBorderBottom(v) {\n        this._borderBottom.color = v;\n    }\n\n    set colorBorderLeft(v) {\n        this._borderLeft.color = v;\n    }\n\n    get borderTop() {\n        return this._borderTop;\n    }\n\n    set borderTop(settings) {\n        this.borderTop.patch(settings);\n    }\n\n    get borderRight() {\n        return this._borderRight;\n    }\n\n    set borderRight(settings) {\n        this.borderRight.patch(settings);\n    }\n\n    get borderBottom() {\n        return this._borderBottom;\n    }\n\n    set borderBottom(settings) {\n        this.borderBottom.patch(settings);\n    }\n\n    get borderLeft() {\n        return this._borderLeft;\n    }\n\n    set borderLeft(settings) {\n        this.borderLeft.patch(settings);\n    }\n\n    set borders(settings) {\n        this.borderTop = settings;\n        this.borderLeft = settings;\n        this.borderBottom = settings;\n        this.borderRight = settings;\n    }\n\n}\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport C2dDefaultShader from \"../../c2d/shaders/DefaultShader.mjs\";\nimport WebGLDefaultShader from \"../../webgl/shaders/DefaultShader.mjs\";\n\nexport class WebGLGrayscaleShader extends WebGLDefaultShader {\n\n    constructor(context) {\n        super(context);\n        this._amount = 1;\n    }\n\n    static getC2d() {\n        return C2dGrayscaleShader;\n    }\n\n\n    set amount(v) {\n        this._amount = v;\n        this.redraw();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"amount\", this._amount, this.gl.uniform1f);\n    }\n\n}\n\nWebGLGrayscaleShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform float amount;\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord) * vColor;\n        float grayness = 0.2 * color.r + 0.6 * color.g + 0.2 * color.b;\n        gl_FragColor = vec4(amount * vec3(grayness, grayness, grayness) + (1.0 - amount) * color.rgb, color.a);\n    }\n`;\n\nexport class C2dGrayscaleShader extends C2dDefaultShader {\n\n    constructor(context) {\n        super(context);\n        this._amount = 1;\n    }\n\n    static getWebGL() {\n        return WebGLGrayscaleShader;\n    }\n\n\n    set amount(v) {\n        this._amount = v;\n        this.redraw();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    _beforeDrawEl({target}) {\n        target.ctx.filter = \"grayscale(\" + this._amount + \")\";\n    }\n\n    _afterDrawEl({target}) {\n        target.ctx.filter = \"none\";\n    }\n\n}\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport NoiseTexture from \"../../../textures/NoiseTexture.mjs\";\nimport DefaultShader from \"./DefaultShader.mjs\";\n\n/**\n * This shader can be used to fix a problem that is known as 'gradient banding'.\n */\nexport default class DitheringShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._noiseTexture = new NoiseTexture(ctx.stage);\n\n        this._graining = 1/256;\n\n        this._random = false;\n    }\n\n    set graining(v) {\n        this._graining = v;\n        this.redraw();\n    }\n\n    set random(v) {\n        this._random = v;\n        this.redraw();\n    }\n\n    setExtraAttribsInBuffer(operation) {\n        // Make sure that the noise texture is uploaded to the GPU.\n        this._noiseTexture.load();\n\n        let offset = operation.extraAttribsDataByteOffset / 4;\n        let floats = operation.quads.floats;\n\n        let length = operation.length;\n\n        for (let i = 0; i < length; i++) {\n\n            // Calculate noise texture coordinates so that it spans the full element.\n            let brx = operation.getElementWidth(i) / this._noiseTexture.getRenderWidth();\n            let bry = operation.getElementHeight(i) / this._noiseTexture.getRenderHeight();\n\n            let ulx = 0;\n            let uly = 0;\n            if (this._random) {\n                ulx = Math.random();\n                uly = Math.random();\n\n                brx += ulx;\n                bry += uly;\n\n                if (Math.random() < 0.5) {\n                    // Flip for more randomness.\n                    const t = ulx;\n                    ulx = brx;\n                    brx = t;\n                }\n\n                if (Math.random() < 0.5) {\n                    // Flip for more randomness.\n                    const t = uly;\n                    uly = bry;\n                    bry = t;\n                }\n            }\n\n            // Specify all corner points.\n            floats[offset] = ulx;\n            floats[offset + 1] = uly;\n\n            floats[offset + 2] = brx;\n            floats[offset + 3] = uly;\n\n            floats[offset + 4] = brx;\n            floats[offset + 5] = bry;\n\n            floats[offset + 6] = ulx;\n            floats[offset + 7] = bry;\n\n            offset += 8;\n        }\n    }\n\n    beforeDraw(operation) {\n        let gl = this.gl;\n        gl.vertexAttribPointer(this._attrib(\"aNoiseTextureCoord\"), 2, gl.FLOAT, false, 8, this.getVertexAttribPointerOffset(operation));\n\n        let glTexture = this._noiseTexture.source.nativeTexture;\n        gl.activeTexture(gl.TEXTURE1);\n        gl.bindTexture(gl.TEXTURE_2D, glTexture);\n        gl.activeTexture(gl.TEXTURE0);\n    }\n\n    getExtraAttribBytesPerVertex() {\n        return 8;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"uNoiseSampler\", 1, this.gl.uniform1i);\n        this._setUniform(\"graining\", 2 * this._graining, this.gl.uniform1f);\n    }\n\n    enableAttribs() {\n        super.enableAttribs();\n        let gl = this.gl;\n        gl.enableVertexAttribArray(this._attrib(\"aNoiseTextureCoord\"));\n    }\n\n    disableAttribs() {\n        super.disableAttribs();\n        let gl = this.gl;\n        gl.disableVertexAttribArray(this._attrib(\"aNoiseTextureCoord\"));\n    }\n\n    useDefault() {\n        return this._graining === 0;\n    }\n\n    afterDraw(operation) {\n        if (this._random) {\n            this.redraw();\n        }\n    }\n\n}\n\nDitheringShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec2 aNoiseTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec2 vNoiseTextureCoord;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vNoiseTextureCoord = aNoiseTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nDitheringShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec2 vNoiseTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform sampler2D uNoiseSampler;\n    uniform float graining;\n    void main(void){\n        vec4 noise = texture2D(uNoiseSampler, vNoiseTextureCoord);\n        vec4 color = texture2D(uSampler, vTextureCoord);\n        gl_FragColor = (color * vColor) + graining * (noise.r - 0.5);\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Utils from \"../../../tree/Utils.mjs\";\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class CircularPushShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._inputValue = 0;\n\n        this._maxDerivative = 0.01;\n\n        this._normalizedValue = 0;\n\n        // The offset between buckets. A value between 0 and 1.\n        this._offset = 0;\n\n        this._amount = 0.1;\n\n        this._aspectRatio = 1;\n\n        this._offsetX = 0;\n\n        this._offsetY = 0;\n\n        this.buckets = 100;\n    }\n\n    get aspectRatio() {\n        return this._aspectRatio;\n    }\n\n    set aspectRatio(v) {\n        this._aspectRatio = v;\n        this.redraw();\n    }\n\n    get offsetX() {\n        return this._offsetX;\n    }\n\n    set offsetX(v) {\n        this._offsetX = v;\n        this.redraw();\n    }\n\n    get offsetY() {\n        return this._offsetY;\n    }\n\n    set offsetY(v) {\n        this._offsetY = v;\n        this.redraw();\n    }\n\n    set amount(v) {\n        this._amount = v;\n        this.redraw();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    set inputValue(v) {\n        this._inputValue = v;\n    }\n\n    get inputValue() {\n        return this._inputValue;\n    }\n\n    set maxDerivative(v) {\n        this._maxDerivative = v;\n    }\n\n    get maxDerivative() {\n        return this._maxDerivative;\n    }\n\n    set buckets(v) {\n        if (v > 100) {\n            console.warn(\"[Lightning] CircularPushShader: supports max 100 buckets\");\n            v = 100;\n        }\n\n        // This should be set before starting.\n        this._buckets = v;\n\n        // Init values array in the correct length.\n        this._values = new Uint8Array(this._getValues(v));\n\n        this.redraw();\n    }\n\n    get buckets() {\n        return this._buckets;\n    }\n\n    _getValues(n) {\n        const v = [];\n        for (let i = 0; i < n; i++) {\n            v.push(this._inputValue);\n        }\n        return v;\n    }\n\n    /**\n     * Progresses the shader with the specified (fractional) number of buckets.\n     * @param {number} o;\n     *   A number from 0 to 1 (1 = all buckets).\n     */\n    progress(o) {\n        this._offset += o * this._buckets;\n        const full = Math.floor(this._offset);\n        this._offset -= full;\n        this._shiftBuckets(full);\n        this.redraw();\n    }\n\n    _shiftBuckets(n) {\n        for (let i = this._buckets - 1; i >= 0; i--) {\n            const targetIndex = i - n;\n            if (targetIndex < 0) {\n                this._normalizedValue = Math.min(this._normalizedValue + this._maxDerivative, Math.max(this._normalizedValue - this._maxDerivative, this._inputValue));\n                this._values[i] = 255 * this._normalizedValue;\n            } else {\n                this._values[i] = this._values[targetIndex];\n            }\n        }\n    }\n\n    set offset(v) {\n        this._offset = v;\n        this.redraw();\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"aspectRatio\", this._aspectRatio, this.gl.uniform1f);\n        this._setUniform(\"offsetX\", this._offsetX, this.gl.uniform1f);\n        this._setUniform(\"offsetY\", this._offsetY, this.gl.uniform1f);\n        this._setUniform(\"amount\", this._amount, this.gl.uniform1f);\n        this._setUniform(\"offset\", this._offset, this.gl.uniform1f);\n        this._setUniform(\"buckets\", this._buckets, this.gl.uniform1f);\n        this._setUniform(\"uValueSampler\", 1, this.gl.uniform1i);\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    beforeDraw(operation) {\n        const gl = this.gl;\n        gl.activeTexture(gl.TEXTURE1);\n        if (!this._valuesTexture) {\n            this._valuesTexture = gl.createTexture();\n            gl.bindTexture(gl.TEXTURE_2D, this._valuesTexture);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n            if (Utils.isNode) {\n                gl.pixelStorei(gl.UNPACK_FLIP_BLUE_RED, false);\n            }\n            gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        } else {\n            gl.bindTexture(gl.TEXTURE_2D, this._valuesTexture);\n        }\n\n        // Upload new values.\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.ALPHA, this._buckets, 1, 0, gl.ALPHA, gl.UNSIGNED_BYTE, this._values);\n        gl.activeTexture(gl.TEXTURE0);\n    }\n\n    cleanup() {\n        if (this._valuesTexture) {\n            this.gl.deleteTexture(this._valuesTexture);\n        }\n    }\n\n\n}\n\nCircularPushShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    uniform float offsetX;\n    uniform float offsetY;\n    uniform float aspectRatio;\n    varying vec2 vTextureCoord;\n    varying vec2 vPos;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vPos = vTextureCoord * 2.0 - 1.0;\n        vPos.y = vPos.y * aspectRatio;\n        vPos.y = vPos.y + offsetY;\n        vPos.x = vPos.x + offsetX;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nCircularPushShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec2 vPos;\n    uniform float amount;\n    uniform float offset;\n    uniform float values[100];\n    uniform float buckets;\n    uniform sampler2D uSampler;\n    uniform sampler2D uValueSampler;\n    void main(void){\n        float l = length(vPos);\n        float m = (l * buckets * 0.678 - offset) / buckets;\n        float f = texture2D(uValueSampler, vec2(m, 0.0)).a * amount;\n        vec2 unit = vPos / l;\n        gl_FragColor = texture2D(uSampler, vTextureCoord - f * unit) * vColor;\n    }\n`;\n\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class InversionShader extends DefaultShader {\n\n    constructor(context) {\n        super(context);\n        this._amount = 1;\n    }\n\n    set amount(v) {\n        this._amount = v;\n        this.redraw();\n    }\n\n    get amount() {\n        return this._amount;\n    }\n\n    useDefault() {\n        return this._amount === 0;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        this._setUniform(\"amount\", this._amount, this.gl.uniform1f);\n    }\n\n}\n\nInversionShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform float amount;\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord);\n        color.rgb = color.rgb * (1.0 - amount) + amount * (1.0 * color.a - color.rgb); \n        gl_FragColor = color * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class OutlineShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n        this._width = 5;\n        this._col = 0xFFFFFFFF;\n        this._color = [1,1,1,1];\n    }\n\n    set width(v) {\n        this._width = v;\n        this.redraw();\n    }\n\n    get color() {\n        return this._col;\n    }\n\n    set color(v) {\n        if (this._col !== v) {\n            const col = StageUtils.getRgbaComponentsNormalized(v);\n            col[0] = col[0] * col[3];\n            col[1] = col[1] * col[3];\n            col[2] = col[2] * col[3];\n\n            this._color = col;\n\n            this.redraw();\n\n            this._col = v;\n        }\n    }\n\n    useDefault() {\n        return (this._width === 0 || this._col[3] === 0);\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        let gl = this.gl;\n        this._setUniform(\"color\", new Float32Array(this._color), gl.uniform4fv);\n    }\n\n    enableAttribs() {\n        super.enableAttribs();\n        this.gl.enableVertexAttribArray(this._attrib(\"aCorner\"));\n    }\n\n    disableAttribs() {\n        super.disableAttribs();\n        this.gl.disableVertexAttribArray(this._attrib(\"aCorner\"));\n    }\n\n    setExtraAttribsInBuffer(operation) {\n        let offset = operation.extraAttribsDataByteOffset / 4;\n        let floats = operation.quads.floats;\n\n        let length = operation.length;\n\n        for (let i = 0; i < length; i++) {\n\n            const elementCore = operation.getElementCore(i);\n\n            // We are setting attributes such that if the value is < 0 or > 1, a border should be drawn.\n            const ddw = this._width / elementCore.w;\n            const dw = ddw / (1 - 2 * ddw);\n            const ddh = this._width / elementCore.h;\n            const dh = ddh / (1 - 2 * ddh);\n\n            // Specify all corner points.\n            floats[offset] = -dw;\n            floats[offset + 1] = -dh;\n\n            floats[offset + 2] = 1 + dw;\n            floats[offset + 3] = -dh;\n\n            floats[offset + 4] = 1 + dw;\n            floats[offset + 5] = 1 + dh;\n\n            floats[offset + 6] = -dw;\n            floats[offset + 7] = 1 + dh;\n\n            offset += 8;\n        }\n    }\n\n    beforeDraw(operation) {\n        let gl = this.gl;\n        gl.vertexAttribPointer(this._attrib(\"aCorner\"), 2, gl.FLOAT, false, 8, this.getVertexAttribPointerOffset(operation));\n    }\n\n    getExtraAttribBytesPerVertex() {\n        return 8;\n    }\n\n}\n\nOutlineShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    attribute vec2 aCorner;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec2 vCorner;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vCorner = aCorner;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nOutlineShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec2 vCorner;\n    uniform vec4 color;\n    uniform sampler2D uSampler;\n    void main(void){\n        vec2 m = min(vCorner, 1.0 - vCorner);\n        float value = step(0.0, min(m.x, m.y));\n        gl_FragColor = mix(color, texture2D(uSampler, vTextureCoord) * vColor, value);\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\n/**\n * @see https://github.com/pixijs/pixi-filters/tree/master/filters/pixelate/src\n */\nexport default class PixelateShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._size = new Float32Array([4, 4]);\n    }\n\n    get x() {\n        return this._size[0];\n    }\n\n    set x(v) {\n        this._size[0] = v;\n        this.redraw();\n    }\n\n    get y() {\n        return this._size[1];\n    }\n\n    set y(v) {\n        this._size[1] = v;\n        this.redraw();\n    }\n\n    get size() {\n        return this._size[0];\n    }\n\n    set size(v) {\n        this._size[0] = v;\n        this._size[1] = v;\n        this.redraw();\n    }\n\n    useDefault() {\n        return ((this._size[0] === 0) && (this._size[1] === 0));\n    }\n\n    static getWebGLImpl() {\n        return WebGLPixelateShaderImpl;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        let gl = this.gl;\n        this._setUniform(\"size\", new Float32Array(this._size), gl.uniform2fv);\n    }\n\n    getExtraAttribBytesPerVertex() {\n        return 8;\n    }\n\n    enableAttribs() {\n        super.enableAttribs();\n        this.gl.enableVertexAttribArray(this._attrib(\"aTextureRes\"));\n    }\n\n    disableAttribs() {\n        super.disableAttribs();\n        this.gl.disableVertexAttribArray(this._attrib(\"aTextureRes\"));\n    }\n\n    setExtraAttribsInBuffer(operation) {\n        let offset = operation.extraAttribsDataByteOffset / 4;\n        let floats = operation.quads.floats;\n\n        let length = operation.length;\n        for (let i = 0; i < length; i++) {\n            let w = operation.quads.getTextureWidth(operation.index + i);\n            let h = operation.quads.getTextureHeight(operation.index + i);\n\n            floats[offset] = w;\n            floats[offset + 1] = h;\n            floats[offset + 2] = w;\n            floats[offset + 3] = h;\n            floats[offset + 4] = w;\n            floats[offset + 5] = h;\n            floats[offset + 6] = w;\n            floats[offset + 7] = h;\n\n            offset += 8;\n        }\n    }\n\n    beforeDraw(operation) {\n        let gl = this.gl;\n        gl.vertexAttribPointer(this._attrib(\"aTextureRes\"), 2, gl.FLOAT, false, this.getExtraAttribBytesPerVertex(), this.getVertexAttribPointerOffset(operation));\n    }\n}\n\nPixelateShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    attribute vec2 aTextureRes;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec2 vTextureRes;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        vTextureRes = aTextureRes;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nPixelateShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec2 vTextureRes;\n\n    uniform vec2 size;\n    uniform sampler2D uSampler;\n    \n    vec2 mapCoord( vec2 coord )\n    {\n        coord *= vTextureRes.xy;\n        return coord;\n    }\n    \n    vec2 unmapCoord( vec2 coord )\n    {\n        coord /= vTextureRes.xy;\n        return coord;\n    }\n    \n    vec2 pixelate(vec2 coord, vec2 size)\n    {\n        return floor( coord / size ) * size;\n    }\n    \n    void main(void)\n    {\n        vec2 coord = mapCoord(vTextureCoord);\n        coord = pixelate(coord, size);\n        coord = unmapCoord(coord);\n        gl_FragColor = texture2D(uSampler, coord) * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class RadialFilterShader extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._radius = 0;\n        this._cutoff = 1;\n    }\n\n    set radius(v) {\n        this._radius = v;\n        this.redraw();\n    }\n\n    get radius() {\n        return this._radius;\n    }\n\n    set cutoff(v) {\n        this._cutoff = v;\n        this.redraw();\n    }\n\n    get cutoff() {\n        return this._cutoff;\n    }\n    \n    useDefault() {\n        return this._radius === 0;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        // We substract half a pixel to get a better cutoff effect.\n        this._setUniform(\"radius\", 2 * (this._radius - 0.5) / operation.getRenderWidth(), this.gl.uniform1f);\n        this._setUniform(\"cutoff\", 0.5 * operation.getRenderWidth() / this._cutoff, this.gl.uniform1f);\n    }\n\n}\n\nRadialFilterShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 pos;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n        pos = gl_Position.xy;\n    }\n`;\n\nRadialFilterShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec2 pos;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform float radius;\n    uniform float cutoff;\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord);\n        float f = max(0.0, min(1.0, 1.0 - (length(pos) - radius) * cutoff));\n        gl_FragColor = texture2D(uSampler, vTextureCoord) * vColor * f;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\n\nexport default class RoundedRectangleShader extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._blend = 0;\n        this._radius = [1, 1, 1, 1];\n        this._stroke = 0;\n        this._fc = 0x00ffffff;\n        this._fillColor = this._getNormalizedColor(0xffffffff);\n        this._strokeColor = this._getNormalizedColor(0x00ffffff);\n    }\n\n    set blend(p) {\n        this._blend = Math.min(Math.max(p, 0), 1);\n    }\n\n    get blend() {\n        return this._blend;\n    }\n\n    set radius(v) {\n        if(Array.isArray(v)) {\n            if(v.length === 2) {\n                this._radius = [v[0], v[1], v[0], v[1]];\n            }\n            else if(v.length === 3) {\n                this._radius = [v[0], v[1], v[2], this._radius[3]];\n            }\n            else if (v.length === 4) {\n                this._radius = v;\n            }\n            else {\n                this._radius = [v[0], v[0], v[0], v[0]];\n            }\n        }\n        else {\n            this._radius = [v, v, v, v];\n        }\n        this.redraw();\n    }\n\n    get radius() {\n        return this._radius;\n    }\n\n    set topLeft(num) {\n        this._radius[0] = num;\n        this.redraw();\n    }\n\n    get topLeft() {\n        return this._radius[0];\n    }\n\n    set topRight(num) {\n        this._radius[1] = num;\n        this.redraw();\n    }\n\n    get topRight() {\n        return this._radius[1];\n    }\n\n    set bottomRight(num) {\n        this._radius[2] = num;\n        this.redraw();\n    }\n\n    get bottomRight() {\n        return this._radius[2];\n    }\n\n    set bottomLeft(num) {\n        this._radius[3] = num;\n        this.redraw();\n    }\n\n    get bottomLeft() {\n        return this._radius[3];\n    }\n\n    set strokeColor(argb) {\n        this._sc = argb;\n        this._strokeColor = this._getNormalizedColor(argb);\n        this.redraw();\n    }\n\n    get strokeColor() {\n        return this._sc;\n    }\n\n    set fillColor(argb) {\n        this._fc = argb;\n        this._fillColor = this._getNormalizedColor(argb);\n        this.redraw();\n    }\n\n    get fillColor() {\n        return this._fc;\n    }\n\n    set stroke(num) {\n        this._stroke = num;\n        this.redraw();\n    }\n\n    get stroke() {\n        return this._stroke;\n    }\n\n    _getNormalizedColor(color) {\n        const col = StageUtils.getRgbaComponentsNormalized(color);\n        col[0] *= col[3];\n        col[1] *= col[3];\n        col[2] *= col[3];\n        return new Float32Array(col);\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const owner = operation.shaderOwner;\n        const renderPrecision = this.ctx.stage.getRenderPrecision();\n        const _radius = this._radius.map((r) => (r + 0.5) * renderPrecision)\n        this._setUniform('radius', new Float32Array(_radius), this.gl.uniform4fv);\n        this._setUniform('alpha', operation.getElementCore(0).renderContext.alpha, this.gl.uniform1f);\n        this._setUniform('blend', this._blend, this.gl.uniform1f);\n        this._setUniform('strokeColor', this._strokeColor, this.gl.uniform4fv);\n        this._setUniform('fillColor', this._fillColor, this.gl.uniform4fv);\n        this._setUniform('stroke',  this._stroke * renderPrecision, this.gl.uniform1f);\n        this._setUniform('resolution', new Float32Array([owner._w * renderPrecision, owner._h * renderPrecision]), this.gl.uniform2fv);\n    }\n}\n\nRoundedRectangleShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n\n    void main(void){\n        gl_Position = vec4(aVertexPosition.x * projection.x - 1.0, aVertexPosition.y * -abs(projection.y) + 1.0, 0.0, 1.0);\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nRoundedRectangleShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n\n    #define PI 3.14159265359\n\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n\n    uniform sampler2D uSampler;\n    uniform vec2 resolution;\n    uniform vec4 radius;\n    uniform float stroke;\n    uniform vec4 strokeColor;\n    uniform vec4 fillColor;\n    uniform float alpha;\n    uniform float fill;\n    uniform float blend;\n    \n    float boxDist(vec2 p, vec2 size, float radius){\n        size -= vec2(radius);\n        vec2 d = abs(p) - size;\n        return min(max(d.x, d.y), 0.0) + length(max(d, 0.0)) - radius;\n    }\n    \n    float fillMask(float dist){\n        return clamp(-dist, 0.0, 1.0);\n    }\n    \n    float innerBorderMask(float dist, float width){\n        float alpha1 = clamp(dist + width, 0.0, 1.0);\n        float alpha2 = clamp(dist, 0.0, 1.0);\n        return alpha1 - alpha2;\n    }\n\n    void main() {\n        vec2 halfRes = 0.5 * resolution.xy;\n        float r = 0.0;\n        if (vTextureCoord.x < 0.5 && vTextureCoord.y < 0.5) {\n            r = radius[0];\n        } else if (vTextureCoord.x >= 0.5 && vTextureCoord.y < 0.5) {\n            r = radius[1];\n        } else if (vTextureCoord.x >= 0.5 && vTextureCoord.y >= 0.5) {\n            r = radius[2];\n        } else {\n            r = radius[3];\n        }\n        \n        float b = boxDist(vTextureCoord.xy * resolution - halfRes, halfRes - 0.005, r);\n        vec4 tex = texture2D(uSampler, vTextureCoord) * vColor;\n        vec4 blend = mix(vec4(1.0) * alpha, tex, blend);     \n        vec4 layer1 = mix(vec4(0.0), tex * fillColor, fillMask(b));\n        gl_FragColor = mix(layer1, blend * strokeColor, innerBorderMask(b + 1.0, stroke));\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from './DefaultShader.mjs';\n\nexport default class FadeOutShader extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._fade = [0, 0, 0, 0];\n    }\n\n    set top(num) {\n        this._fade[0] = num;\n        this.redraw();\n    }\n\n    get top() {\n        return this._fade[0];\n    }\n\n    set right(num) {\n        this._fade[1] = num;\n        this.redraw();\n    }\n\n    get right() {\n        return this._fade[1];\n    }\n\n    set bottom(num) {\n        this._fade[2] = num;\n        this.redraw();\n    }\n\n    get bottom() {\n        return this._fade[2];\n    }\n\n    set left(num) {\n        this._fade[3] = num;\n        this.redraw();\n    }\n\n    get left() {\n        return this._fade[3];\n    }\n\n    set fade(v) {\n        if(Array.isArray(v)) {\n            if(v.length === 2) {\n                this._fade = [v[0], v[1], v[0], v[1]];\n            }\n            else if(v.length === 3) {\n                this._fade = [v[0], v[1], v[2], this._fade[3]];\n            }\n            else if (v.length === 4) {\n                this._fade = v;\n            }\n            else {\n                this._fade = [v[0], v[0], v[0], v[0]];\n            }\n        }\n        else {\n            this._fade = [v, v, v, v];\n        }\n        this.redraw();\n    }\n\n    get fade() {\n        return this._fade;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const owner = operation.shaderOwner;\n\n        const renderPrecision = this.ctx.stage.getRenderPrecision();\n        const fade = this._fade.map((f) => f * renderPrecision);\n        this._setUniform('fade',  new Float32Array(fade), this.gl.uniform4fv);\n        this._setUniform('resolution', new Float32Array([owner._w * renderPrecision, owner._h * renderPrecision]), this.gl.uniform2fv);\n    }\n}\n\nFadeOutShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform vec2 resolution;\n    uniform vec4 fade;\n    \n    void main() {\n        vec4 color = texture2D(uSampler, vTextureCoord) * vColor;\n        vec2 halfRes = 0.5 * resolution.xy;\n        vec2 point = vTextureCoord.xy * resolution.xy;\n        \n        vec2 pos1;\n        vec2 pos2;\n        vec2 d;\n        float c;\n        float t = 0.0;\n             \n        if(fade[0] > 0.0) {\n            pos1 = vec2(point.x, point.y);\n            pos2 = vec2(point.x, point.y + fade[0]);\n            d = pos2 - pos1;\n            c = dot(pos1, d) / dot(d, d);\n            t = smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0));\n            color = mix(vec4(0.0), color, t);\n        }\n        \n        if(fade[1] > 0.0) {\n            vec2 pos1 = vec2(point.x - resolution.x - fade[1], vTextureCoord.y);\n            vec2 pos2 = vec2(point.x - resolution.x, vTextureCoord.y);\n            d = pos1 - pos2;\n            c = dot(pos2, d) / dot(d, d);\n            t = smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0));\n            color = mix(vec4(0.0), color, t);\n        }\n        \n        if(fade[2] > 0.0) {\n            vec2 pos1 = vec2(vTextureCoord.x, point.y - resolution.y - fade[2]);\n            vec2 pos2 = vec2(vTextureCoord.x, point.y - resolution.y);\n            d = pos1 - pos2;\n            c = dot(pos2, d) / dot(d, d);\n            t = smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0));\n            color = mix(vec4(0.0), color, t);\n        }\n        \n        if(fade[3] > 0.0) {\n            pos1 = vec2(point.x, point.y);\n            pos2 = vec2(point.x + fade[3], point.y);\n            d = pos2 - pos1;\n            c = dot(pos1, d) / dot(d, d);\n            t = smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0));\n            color = mix(vec4(0.0), color, t);\n        }\n        \n        gl_FragColor = color;\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class VignetteShader extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._magnitude = 1.3;\n        this._intensity = 0.7;\n        this._pivot = [0.5, 0.5];\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n\n        this._setUniform(\"magnitude\", this._magnitude , this.gl.uniform1f);\n        this._setUniform(\"intensity\", this._intensity, this.gl.uniform1f);\n        this._setUniform('pivot', new Float32Array(this._pivot), this.gl.uniform2fv);\n        this.redraw()\n    }\n\n    set pivot(v) {\n        if(Array.isArray(v)) {\n            this._pivot = v;\n        }\n        else {\n            this._pivot = [v, v];\n        }\n        this.redraw();\n    }\n\n    get pivotX() {\n        return this._pivot[0];\n    }\n\n    set pivotX(v) {\n        this._pivot[0] = v;\n        this.redraw();\n    }\n\n    get pivotY() {\n        return this._pivot[1];\n    }\n\n    set pivotY(v) {\n        this._pivot[1] = v;\n        this.redraw();\n    }\n\n    get intensity() {\n        return this._intensity;\n    }\n\n    set intensity(v) {\n        this._intensity = v;\n        this.redraw();\n    }\n\n    get magnitude() {\n        return this._magnitude;\n\n    }\n\n    set magnitude(v) {\n        this._magnitude = v;\n        this.redraw();\n    }\n}\n\nVignetteShader.vertexShaderSource = DefaultShader.vertexShaderSource;\n\nVignetteShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n\n    uniform float magnitude;\n    uniform float intensity;\n    uniform vec2 pivot;\n\n    void main() {\n        vec2 uv = vTextureCoord.xy - pivot + vec2(0.5);\n        uv.x = clamp(uv.x, 0.0, 1.0);\n        uv.y = clamp(uv.y, 0.0, 1.0);\n   \n        uv *=  1.00 - uv.yx;\n        float vig = uv.x * uv.y * 25.0 * intensity;\n        vig = pow(vig, 0.45 * magnitude);\n        vec4 fragColor = vec4(vig) * vColor;\n        gl_FragColor = texture2D(uSampler, vTextureCoord) * fragColor;\n\n    }\n`\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\nimport StageUtils from '../../../tree/StageUtils.mjs'\n\nexport default class SpinnerShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n        this._radius = 100;\n        this._width = 50;\n        this._period = 1;\n        this._angle = 0.5;\n        this._smooth = 0.005;\n        this._color = 0xffffffff;\n        this._backgroundColor = 0xff000000;\n        this._time = Date.now();\n    }\n\n    set radius(v) {\n        this._radius = v;\n        this.redraw();\n    }\n\n    set width(v) {\n        this._width = v;\n        this.redraw();\n    }\n\n    set period(v) {\n        this._period = v;\n        this.redraw();\n    }\n\n    set angle(v) {\n        this._angle = v\n        this.redraw();\n    }\n\n    set smooth(v) {\n        this._smooth = v;\n        this.redraw();\n    }\n\n    set color(v) {\n        this._color = v;\n        this.redraw();\n    }\n\n    set backgroundColor(v) {\n        this._backgroundColor = v;\n        this.redraw();\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const owner = operation.shaderOwner\n\n        this._setUniform(\"iTime\", Date.now() - this._time, this.gl.uniform1f);\n\n        const renderPrecision = this.ctx.stage.getRenderPrecision();\n        this._setUniform('radius', this._radius * renderPrecision, this.gl.uniform1f);\n        this._setUniform('width', this._width * renderPrecision, this.gl.uniform1f);\n        this._setUniform('period', this._period, this.gl.uniform1f);\n        this._setUniform('angle', this._angle, this.gl.uniform1f);\n        this._setUniform('smooth', this._smooth, this.gl.uniform1f);\n        this._setUniform('color', new Float32Array(StageUtils.getRgbaComponentsNormalized(this._color)), this.gl.uniform4fv);\n        this._setUniform('backgroundColor', new Float32Array(StageUtils.getRgbaComponentsNormalized(this._backgroundColor)), this.gl.uniform4fv);\n        this._setUniform('resolution', new Float32Array([owner._w * renderPrecision, owner._h * renderPrecision]), this.gl.uniform2fv)\n\n        this.redraw()\n    }\n}\n\nSpinnerShader.vertexShaderSource = DefaultShader.vertexShaderSource;\n\nSpinnerShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n\n    uniform float iTime;\n    uniform float radius;\n    uniform float width;\n    uniform float period;\n    uniform float angle;\n    uniform float smooth;\n    uniform vec2 resolution;\n\n    uniform vec4 color;\n    uniform vec4 backgroundColor;\n\n    float ratio = resolution.y / resolution.x;\n\n    vec2 transpose_pos(vec2 pos) {\n        if (ratio < 1.) {\n            float diff = 0.5 - pos.x;\n            pos.x = 0.5 - diff / ratio;\n        } else {\n            float diff = 0.5 - pos.y;\n            pos.y = 0.5 - diff * ratio;\n        }\n        return pos;\n    }\n\n    float get_angle(vec2 pos) {\n        pos = transpose_pos(pos);\n        float a = atan(pos.y - 0.5, pos.x - 0.5);\n        a = (1.0+a/3.14159)/2.0;\n        \n        return a;\n    }\n\n    float dist(vec2 pos1, vec2 pos2) {\n        pos1 = transpose_pos(pos1);\n        return distance(pos1, pos2);\n    }\n\n    void main()\n    {\n        vec2 fragCoord = vTextureCoord;\n        vec4 fragColor = vColor;\n        \n        vec2 st = vTextureCoord;\n        float pct = dist(st, vec2(0.5));\n\n        float a = get_angle(st);\n        float t = iTime / 1000.0 / period;\n\n        float inner = max((radius - width) / resolution.x, (radius - width) / resolution.y);\n        float outer = max(radius / resolution.x, radius / resolution.y);\n\n        float x1 = mod(t, 1.0);\n        float x2 = mod(t + angle, 1.0);\n\n        if (x1 < x2) {\n            if (a > x1 && a < x2) {\n                float val = (1.0 - (x2 - a) / angle) * smoothstep(0.0, 3. * smooth, (x2 - a));\n                fragColor = mix(backgroundColor, color, val);\n            } else {\n                fragColor = backgroundColor;\n            }\n        } else {\n            if (a < x2) {\n                float val = (1.0 - (x2 - a) / angle) * smoothstep(0.0, 3. * smooth, (x2 - a));\n                fragColor = mix(backgroundColor, color, val);\n            } else if (a > x1) {\n                float val = (1.0 - (1.0 + x2 - a) / angle) * smoothstep(0.0, 3. * smooth, (1.0 + x2 - a));\n                fragColor = mix(backgroundColor, color, val);\n            } else {\n                fragColor = backgroundColor;\n            }\n        }\n\n        float s = smoothstep(inner, inner + smooth + 0.00001, pct) * (1.0 - smoothstep(outer, outer + smooth + 0.00001, pct));\n        gl_FragColor = texture2D(uSampler, fragCoord) * vColor * (1. - s * fragColor.a) + fragColor * s;\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class HoleShader extends DefaultShader {\n\n    constructor(context) {\n        super(context);\n        this._x = 0;\n        this._y = 0;\n        this._w = 0;\n        this._h = 0;\n        this._radius = 0;\n    }\n\n    get x() {\n        return this._x;\n    }\n\n    set x(v) {\n        this._x = v;\n        this.redraw();\n    }\n\n    get y() {\n        return this._y;\n    }\n\n    set y(v) {\n        this._y = v;\n        this.redraw();\n    }\n\n    get w() {\n        return this._w;\n    }\n\n    set w(v) {\n        this._w = v;\n        this.redraw();\n    }\n\n    get h() {\n        return this._h;\n    }\n\n    set h(v) {\n        this._h = v;\n        this.redraw();\n    }\n\n    get radius() {\n        return this._radius;\n    }\n\n    set radius(v) {\n        this._radius = v;\n        this.redraw();\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n\n        const owner = operation.shaderOwner;\n        const renderPrecision = this.ctx.stage.getRenderPrecision()\n\n        this._setUniform(\"x\", this._x * renderPrecision, this.gl.uniform1f);\n        this._setUniform(\"y\", this._y * renderPrecision, this.gl.uniform1f);\n        this._setUniform(\"w\", this._w * renderPrecision, this.gl.uniform1f);\n        this._setUniform(\"h\", this._h * renderPrecision, this.gl.uniform1f);\n        this._setUniform('radius',  (this._radius + .5) * renderPrecision, this.gl.uniform1f);\n        this._setUniform('resolution', new Float32Array([owner._w * renderPrecision, owner._h * renderPrecision]), this.gl.uniform2fv);\n    }\n\n    useDefault() {\n        return (this._x === 0 && this._y === 0 && this._w === 0 && this._h === 0)\n    }\n}\n\nHoleShader.vertexShaderSource = DefaultShader.vertexShaderSource;\n\nHoleShader.fragmentShaderSource = `\n   #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform float x;\n    uniform float y;\n    uniform float w;\n    uniform float h;\n    uniform vec2 resolution;\n    uniform float radius;\n\n    float roundBox(vec2 p, vec2 b, float r) {\n        float d = length(max(abs(p)-b+r, 0.1))-r;\n        return smoothstep(1.0, 0.0, d);\n    }\n\n    void main(void){\n        vec4 color = texture2D(uSampler, vTextureCoord);\n        vec2 pos = vTextureCoord.xy * resolution - vec2(x, y) - vec2(w, h) / 2.0;\n        vec2 size = vec2(w, h) / 2.0;\n        float b = roundBox(pos, size, radius);\n        gl_FragColor = mix(color, vec4(0.0), b) * vColor;\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\n\nexport default class RadialGradientShader extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._pivot = [0, 0];\n        this._ic = 0xffffffff;\n        this._normalizedIC = this._getNormalizedColor(this._ic);\n        this._oc = 0x00ffffff;\n        this._normalizedOC = this._getNormalizedColor(this._oc);\n        this._radius = 0;\n    }\n\n    set radiusX(v) {\n        this.radius = v;\n    }\n\n    get radiusX() {\n        return this._radius;\n    }\n\n    set radiusY(v) {\n        this._radiusY = v;\n        this.redraw();\n    }\n\n    get radiusY() {\n        return this._radiusY;\n    }\n\n    set radius(v) {\n        this._radius = v;\n        this.redraw();\n    }\n\n    set innerColor(argb) {\n        this._ic = argb;\n        this._normalizedIC = this._getNormalizedColor(argb);\n        this.redraw();\n    }\n\n    get innerColor() {\n        return this._ic;\n    }\n\n    set outerColor(argb) {\n        this._oc = argb;\n        this._normalizedOC = this._getNormalizedColor(argb);\n        this.redraw();\n    }\n\n    set color(argb) {\n        this.innerColor = argb;\n    }\n\n    get color() {\n        return this.innerColor;\n    }\n\n    get outerColor() {\n        return this._ic;\n    }\n\n    set x(f) {\n        this._x = f;\n        this.redraw();\n    }\n\n    set y(f) {\n        this._y = f;\n        this.redraw();\n    }\n\n    set pivot(v) {\n        if(Array.isArray(v) && v.length === 2) {\n            this._pivot = v;\n        }\n        else if(Array.isArray(v)) {\n            this._pivot = [v[0], v[1] || v[0]];\n        }\n        else {\n            this._pivot = [v, v];\n        }\n        this.redraw();\n    }\n\n    get pivot() {\n        return this._pivot[0];\n    }\n\n    set pivotY(f) {\n        this._pivot[1] = f;\n        this.redraw();\n    }\n\n    get pivotY() {\n        return this._pivot[1];\n    }\n\n    set pivotX(f) {\n        this._pivot[0] = f;\n        this.redraw();\n    }\n\n    get pivotX() {\n        return this._pivot[0];\n    }\n\n    _getNormalizedColor(color) {\n        const col = StageUtils.getRgbaComponentsNormalized(color);\n        col[0] *= col[3];\n        col[1] *= col[3];\n        col[2] *= col[3];\n        return new Float32Array(col);\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const owner = operation.shaderOwner;\n\n        if(this._x) {\n            this._pivot[0] = this._x / owner.w;\n        }\n        if(this._y) {\n            this._pivot[1] = this._y / owner.h;\n        }\n\n        if(this._radius === 0) {\n            this._radius = owner.w * 0.5;\n        }\n\n        this._setUniform('innerColor', this._normalizedIC, this.gl.uniform4fv);\n        this._setUniform('fill', StageUtils.getRgbaComponentsNormalized(this._oc)[3], this.gl.uniform1f);\n        this._setUniform('outerColor', this._normalizedOC, this.gl.uniform4fv);\n        this._setUniform('pivot', new Float32Array(this._pivot),  this.gl.uniform2fv);\n        this._setUniform('resolution', new Float32Array([owner._w, owner._h]),  this.gl.uniform2fv);\n        this._setUniform('alpha', operation.getElementCore(0).renderContext.alpha, this.gl.uniform1f);\n        this._setUniform('radius',  this._radius, this.gl.uniform1f);\n        this._setUniform('radiusY',  (this._radiusY || this._radius), this.gl.uniform1f);\n    }\n}\n\nRadialGradientShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    \n    #define PI 3.14159265359\n    \n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n    uniform vec2 resolution;\n    uniform vec2 pivot;\n    uniform vec4 innerColor;\n    uniform vec4 outerColor;\n    uniform float radius;\n    uniform float radiusY;\n    uniform float alpha;\n    uniform float fill;\n    uniform float aspectRatio;\n    \n    void main() {\n        vec2 point = vTextureCoord.xy * resolution;\n        vec2 projection = vec2(pivot.x * resolution.x, pivot.y * resolution.y);\n        float d = length((point - projection) / vec2(radius * 2.0, radiusY * 2.0));\n        vec4 color = mix(texture2D(uSampler, vTextureCoord) * vColor, outerColor * alpha, fill);\n        gl_FragColor = mix(innerColor * alpha, color, smoothstep(0.0, 1.0, d));\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class Light3dShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._strength = 0.5;\n        this._ambient = 0.5;\n        this._fudge = 0.4;\n\n        this._rx = 0;\n        this._ry = 0;\n\n        this._z = 0;\n        this._pivotX = NaN;\n        this._pivotY = NaN;\n        this._pivotZ = 0;\n\n        this._lightY = 0;\n        this._lightZ = 0;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n\n        let vr = operation.shaderOwner;\n        let element = vr.element;\n\n        let pivotX = isNaN(this._pivotX) ? element.pivotX * vr.w : this._pivotX;\n        let pivotY = isNaN(this._pivotY) ? element.pivotY * vr.h : this._pivotY;\n        let coords = vr.getRenderTextureCoords(pivotX, pivotY);\n\n        // Counter normal rotation.\n\n        let rz = -Math.atan2(vr._renderContext.tc, vr._renderContext.ta);\n\n        let gl = this.gl;\n        this._setUniform(\"pivot\", new Float32Array([coords[0], coords[1], this._pivotZ]), gl.uniform3fv);\n        this._setUniform(\"rot\", new Float32Array([this._rx, this._ry, rz]), gl.uniform3fv);\n\n        this._setUniform(\"z\", this._z, gl.uniform1f);\n        this._setUniform(\"lightY\", this.lightY, gl.uniform1f);\n        this._setUniform(\"lightZ\", this.lightZ, gl.uniform1f);\n        this._setUniform(\"strength\", this._strength, gl.uniform1f);\n        this._setUniform(\"ambient\", this._ambient, gl.uniform1f);\n        this._setUniform(\"fudge\", this._fudge, gl.uniform1f);\n    }\n\n    set strength(v) {\n        this._strength = v;\n        this.redraw();\n    }\n\n    get strength() {\n        return this._strength;\n    }\n\n    set ambient(v) {\n        this._ambient = v;\n        this.redraw();\n    }\n\n    get ambient() {\n        return this._ambient;\n    }\n\n    set fudge(v) {\n        this._fudge = v;\n        this.redraw();\n    }\n\n    get fudge() {\n        return this._fudge;\n    }\n\n    get rx() {\n        return this._rx;\n    }\n\n    set rx(v) {\n        this._rx = v;\n        this.redraw();\n    }\n\n    get ry() {\n        return this._ry;\n    }\n\n    set ry(v) {\n        this._ry = v;\n        this.redraw();\n    }\n\n    get z() {\n        return this._z;\n    }\n\n    set z(v) {\n        this._z = v;\n        this.redraw();\n    }\n\n    get pivotX() {\n        return this._pivotX;\n    }\n\n    set pivotX(v) {\n        this._pivotX = v + 1;\n        this.redraw();\n    }\n\n    get pivotY() {\n        return this._pivotY;\n    }\n\n    set pivotY(v) {\n        this._pivotY = v + 1;\n        this.redraw();\n    }\n\n    get lightY() {\n        return this._lightY;\n    }\n\n    set lightY(v) {\n        this._lightY = v;\n        this.redraw();\n    }\n\n    get pivotZ() {\n        return this._pivotZ;\n    }\n\n    set pivotZ(v) {\n        this._pivotZ = v;\n        this.redraw();\n    }\n\n    get lightZ() {\n        return this._lightZ;\n    }\n\n    set lightZ(v) {\n        this._lightZ = v;\n        this.redraw();\n    }\n\n    useDefault() {\n        return (this._rx === 0 && this._ry === 0 && this._z === 0 && this._strength === 0 && this._ambient === 1);\n    }\n\n}\n\nLight3dShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n\n    uniform float fudge;\n    uniform float strength;\n    uniform float ambient;\n    uniform float z;\n    uniform float lightY;\n    uniform float lightZ;\n    uniform vec3 pivot;\n    uniform vec3 rot;\n    varying vec3 pos;\n\n    void main(void) {\n        pos = vec3(aVertexPosition.xy, z);\n        \n        pos -= pivot;\n        \n        // Undo XY rotation\n        mat2 iRotXy = mat2( cos(rot.z), sin(rot.z), \n                           -sin(rot.z), cos(rot.z));\n        pos.xy = iRotXy * pos.xy;\n        \n        // Perform 3d rotations\n        gl_Position.x = cos(rot.x) * pos.x - sin(rot.x) * pos.z;\n        gl_Position.y = pos.y;\n        gl_Position.z = sin(rot.x) * pos.x + cos(rot.x) * pos.z;\n        \n        pos.x = gl_Position.x;\n        pos.y = cos(rot.y) * gl_Position.y - sin(rot.y) * gl_Position.z;\n        pos.z = sin(rot.y) * gl_Position.y + cos(rot.y) * gl_Position.z;\n        \n        // Redo XY rotation\n        iRotXy[0][1] = -iRotXy[0][1];\n        iRotXy[1][0] = -iRotXy[1][0];\n        pos.xy = iRotXy * pos.xy; \n\n        // Undo translate to pivot position\n        pos.xyz += pivot;\n\n        pos = vec3(pos.x * projection.x - 1.0, pos.y * -abs(projection.y) + 1.0, pos.z * projection.x);\n        \n        // Set depth perspective\n        float perspective = 1.0 + fudge * pos.z;\n\n        pos.z += lightZ * projection.x;\n\n        // Map coords to gl coordinate space.\n        // Set z to 0 because we don't want to perform z-clipping\n        gl_Position = vec4(pos.xy, 0.0, perspective);\n\n        // Correct light source position.\n        pos.y += lightY * abs(projection.y);\n\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        \n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nLight3dShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    varying vec3 pos;\n    uniform sampler2D uSampler;\n    uniform float ambient;\n    uniform float strength;\n    void main(void){\n        vec4 rgba = texture2D(uSampler, vTextureCoord);\n        float d = length(pos);\n        float n = 1.0 / max(0.1, d);\n        rgba.rgb = rgba.rgb * (strength * n + ambient);\n        gl_FragColor = rgba * vColor;\n    }\n`;\n\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class PerspectiveShader extends DefaultShader {\n\n    constructor(ctx) {\n        super(ctx);\n\n        this._fudge = 0.2;\n        this._rx = 0;\n        this._ry = 0;\n        this._z = 1.0;\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n\n        const vr = operation.shaderOwner;\n        const element = vr.element;\n\n        const pivotX = element.pivotX * vr.w;\n        const pivotY = element.pivotY * vr.h;\n        const coords = vr.getRenderTextureCoords(pivotX, pivotY);\n\n        // Counter normal rotation.\n        const rz = -Math.atan2(vr._renderContext.tc, vr._renderContext.ta);\n\n        const gl = this.gl;\n        this._setUniform(\"pivot\", new Float32Array([coords[0], coords[1], 0]), gl.uniform3fv);\n        this._setUniform(\"rot\", new Float32Array([this._rx, this._ry, rz]), gl.uniform3fv);\n        this._setUniform(\"z\", this._z, gl.uniform1f);\n        this._setUniform(\"fudge\", this._fudge, gl.uniform1f);\n    }\n\n    set fudge(v) {\n        this._fudge = v;\n        this.redraw();\n    }\n\n    get fudge() {\n        return this._fudge;\n    }\n\n    get rx() {\n        return this._rx;\n    }\n\n    set rx(v) {\n        this._rx = v;\n        this.redraw();\n    }\n\n    get ry() {\n        return this._ry;\n    }\n\n    set ry(v) {\n        this._ry = v;\n        this.redraw();\n    }\n\n    get z() {\n        return this._z;\n    }\n\n    set z(v) {\n        this._z = v;\n        this.redraw();\n    }\n\n    useDefault() {\n        return (this._rx === 0 && this._ry === 0 && this._z === 0);\n    }\n\n}\n\nPerspectiveShader.vertexShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    attribute vec2 aVertexPosition;\n    attribute vec2 aTextureCoord;\n    attribute vec4 aColor;\n    uniform vec2 projection;\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n\n    uniform float z;\n    uniform vec3 pivot;\n    uniform vec3 rot;\n    varying vec3 pos;\n\n    void main(void) {\n        pos = vec3(aVertexPosition.xy, z);\n        \n        pos -= pivot;\n        \n        // Undo XY rotation\n        mat2 iRotXy = mat2( cos(rot.z), sin(rot.z), \n                           -sin(rot.z), cos(rot.z));\n        pos.xy = iRotXy * pos.xy;\n        \n        // Perform 3d rotations\n        gl_Position.x = cos(rot.x) * pos.x - sin(rot.x) * pos.z;\n        gl_Position.y = pos.y;\n        gl_Position.z = sin(rot.x) * pos.x + cos(rot.x) * pos.z;\n        \n        pos.x = gl_Position.x;\n        pos.y = cos(rot.y) * gl_Position.y - sin(rot.y) * gl_Position.z;\n        pos.z = sin(rot.y) * gl_Position.y + cos(rot.y) * gl_Position.z;\n        \n        // Redo XY rotation\n        iRotXy[0][1] = -iRotXy[0][1];\n        iRotXy[1][0] = -iRotXy[1][0];\n        pos.xy = iRotXy * pos.xy; \n\n        // Undo translate to pivot position\n        pos.xyz += pivot;\n\n        pos = vec3(pos.x * projection.x - 1.0, pos.y * -abs(projection.y) + 1.0, pos.z * projection.x);\n        \n        // Map coords to gl coordinate space.\n        // Set z to 0 because we don't want to perform z-clipping\n        gl_Position = vec4(pos.xy, 0.0, z);\n\n        vTextureCoord = aTextureCoord;\n        vColor = aColor;\n        \n        gl_Position.y = -sign(projection.y) * gl_Position.y;\n    }\n`;\n\nPerspectiveShader.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    uniform sampler2D uSampler;\n\n    uniform vec3 rot;\n    uniform float fudge;\n\n    void main(void) {\n        vec2 coords = vTextureCoord;\n\n        coords.xy -= vec2(0.5);\n        coords.y = coords.y + (sign(rot[0]) * 0.5 - coords.x) * sin(rot[0]) * fudge * coords.y;\n        coords.x = coords.x + (sign(rot[1]) * 0.5 - coords.y) * sin(rot[1]) * fudge * coords.x;\n        coords.xy += vec2(0.5);\n\n        if (coords.x < 0.0 || coords.x > 1.0 || coords.y < 0.0 || coords.y > 1.0) {\n            gl_FragColor = vec4(0.0);\n        } else {\n            gl_FragColor = texture2D(uSampler, coords) * vColor;\n        }\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\n\nexport default class MagnifierShader extends DefaultShader {\n\tconstructor(context) {\n\t  super(context);\n\t  this._x = 0;\n\t  this._y = 0;\n\t  this._w = 0;\n\t  this._h = 0;\n\t  this._radius = 0;\n\t  this._magnification = 0.6;\n\t}\n  \n\tget x() {\n\t  return this._x;\n\t}\n  \n\tset x(v) {\n\t  this._x = v;\n\t  this.redraw();\n\t}\n  \n\tget y() {\n\t  return this._y;\n\t}\n  \n\tset y(v) {\n\t  this._y = v;\n\t  this.redraw();\n\t}\n  \n\tget w() {\n\t  return this._w;\n\t}\n  \n\tset w(v) {\n\t  this._w = v;\n\t  this.redraw();\n\t}\n  \n\tget h() {\n\t  return this._h;\n\t}\n  \n\tset h(v) {\n\t  this._h = v;\n\t  this.redraw();\n\t}\n  \n\tget magnification() {\n\t  return this._magnification;\n\t}\n  \n\tset magnification(v) {\n\t  this._magnification = v;\n\t  this.redraw();\n\t}\n  \n\tget radius() {\n\t  return this._radius;\n\t}\n  \n\tset radius(v) {\n\t  this._radius = v;\n\t  this.redraw();\n\t}\n  \n\tsetupUniforms(operation) {\n\t  super.setupUniforms(operation);\n  \n\t  const owner = operation.shaderOwner;\n\t  const renderPrecision = this.ctx.stage.getRenderPrecision();\n\t  this._setUniform('x', this._x * renderPrecision, this.gl.uniform1f);\n\t  this._setUniform('y', this._y * renderPrecision, this.gl.uniform1f);\n\t  this._setUniform('w', this._w * renderPrecision, this.gl.uniform1f);\n\t  this._setUniform('h', this._h * renderPrecision, this.gl.uniform1f);\n\t  this._setUniform('magnification', this._magnification, this.gl.uniform1f);\n\t  this._setUniform(\n\t\t'radius',\n\t\t(this._radius + 0.5) * renderPrecision,\n\t\tthis.gl.uniform1f\n\t  );\n\t  this._setUniform(\n\t\t'resolution',\n\t\tnew Float32Array([\n\t\t  owner._w * renderPrecision,\n\t\t  owner._h * renderPrecision\n\t\t]),\n\t\tthis.gl.uniform2fv\n\t  );\n\t}\n \n\tuseDefault() {\n\t  return this._w === 0 && this._h === 0;\n\t}\n  }\n  \n  MagnifierShader.vertexShaderSource = DefaultShader.vertexShaderSource;\n  \n  MagnifierShader.fragmentShaderSource = `\n\t  #ifdef GL_ES\n\t\t# ifdef GL_FRAGMENT_PRECISION_HIGH\n\t\tprecision highp float;\n\t\t# else\n\t\tprecision lowp float;\n\t\t# endif\n\t  #endif\n\n\t  varying vec2 vTextureCoord;\n\t  varying vec4 vColor;\n\t  uniform sampler2D uSampler;\n\t  uniform float x;\n\t  uniform float y;\n\t  uniform float w;\n\t  uniform float h;\n\t  uniform vec2 resolution;\n\t  uniform float radius;\n\t  uniform float magnification;\n  \n\t  float roundBox(vec2 p, vec2 b, float r) {\n\t\t  float d = length(max(abs(p)-b+r, 0.1))-r;\n\t\t  return smoothstep(1.0, 0.0, d);\n\t  }\n\n\t  float inside(vec2 v) {\n\t\tvec2 s = step(vec2(0.0, 0.0), v) - step(vec2(1.0, 1.0), v);\n\t\treturn s.x * s.y;   \n      }\n  \n\t  void main(void) {\n\t\tvec4 color = texture2D(uSampler, vTextureCoord);\n\t\tvec2 pos = vTextureCoord.xy * resolution - vec2(x, y) - vec2(w, h) / 2.0;\n\t\tvec2 size = vec2(w, h) / 2.0;\n\t\tfloat b = roundBox(pos, size, radius);\n\t\tvec2 pos2 = (vTextureCoord.xy * magnification * resolution + vec2(x, y) * magnification) / resolution;\n\t\tgl_FragColor = mix(color, texture2D(uSampler, pos2) * inside(pos2), b) * vColor;\n\t  }\n  `;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport DefaultShader from \"./DefaultShader.mjs\";\nimport StageUtils from \"../../../tree/StageUtils.mjs\";\n\nexport default class SpinnerShader2 extends DefaultShader {\n    constructor(context) {\n        super(context);\n        this._period = 1;\n        this._stroke = 0;\n        this._showDot = true;\n        this._clockwise = true;\n        this._bc = 0xff000000;\n        this._normalizedBC = this._getNormalizedColor(this._bc);\n        this._c = 0xffffffff;\n        this._normalizedC = this._getNormalizedColor(this._c);\n    }\n\n    set radius(v) {\n        if(v === 0) {\n            v = 1;\n        }\n        this._radius = v;\n    }\n\n    set stroke(value) {\n        this._stroke = Math.abs(value);\n    }\n\n    get stroke() {\n        return this._stroke;\n    }\n\n    set color(argb) {\n        this._c = argb;\n        this._normalizedC = this._getNormalizedColor(argb);\n    }\n\n    get color() {\n        return this._c;\n    }\n\n    set backgroundColor(argb) {\n        this._bc = argb;\n        this._normalizedBC = this._getNormalizedColor(argb);\n    }\n\n    get backgroundColor() {\n        return this._sc;\n    }\n\n    set showDot(bool) {\n        this._showDot = bool;\n    }\n\n    get showDot() {\n        return this._showDot;\n    }\n\n    set clockwise(bool) {\n        this._clockwise = bool;\n    }\n\n    get clockwise() {\n        return this._clockwise;\n    }\n\n    set period(v) {\n        this._period = v;\n    }\n\n    get period() {\n        return this._period;\n    }\n\n    _getNormalizedColor(color) {\n        const col = StageUtils.getRgbaComponentsNormalized(color);\n        col[0] *= col[3];\n        col[1] *= col[3];\n        col[2] *= col[3];\n        return new Float32Array(col);\n    }\n\n    setupUniforms(operation) {\n        super.setupUniforms(operation);\n        const owner = operation.shaderOwner;\n        const radius = this._radius || (owner._w / 2);\n\n        if(this._stroke === 0) {\n            this._stroke = radius * 0.33;\n        }\n\n        this._setUniform('resolution', new Float32Array([owner._w, owner._h]),  this.gl.uniform2fv);\n        this._setUniform('color', this._normalizedC, this.gl.uniform4fv);\n        this._setUniform('backgroundColor', this._normalizedBC, this.gl.uniform4fv);\n        this._setUniform('stroke',  this._stroke, this.gl.uniform1f);\n        this._setUniform('radius',  radius, this.gl.uniform1f);\n        this._setUniform('direction',  this._clockwise ? -1 : 1, this.gl.uniform1f);\n        this._setUniform('showDot', !!this._showDot, this.gl.uniform1f);\n        this._setUniform('time', Date.now() - SpinnerShader2.spinSync, this.gl.uniform1f);\n        this._setUniform('period', this._period, this.gl.uniform1f);\n        this._setUniform('alpha', operation.getElementCore(0).renderContext.alpha, this.gl.uniform1f);\n\n        if(this._sc !== this._bc || this._stroke !== radius * 0.5) {\n            this.redraw();\n        }\n    }\n}\n\nSpinnerShader2.spinSync = Date.now();\n\nSpinnerShader2.fragmentShaderSource = `\n    #ifdef GL_ES\n    # ifdef GL_FRAGMENT_PRECISION_HIGH\n    precision highp float;\n    # else\n    precision lowp float;\n    # endif\n    #endif\n    \n    #define PI 3.14159265359\n    \n    varying vec2 vTextureCoord;\n    varying vec4 vColor;\n    \n    uniform sampler2D uSampler;\n    uniform vec2 resolution;\n    uniform vec4 color;\n    uniform vec4 backgroundColor;\n    uniform float direction;\n    uniform float radius;\n    uniform float time;\n    uniform float stroke;\n    uniform float showDot;\n    uniform float period;\n    uniform float alpha;\n    \n    float circleDist(vec2 p, float radius){\n        return length(p) - radius;\n    }\n    \n    float fillMask(float dist){\n        return clamp(-dist, 0.0, 1.0);\n    }\n    \n    void main() {\n        vec2 halfRes = 0.5 * resolution.xy;\n        vec2 center = vTextureCoord.xy * resolution - halfRes;\n        \n        float c = max(-circleDist(center, radius - stroke), circleDist(center, radius));\n        float rot = -(time / 1000.0 / period) * 6.0 * direction;\n        center *= mat2(cos(rot), sin(rot), -sin(rot), cos(rot));\n        \n        float a = direction * atan(center.x, center.y) * PI * 0.05 + 0.45;\n        \n        float strokeRad = stroke * 0.5;\n        a = mix(a, max(a, fillMask(circleDist(vec2(center.x, center.y + (radius - strokeRad)), strokeRad))), showDot);\n        vec4 base = mix(vec4(0.0), backgroundColor * alpha, fillMask(c));\n        gl_FragColor = mix(base, color * alpha, fillMask(c) * a);\n    }\n`;\n","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2020 Metrological\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Application from \"./application/Application.mjs\";\nimport Component from \"./application/Component.mjs\";\nimport Base from \"./tree/Base.mjs\";\nimport Utils from \"./tree/Utils.mjs\";\nimport StageUtils from \"./tree/StageUtils.mjs\";\nimport Element from \"./tree/Element.mjs\";\nimport ElementCore from \"./tree/core/ElementCore.mjs\";\nimport ElementTexturizer from \"./tree/core/ElementTexturizer.mjs\";\nimport Texture from \"./tree/Texture.mjs\";\n\nimport Tools from \"./tools/Tools.mjs\";\nimport ObjMerger from \"./tools/ObjMerger.mjs\";\nimport ObjectListProxy from \"./tools/ObjectListProxy.mjs\";\nimport ObjectListWrapper from \"./tools/ObjectListWrapper.mjs\";\n\nimport RectangleTexture from \"./textures/RectangleTexture.mjs\";\nimport NoiseTexture from \"./textures/NoiseTexture.mjs\";\nimport TextTexture from \"./textures/TextTexture.mjs\";\nimport ImageTexture from \"./textures/ImageTexture.mjs\";\nimport HtmlTexture from \"./textures/HtmlTexture.mjs\";\nimport StaticTexture from \"./textures/StaticTexture.mjs\";\nimport StaticCanvasTexture from \"./textures/StaticCanvasTexture.mjs\";\nimport SourceTexture from \"./textures/SourceTexture.mjs\";\n\nimport ListComponent from \"./components/ListComponent.mjs\";\nimport FastBlurComponent from \"./components/FastBlurComponent.mjs\";\nimport BloomComponent from \"./components/BloomComponent.mjs\";\nimport SmoothScaleComponent from \"./components/SmoothScaleComponent.mjs\";\nimport BorderComponent from \"./components/BorderComponent.mjs\";\nimport EventEmitter from \"./EventEmitter.mjs\";\n\nimport WebGLShader from \"./renderer/webgl/WebGLShader.mjs\";\nimport WebGLDefaultShader from \"./renderer/webgl/shaders/DefaultShader.mjs\";\nimport { WebGLGrayscaleShader } from \"./renderer/common/shaders/GrayscaleShader.mjs\";\nimport BoxBlurShader from \"./renderer/webgl/shaders/BoxBlurShader.mjs\";\nimport DitheringShader from \"./renderer/webgl/shaders/DitheringShader.mjs\";\nimport CircularPushShader from \"./renderer/webgl/shaders/CircularPushShader.mjs\";\nimport InversionShader from \"./renderer/webgl/shaders/InversionShader.mjs\";\nimport LinearBlurShader from \"./renderer/webgl/shaders/LinearBlurShader.mjs\";\nimport OutlineShader from \"./renderer/webgl/shaders/OutlineShader.mjs\";\nimport PixelateShader from \"./renderer/webgl/shaders/PixelateShader.mjs\";\nimport RadialFilterShader from \"./renderer/webgl/shaders/RadialFilterShader.mjs\";\nimport RoundedRectangleShader from \"./renderer/webgl/shaders/RoundedRectangleShader.mjs\";\nimport FadeOutShader from \"./renderer/webgl/shaders/FadeOutShader.mjs\";\nimport VignetteShader from \"./renderer/webgl/shaders/VignetteShader.mjs\";\nimport SpinnerShader from \"./renderer/webgl/shaders/SpinnerShader.mjs\";\nimport HoleShader from \"./renderer/webgl/shaders/HoleShader.mjs\";\nimport RadialGradientShader from \"./renderer/webgl/shaders/RadialGradientShader.mjs\";\nimport Light3dShader from \"./renderer/webgl/shaders/Light3dShader.mjs\";\nimport PerspectiveShader from \"./renderer/webgl/shaders/PerspectiveShader.mjs\";\nimport MagnifierShader from \"./renderer/webgl/shaders/MagnifierShader.mjs\";\n\nimport C2dShader from \"./renderer/c2d/C2dShader.mjs\";\nimport C2dDefaultShader from \"./renderer/c2d/shaders/DefaultShader.mjs\";\nimport { C2dGrayscaleShader } from \"./renderer/common/shaders/GrayscaleShader.mjs\";\nimport C2dBlurShader from \"./renderer/c2d/shaders/BlurShader.mjs\";\n\nimport Stage from \"./tree/Stage.mjs\";\nimport SpinnerShader2 from './renderer/webgl/shaders/SpinnerShader2.mjs';\n\nconst lightning = {\n    Application,\n    Component,\n    Base,\n    Utils,\n    StageUtils,\n    Element,\n    Tools,\n    Stage,\n    ElementCore,\n    ElementTexturizer,\n    Texture,\n    EventEmitter,\n    shaders: {\n        Grayscale: WebGLGrayscaleShader,\n        BoxBlur: BoxBlurShader,\n        Dithering: DitheringShader,\n        CircularPush: CircularPushShader,\n        Inversion: InversionShader,\n        LinearBlur: LinearBlurShader,\n        Outline: OutlineShader,\n        Pixelate: PixelateShader,\n        RadialFilter: RadialFilterShader,\n        RoundedRectangle: RoundedRectangleShader,\n        Spinner2: SpinnerShader2,\n        FadeOut: FadeOutShader,\n        Hole: HoleShader,\n        Vignette: VignetteShader,\n        Spinner: SpinnerShader,\n        RadialGradient: RadialGradientShader,\n        Light3d: Light3dShader,\n        Perspective: PerspectiveShader,\n        Magnifier: MagnifierShader,\n        WebGLShader,\n        WebGLDefaultShader,\n        C2dShader,\n        C2dDefaultShader,\n        c2d: {\n            Grayscale: C2dGrayscaleShader,\n            Blur: C2dBlurShader\n        }\n    },\n    textures: {\n        RectangleTexture,\n        NoiseTexture,\n        TextTexture,\n        ImageTexture,\n        HtmlTexture,\n        StaticTexture,\n        StaticCanvasTexture,\n        SourceTexture\n    },\n    components: {\n        FastBlurComponent,\n        BloomComponent,\n        SmoothScaleComponent,\n        BorderComponent,\n        ListComponent\n    },\n    tools: {\n        ObjMerger,\n        ObjectListProxy,\n        ObjectListWrapper\n    }\n};\n\nif (Utils.isWeb) {\n    window.lng = lightning;\n}\n\nexport default lightning;\n"],"names":["StageUtils","_classCallCheck","key","value","mergeNumbers","v1","v2","p","rgb","r","g","b","rgba","a","getRgbString","color","getRgbaString","toFixed","getRgbaStringFromArray","Math","floor","getRgbaComponentsNormalized","argb","getRgbComponentsNormalized","getRgbaComponents","getArgbNumber","max","min","v","mergeColors","c1","c2","r1","round","mergeMultiColors","c","t","n","length","i","g1","b1","a1","mergeMultiColorsEqual","mergeColorAlpha","alpha","rad","deg","PI","getTimingBezier","d","xc","xb","xa","yc","yb","ya","time","cbxd","dx","it","minT","maxT","getTimingFunction","str","s","indexOf","parts","substr","split","warn","parseFloat","isNaN","Utils","isFunction","isNumber","isInteger","isBoolean","isString","clone","isObjectLiteral","Array","isArray","getDeepClone","cloneObjShallow","obj","keys","Object","merge","obj1","obj2","isObject","type","isPlainObject","constructor","getArrayIndex","index","arr","getModuloIndex","len","ceil","equalValues","equalObjectLiterals","equalArrays","keys1","keys2","k1","k2","this","setToArray","result","forEach","push","iteratorToArray","iterator","iteratorResult","next","done","isUcChar","charcode","isWeb","window","sparkscene","isWPE","navigator","userAgent","isSpark","Utils$1","isNode","isPS4","isZiggo","Base","defaultSetter","name","patchObject","settings","names","patchObjectProperty","console","error","setter","setSetting","charAt","__local","local","func","SpacingCalculator","getSpacing","mode","numberOfItems","remainingSpace","spacePerGap","spacingBefore","spacingBetween","itemGaps","Error","ContentAligner","layout","_layout","_totalCrossAxisSize","_createClass","get","_lines","init","_getTotalCrossAxisSize","align","crossAxisSize","_this$_getSpacing","_getSpacing","lines","growSize","_flexContainer","alignContent","currentPos","crossAxisLayoutOffset","aligner","createItemAligner","finalCrossAxisLayoutSize","crossAxisLayoutSize","setCrossAxisLayoutSize","setCrossAxisLayoutOffset","recursiveResizeOccured","setItemPositions","total","FlexUtils","getParentAxisSizeWithPadding","item","horizontal","parent","target","getParent","flexParent","getAxisLayoutSize","getTotalPadding","w","h","getRelAxisSize","funcW","_allowRelAxisSizeFunction","originalWidth","funcH","originalHeight","_flex","isAxisFitToContents","isZeroAxisSize","getAxisLayoutPos","x","y","setAxisLayoutPos","pos","setAxisLayoutSize","size","getAxisMinSize","minSize","getPlainAxisMinSize","flexItemMinSize","isFlexItemEnabled","_flexItem","_getMinSizeSetting","isFlexEnabled","flexItem","shrink","resizeAxis","_horizontal","resizeMainAxis","resizeCrossAxis","getPaddingOffset","flex","paddingLeft","paddingTop","paddingRight","paddingBottom","getMarginOffset","marginLeft","marginTop","getTotalMargin","marginRight","marginBottom","SizeShrinker","line","_line","_amountRemaining","_shrunkSize","amount","totalShrinkAmount","_getTotalShrinkAmount","items","amountPerShrink","startIndex","endIndex","shrinkAmount","_getMainAxisMinSize","_getMainAxisLayoutSize","maxShrink","finalSize","_resizeMainAxis","abs","getShrunkSize","SizeGrower","_grownSize","grow","totalGrowAmount","_getTotalGrowAmount","amountPerGrow","growAmount","maxSize","_getMainAxisMaxSizeSetting","maxGrow","getGrownSize","ItemPositioner","lineLayout","position","_setMainAxisLayoutPos","_getMainAxisLayoutSizeWithPaddingAndMargin","_availableSpace","justifyContent","ItemAligner","_crossAxisLayoutSize","_crossAxisLayoutOffset","_alignItemsSetting","_recursiveResizeOccured","_isCrossAxisFitToContents","offset","alignItems","_alignItem","alignSelf","_preventStretch","_hasRelCrossAxisSize","_resetCrossAxisLayoutSize","_alignItemFlexStart","_alignItemFlexEnd","_alignItemFlexCenter","_alignItemStretch","_setCrossAxisLayoutPos","itemCrossAxisSize","_getCrossAxisLayoutSizeWithPaddingAndMargin","center","mainAxisLayoutSizeBeforeResize","_getCrossAxisMargin","_getCrossAxisPadding","crossAxisMinSizeSetting","_getCrossAxisMinSizeSetting","crossAxisMaxSizeSetting","_getCrossAxisMaxSizeSetting","_resizeCrossAxis","hasFixedCrossAxisSize","_hasFixedCrossAxisSize","forceStretch","LineLayout","availableSpace","performLayout","_setItemSizes","_calcLayoutInfo","_growItemSizes","_shrinkItemSizes","grower","shrinker","_calcCrossAxisMaxLayoutSize","getMainAxisMinSize","mainAxisMinSize","_getMainAxisMinSizeWithPaddingAndMargin","noSpecifiedCrossAxisSize","isCrossAxisFitToContents","resizingCrossAxis","isWrapping","_crossAxisMaxLayoutSize","_getCrossAxisMaxLayoutSize","crossAxisMaxSize","LineLayouter","_mainAxisMinSize","_crossAxisMinSize","_mainAxisContentSize","_getCrossAxisMinSize","layoutLines","_setup","wrap","_layoutFlexItem","itemMainAxisSize","_curMainAxisPos","_mainAxisSize","_layoutLine","_addToMainAxisPos","flexLayout","updateTreeLayout","_resetLayoutSize","mainAxisSize","_maxMainAxisPos","_getAvailableMainAxisLayoutSpace","resizingMainAxis","isMainAxisFitToContents","crossAxisMinSize","itemCrossAxisMinSize","_getCrossAxisMinSizeWithPaddingAndMargin","ItemCoordinatesUpdater","_isReverse","_reverse","_horizontalPaddingOffset","_getHorizontalPaddingOffset","_verticalPaddingOffset","_getVerticalPaddingOffset","finalize","parentFlex","getParentFlexContainer","_finalizeItemAndChildren","_finalizeRoot","_finalizeItems","_getHorizontalPadding","_getVerticalPadding","clearRecalcFlag","setLayout","validCache","_validateItemCache","_finalizeItem","_finalizeItemChildren","recalc","performResizeMainAxis","performResizeCrossAxis","_reverseMainAxisLayoutPos","_getHorizontalMarginOffset","_getVerticalMarginOffset","endPos","_getMainAxisLayoutPos","reversedPos","FlexLayout","flexContainer","_lineLayouter","_resizingMainAxis","_resizingCrossAxis","_cachedMainAxisSizeAfterLayout","_cachedCrossAxisSizeAfterLayout","_shrunk","layoutTree","_updateSubTreeLayout","updateItemCoords","_performUpdateLayoutTree","_performUpdateLayoutTreeFromCache","_setInitialAxisSizes","_layoutAxes","_refreshLayoutCache","enableLocalRecalcFlag","_layoutMainAxis","_getMainAxisBasis","_getCrossAxisBasis","_layoutCrossAxis","_layoutLines","_fitMainAxisSizeToContents","mainAxisContentSize","totalCrossAxisSize","_fitCrossAxisSizeToContents","_hasFixedMainAxisBasis","_hasFixedCrossAxisBasis","_checkValidCacheMainAxisResize","targetMainAxisSize","isShrinking","ctr","set","FlexContainer","_item","Layout","_wrap","_alignItems","_justifyContent","_alignContent","_paddingLeft","_paddingTop","_paddingRight","_paddingBottom","_changedDimensions","changedDimensions","_changedContents","changedContents","f","direction","ALIGN_ITEMS","join","ALIGN_CONTENT","JUSTIFY_CONTENT","patch","FlexItem","_ctr","_grow","_shrink","SHRINK_AUTO","_alignSelf","undefined","_minWidth","_minHeight","_maxWidth","_maxHeight","_marginLeft","_marginTop","_marginRight","_marginBottom","parseInt","_changed","_getDefaultShrink","_resetHorizontalAxisLayoutSize","_resetVerticalAxisLayoutSize","_getMaxSizeSetting","_getCrossAxisLayoutSize","_getMainAxisPadding","_getMainAxisMargin","FlexTarget","_target","_recalc","_enabled","_originalX","_originalY","_originalWidth","_originalHeight","_flexItemDisabled","_items","layoutFlexTree","isChanged","_enableFlex","_disableFlex","_ensureFlexItem","_checkEnabled","_clearFlexItemsCache","_enableChildrenAsFlexItems","_disableChildrenAsFlexItems","children","_children","_enableFlexItem","_disableFlexItem","_parent","_resetOffsets","enabled","isEnabled","_enable","_disable","_setupTargetForFlex","enableFlexLayout","_restoreTargetToNonFlex","disableFlexLayout","setDimensions","_x","_y","_w","_h","setParent","from","to","isFlexContainer","_changedChildren","setVisible","_getFlexItems","visible","isFlexItem","originalX","originalY","funcX","funcY","changeWidth","arguments","changeHeight","_updateRecalc","forceLayout","changeExternalWidth","changeExternalHeight","newRecalcFlags","getNewRecalcFlags","_updateRecalcBottomUp","triggerLayout","flags","childRecalc","newRecalc","_getRecalcFromChangedChildRecalc","mainAxisRecalcFlag","crossAxisRecalcFlag","isWidthDynamic","isHeightDynamic","combinedRecalc","shrunk","setOriginalXWithoutUpdatingLayout","setOriginalYWithoutUpdatingLayout","TextureSource","manager","loader","id","stage","textures","Set","_activeTextureCount","lookupId","_cancelCb","loadingSince","_nativeTexture","permanent","renderInfo","_isResultTexture","_loadError","_imageRef","_hasAlpha","addTexture","has","add","removeTexture","delete","incActiveTextureCount","becomesUsed","decActiveTextureCount","becomesUnused","forEachEnabledElement","cb","_this","texture","_newArrowCheck","elements","bind","hasEnabledElements","forEachActiveElement","_this2","_this3","element","active","getRenderWidth","getRenderHeight","allowCleanup","isUsed","load","cancel","isLoading","isLoaded","isError","reload","free","_this4","forceSync","isResultTexture","Date","getTime","err","options","destroyed","onError","source","isUpdatingFrame","throttle","processLoadedSource","textureThrottler","genericCancelCb","setSource","hasAlpha","width","height","imageRef","flipTextureY","_flipTextureY","_isNativeTexture","hasOwnProperty","uploadTextureSource","onLoad","_this5","forceRenderUpdate","update","frameCounter","forceUpdateRenderCoords","_updateTextureCoords","clearNativeTexture","replaceNativeTexture","newNativeTexture","_this6","prevNativeTexture","onTextureSourceLoaded","_setDisplayedTexture","_updateDimensions","e","_this7","onTextureSourceLoadError","freeTextureSource","WebGLTexture","prototype","isTextureSource","ElementTexturizer","elementCore","_element","_core","ctx","lazy","_colorize","_renderTexture","_renderTextureReused","_resultTextureSource","_renderOffscreen","empty","updateRenderToTextureEnabled","setHasRenderUpdates","_setRecalc","_getTextureSource","textureManager","updateResultTexture","hasResultTexture","resultTextureInUse","resultTexture","getResultTexture","nativeTexture","core","mustRenderToTexture","_hasRenderUpdates","deactivate","release","releaseRenderTexture","reuseTextureAsRenderTexture","hasRenderTexture","getRenderTexture","allocateRenderTexture","ElementCore","_onUpdate","_pRecalc","_worldContext","ElementCoreContext","_hasUpdates","_localAlpha","_onAfterCalcs","_onAfterUpdate","_localPx","_localPy","_localTa","_localTb","_localTc","_localTd","_isComplex","_dimsUnknown","_clipping","_zSort","_outOfBounds","_displayedTextureSource","_zContextUsage","_zIndexedChildren","_renderContext","renderState","_scissor","_shaderOwner","_updateTreeOrder","_colorUl","_colorUr","_colorBl","_colorBr","_optFlags","_funcX","_funcY","_funcW","_funcH","_scaleX","_scaleY","_pivotX","_pivotY","_mountX","_mountY","_rotation","_alpha","_visible","_ulx","_uly","_brx","_bry","_zIndex","_forceZIndexContext","_zParent","_isRoot","_zIndexResort","_shader","_renderToTextureEnabled","_texturizer","_useRenderToTexture","_boundsMargin","_recBoundsMargin","_withinBoundsMargin","_viewport","_clipbox","render","_renderSimple","hasFlexLayout","_disableFuncX","_updateLocalTranslateDelta","_triggerRecalcTranslate","_disableFuncY","disableFuncW","disableFuncH","_updateLocalTransform","scaleX","_updateLocalTranslate","prev","_updateLocalAlpha","_updateEnabledFlag","_sr","sin","_cr","cos","_setLocalTransform","_recalcLocalTranslate","pivotXMul","pivotYMul","px","py","dy","_addLocalTranslate","_setLocalAlpha","_setHasUpdates","prevIsZContext","isZContext","prevParent","setZParent","findZContext","enableZContext","disableZContext","enableZSort","newShaderOwner","_setShaderOwnerRecursive","force","forceZSort","addChildAt","child","splice","setChildAt","removeChildAt","removeChildren","syncChildren","removed","added","order","moveChild","fromIndex","toIndex","isEstimate","setTextureCoords","ulx","uly","brx","bry","setDisplayedTextureSource","textureSource","setAsRoot","root","coordsWidth","coordsHeight","isAncestorOf","newZParent","decZContextUsage","hadZContextUsage","incZContextUsage","zIndex","prevZContext","_getZIndexedDescs","results","_getZIndexedDescsRec","sortZIndexedChildren","slice","prevShader","shader","defaultShader","_setShaderOwnerChildrenRecursive","_hasRenderContext","texturizer","_enableRenderToTexture","_disableRenderToTexture","_renderAdvanced","isWhite","hasSimpleTexCoords","_stashTexCoords","_stashedTexCoords","_unstashTexCoords","_stashColors","_stashedColors","_unstashColors","isVisible","_applyRelativeDimFuncs","pw","ta","td","tb","tc","pr","updateTreeOrder","useRenderToTexture","sx","sy","ex","ey","bboxW","bboxH","rComplex","nx","ny","isSquare","area","lx","ly","_disableWithinBoundsMargin","withinMargin","renderOffscreen","_enableWithinBoundsMargin","isIdentity","IDENTITY","updateOutOfBounds","changedDims","onDimensionsChanged","setShader","activeShader","setScissor","addQuad","hasRenderUpdates","renderTextureInfo","prevRenderTextureInfo","mustRenderChildren","renderToTextureCount","cleared","ignore","cache","isCachingTexturizer","setRenderTextureInfo","finishedRenderTexture","renderTextureReused","setTexturizer","colorize","ptr","m","j","sort","mergeResult","getCornerPoints","getRenderTextureCoords","relX","relY","getAbsoluteCoords","collectAtCoord","inBound","inScissor","tx","ty","sc","_ensureLayout","EventEmitter","_hasEventListeners","on","listener","_eventFunction","_eventListeners","combiner","once","wrapper","arg1","arg2","arg3","off","__originalFunc","current","listeners","_step","_iterator","_createForOfIteratorHelper","l","map","removeListener","emit","listenerCount","removeAllListeners","object","_i","_arr","_toConsumableArray","addAsMixin","cls","Shader","coreContext","_initialized","_elements","addElement","removeElement","cleanup","redraw","useDefault","addEmpty","create","renderer","createShader","isShader","isValidShaderType","getWebGL","getC2d","Texture","_activeCount","_source","_resizeMode","_precision","mw","mh","clipping","_mustUpdate","hasUpdateSourceTexture","_performUpdateSource","removeUpdateSourceTexture","incActiveCount","decActiveCount","_checkForNewerReusableTextureSource","_applyResizeMode","reusable","_getReusableTextureSource","_replaceTextureSource","_getLookupId","_getSourceLoader","_getIsValid","_updateSource","addUpdateSourceTexture","getTextureSource","getReusableTextureSource","newSource","oldSource","loadError","_ref","_ref$type","_ref$w","_ref$h","_ref$clipX","clipX","_ref$clipY","clipY","_clearResizeMode","_applyResizeCover","_applyResizeContain","_updatePrecision","_updateClipping","scaleY","scale","desiredSize","choppedOffPixels","enableClipping","disableClipping","self","displayedTexture","onDisplayedTextureClippingChanged","onPrecisionChanged","getNonDefaults","nonDefaults","precision","isAutosizeTexture","isTexture","ImageTexture","_Texture","_inherits","_super","_createSuper","call","_src","src","getOption","fc","charCodeAt","platform","loadSrcTexture","_get","_getPrototypeOf","getFontSetting","fontFace","fontStyle","fontSize","defaultFontFace","ff","ffs","curFf","isZeroWidthSpace","space","isSpace","measureText","context","word","reduce","acc","char","TextTextureRenderer","canvas","_stage","_canvas","_context","getContext","_settings","getPrecision","setFontProperties","font","textBaseline","rtl","_load","document","fonts","fontSetting","check","text","catch","then","draw","loadPromise","drawText","_draw","_calculateRenderInfo","offsetY","lineHeight","wordWrapWidth","cutSx","cutEx","cutSy","cutEy","letterSpacing","textIndent","linesInfo","innerWidth","textOverflow","wordWrap","suffix","maxLinesSuffix","wrapWord","wrapText","maxLines","usedLines","otherLines","al","remainingText","moreTextLines","maxLineWidth","lineWidths","lineWidth","baselineOffset","linePositionX","linePositionY","globalAlpha","fillRect","translate","drawLines","verticalAlign","textAlign","highlight","highlightColor","hlHeight","highlightHeight","highlightOffset","hlPaddingLeft","highlightPaddingLeft","hlPaddingRight","highlightPaddingRight","fillStyle","drawLine","prevShadowSettings","shadow","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","textColor","fillText","textSplit","suffixWidth","wordLen","wordWidth","cutoffIndex","truncWordWidth","substring","indent","spaceRegex","allLines","realNewlines","resultLines","spaceLeft","words","spaces","match","wordWidthWithSpace","concat","TextTextureRendererAdvanced","baseFont","fontBaselineRatio","wordBreak","wrapWidth","tokenize","parse","measure","resetFontStyle","lineNo","lineNum","baselineOffsetInPx","vaOffset","_iterator2","_step2","_step3","_iterator3","firstWord","lastWord","shift","pop","_step4","_iterator4","apply","lastLineText","filter","_suffix","_iterator5","_step5","spl","alignLine","_step6","_iterator6","_step7","_iterator7","canvasWidth","canvasHeight","hlColor","hlOffset","defaultColor","currentColor","_step8","_iterator8","_step9","_iterator9","letters","_step10","_iterator10","tokenizeString","tokenRegex","delimeters","final","tokens","italic","bold","colorStack","colorRegexp","test","matched","exec","o","applyFontStyle","parsed","_step11","_iterator11","_step12","_iterator12","_getBreakIndex","breakIndex","_step13","totalWidth","_iterator13","_objectSpread","_breakIndex","_this$_getBreakIndex","initialX","_step14","prevWidth","prevX","_iterator14","TextTexture","_text","_fontStyle","_fontBaselineRatio","_fontSize","_fontFace","_wordWrap","_wordWrapWidth","_wordBreak","_textOverflow","_lineHeight","_textBaseline","_textAlign","_verticalAlign","_offsetY","_maxLines","_maxLinesSuffix","_textColor","_shadow","_shadowColor","_shadowOffsetX","_shadowOffsetY","_shadowBlur","_highlight","_highlightHeight","_highlightColor","_highlightOffset","_highlightPaddingLeft","_highlightPaddingRight","_cutSx","_cutEx","_cutSy","_cutEy","_advancedRenderer","_letterSpacing","_textIndent","_rtl","_set","toString","advancedRenderer","args","cloneArgs","gl","getDrawingCanvas","texParams","sharpCfg","sharpen","getRenderPrecision","TEXTURE_MAG_FILTER","NEAREST","assign","getTextureOptionsForDrawingCanvas","proto","SourceTexture","_textureSource","Transition","_EventEmitter","property","_getter","getGetter","_setter","getSetter","_merger","merger","getMerger","_startValue","_targetValue","_p","_delayLeft","start","targetValue","isAttached","reset","delay","_updateDrawValue","finish","stop","removeActive","pause","play","addActive","getDrawValue","attached","isRunning","progress","dt","delayLeft","duration","invokeListeners","updateTargetValue","timingFunctionImpl","_timingFunctionImpl","startValue","skipDelay","isTransition","ObjectList","_refs","addAt","currentIndex","createItem","setAt","ref","onAdd","replaceByRef","existingItem","getByRef","replace","prevItem","getIndex","onMove","onSet","getAt","remove","removeAt","onRemove","clear","onSync","isItem","_getRefs","clearRef","setRef","_setByObject","_setByArray","refs","crefs","cref","idx","_equalsArray","array","same","marker","newItems","_setItems","prevItems","ElementChildList","_ObjectList","_connectParent","prevChildList","childList","_setParent","gc","createElement","isElement","Element","__id","__start","__core","__ref","__attached","__enabled","__active","__parent","__texture","__displayedTexture","__tags","__treeTags","__tagRoot","__childList","_throwError","removeTag","_addTag","_updateAttachedFlag","isRoot","_unsetTagsParent","_setTagsParent","_updateCollision","getDepth","depth","getAncestor","getAncestors","getAncestorAtDepth","levels","getSharedAncestor","o1","o2","l1","l2","_isAttached","_isEnabled","_isActive","withinBoundsMargin","newAttached","_onSetup","_onAttach","_onDetach","newEnabled","_onEnabled","_setEnabledFlag","_onDisabled","_unsetEnabledFlag","_setActiveFlag","_unsetActiveFlag","filters","_enableTexture","_onActive","_disableTexture","_hasTexturizer","_onInactive","_onResize","_getRenderWidth","_getRenderHeight","textureIsLoaded","loadTexture","_enableTextureError","prevTexture","prevSource","displayedTextureSource","sourceChanged","unknownSize","tx1","ty1","tx2","ty2","iw","ih","rw","rh","ph","tempty","tag","tags","tagSet","_loop","parentTreeTags","comp","Map","_loop2","_getByTag","getTags","setTags","removes","adds","hasTag","currentTags","addTag","list","_tag","mtag","values","res","level","resn","stag","sel","path","select","selectors","_select","pointIdx","isRef","arrowIdx","_selectChilds","subPath","_next","getLocationString","localTags","getSettings","getPrettyString","childArray","missing","pivotX","pivotY","pivot","mountX","mountY","mount","rotation","colorUl","colorUr","colorBl","colorBr","forceZIndexContext","clipbox","tnd","renderToTexture","renderToTextureLazy","colorizeResultTexture","boundsMargin","offsetX","_collision","collision","_allowChildrenAccess","hasChildren","rectangleTexture","enableTextTexture","onUpdate","onAfterCalcs","onAfterUpdate","forceUpdate","rtt","getTexture","paths","firstCharCode","message","animation","animations","createAnimation","transition","_getTransition","_setTransition","setSmooth","fastForward","_transitions","isTransitionSettings","transitions","defaultTransitionSettings","createSettings","_removeTransition","getSmooth","toJSON","tree","collectChildren","getProperties","colorKeys","JSON","stringify","k","childStr","isEmpty","propertyPath","getter","PROP_GETTERS","Function","PROP_SETTERS","isColorProperty","toLowerCase","properties","props","StateMachine","setupStateMachine","fire","event","_hasMethod","_len","_key","_getState","_state","__path","_inState","statePath","currentStatePath","state","_sm","getStateByPath","currentState","__level","_getStateAtLevel","_hasMember","member","_setState","setStateId","_setStateCounter","_setStateId","newState","_stateMap","prevState","hasDifferentEnterMethod","$enter","hasDifferentExitMethod","$exit","sharedState","_getSharedState","sharedLevel","exitStates","_getStatesUntilLevel","__setState","_callExit","enterStates","reverse","_callEnter","_changedState","_onStateChange","hasParent","_stateIndex","__index","_initStateMachine","_routedType","_getMostSpecificHandledMember","memberNames","cur","memberName","StateMachineType","getStateMemberAlias","targetConstructor","router","setPrototypeOf","stateMachineType","states","state1","state2","state1Array","_getAncestorStates","state2Array","_type","_router","_createRouter","_getStateMap","_addStateMemberDelegatorsToRouter","StateMachineRouter","_isRouter","original","_mixinStateMachineMethods","getOwnPropertyNames","descriptor","getOwnPropertyDescriptor","defineProperty","_getAllMemberNames","_addMemberRouter","statePaths","descriptors","aliases","_getDescriptor","alias","descType","_getDescriptorType","_addMethodRouter","_addGetterSetterRouters","isValid","curState","getPrototypeOf","code","supportsSpread","_supportsSpread","functionBody","_getGetterRouter","_getSetterRouter","_this8","_this9","stateMap","members","_this10","_getStateMemberNames","_this11","_getStateMemberNamesForType","_this12","_isStateLocalMember","_createStateMap","_addState","parentState","_this13","__state","__name","_addStaticStateProperty","parentPath","_states","subState","stateName","_getStateName","__supportsSpread","Component","_Element","tagRoot","_assertThisInitialized","__initialized","__firstActive","__firstEnable","__signals","__passSignals","__construct","getTemplateFunc","_build","__onStateChange","application","updateFocusPath","_refocus","__bindProperty","propObj","targetObj","targetProp","prop","propDependencies","propName","__func","__obj","__prop","_step$value","__init","_attach","_detach","_firstEnable","_firstActive","_active","_inactive","_construct","_init","_focus","newTarget","prevTarget","_unfocus","_focusChange","_getFocused","_setFocusSettings","_handleFocusSettings","hasFinalFocus","_focusPath","hasFocus","seekAncestorByType","cparent","getSharedAncestorComponent","ancestor","isComponent","signal","_signal","signalParent","_getParentSignalHandler","fireEvent","passSignal","_getSignalHandler","_signalProxy","fireAncestors","startsWith","_len2","_key2","_doFireAncestors","bindProp","__propertyBinding","hasName","parseTemplate","_template","loc","store","rid","parseTemplateRec","cursor","childCursor","propKey","parseTemplatePropRec","shaderCursor","parsePropertyBindings","collectSubComponents","subs","getComponent","CoreQuadList","quadTextures","quadElements","dataLength","getElement","getElementCore","getTextureWidth","getTextureHeight","WebGLCoreQuadList","_CoreQuadList","byteSize","data","ArrayBuffer","floats","Float32Array","uints","Uint32Array","getAttribsDataByteOffset","getQuadContents","CoreQuadOperation","shaderOwner","scissor","quads","getElementWidth","renderWidth","getElementHeight","renderHeight","WebGLCoreQuadOperation","_CoreQuadOperation","extraAttribsDataByteOffset","getNormalRenderTextureCoords","coords","getProjection","renderExec","_projection","projection","CoreRenderExecutor","destroy","_reset","_bindRenderTexture","_setScissor","_clearRenderTexture","execute","qops","quadOperations","_processQuadOperation","quadOperation","_setupQuadOperation","_execQuadOperation","op","_renderQuadOperation","renderTexture","WebGLCoreRenderExecutor","_CoreRenderExecutor","_attribsBuffer","createBuffer","maxQuads","byteLength","allIndices","Uint16Array","_quadsBuffer","bindBuffer","ELEMENT_ARRAY_BUFFER","bufferData","STATIC_DRAW","deleteBuffer","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","enable","BLEND","disable","DEPTH_TEST","_stopShaderProgram","_setupBuffers","ARRAY_BUFFER","DYNAMIC_DRAW","_useShaderProgram","beforeDraw","afterDraw","operation","hasSameProgram","_currentShaderProgram","stopProgram","useProgram","setupUniforms","bindFramebuffer","FRAMEBUFFER","framebuffer","viewport","clearColor","COLOR_BUFFER_BIT","glClearColor","getClearColor","SCISSOR_TEST","CoreRenderState","getDefaultShader","createCoreQuadList","_renderTextureInfo","_realShader","_check","_texturizerTemporary","_quadOperation","_temporaryTexturizers","_isCachingTexturizer","owner","getScissor","_cacheTexturizer","_hasChanges","_finishQuadOperation","_createQuadOperation","_isRenderTextureReusable","isRenderTextureReusable","q","createCoreQuadOperation","finishRenderState","WebGLShaderProgram","vertexShaderSource","fragmentShaderSource","_program","_uniformLocations","_attributeLocations","_currentUniformValues","compile","createProgram","glVertShader","_glCompile","VERTEX_SHADER","glFragShader","FRAGMENT_SHADER","attachShader","linkProgram","getProgramParameter","LINK_STATUS","VALIDATE_STATUS","getError","getProgramInfoLog","deleteProgram","deleteShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","getUniformLocation","location","getAttribLocation","_valueEquals","_valueClone","setUniformValue","glFunction","clonedValue","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","WebGLShader","_Shader","shaderPrograms","glProgram","initialize","_uniform","_attrib","_setUniform","beforeUsage","enableAttribs","afterUsage","disableAttribs","other","getExtraAttribBytesPerVertex","getVertexAttribPointerOffset","setExtraAttribsInBuffer","_getProjection","getFlipY","DefaultShader","_WebGLShader","vertexAttribPointer","FLOAT","enableVertexAttribArray","UNSIGNED_BYTE","disableVertexAttribArray","uniform2fv","glTexture","bindTexture","TEXTURE_2D","drawElements","TRIANGLES","UNSIGNED_SHORT","DefaultShader$1","Renderer","_defaultShader","aggressive","_createDefaultShader","shaderType","_getShaderBaseType","convertedShaderType","_getShaderAlternative","copyRenderTexture","WebGLRenderer","_Renderer","_compressedTextureExtensions","astc","getExtension","etc1","s3tc","pvrtc","getCompressedTextureExtensions","shaderProgram","createCoreRenderExecutor","createCoreRenderState","createRenderTexture","createTexture","texImage2D","RGBA","texParameteri","LINEAR","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","params","format","internalFormat","createFramebuffer","framebufferTexture2D","COLOR_ATTACHMENT0","freeRenderTexture","deleteFramebuffer","deleteTexture","_getBytesPerPixel","fmt","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","RGB","UNSIGNED_BYTE_5_6_5","compressed","premultiplyAlpha","flipBlueRed","texOptions","pixelStorei","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_FLIP_BLUE_RED","uploadCompressedGlTexture","uploadGlTexture","bytesPerPixel","mca","cx","cy","extra","copyTexSubImage2D","ow","oh","C2dCoreQuadList","renderContexts","modes","setRenderContext","setSimpleTc","setWhite","getRenderContext","getSimpleTc","getWhite","C2dCoreQuadOperation","C2dCoreRenderExecutor","_mainRenderTexture","getCanvas","_getContext","setTransform","globalCompositeOperation","beginPath","rect","closePath","fill","clearRect","_restoreContext","restore","save","_equalScissorAreas","clip","C2dShader","_C2dShader","_rectangleTexture","_tintManager","tintManager","vc","rc","white","stc","info","_setColorGradient","_beforeDrawEl","_afterDrawEl","sourceX","sourceY","sourceW","sourceH","tintTexture","getTintTexture","drawImage","gradient","transparency","createLinearGradient","addColorStop","C2dTextureTintManager","_usedMemory","_cachedNativeTextures","_addMemoryUsage","delta","addMemoryUsage","_delete","_hasCache","_getCache","prevMemUsage","memoryUsage","frame","lf","u","_tintTexture","before","reuseTexture","after","col","_tintCache","C2dTintCache","releaseBlancoTextures","_tx","_colors","_blancoTextures","_lastCleanupFrame","_memTextures","C2dRenderer","TextureTintManager","setupC2d","c2d","buffer","imageData","ImageData","Uint8ClampedArray","putImageData","SparkShader","elementPostion","paint","SparkRenderer","_WebGLRenderer","global","beginDrawing","ret","endDrawing","ImageWorker","_id","_initWorker","_worker","terminate","createWorker","blob","Blob","blobURL","URL","webkitURL","createObjectURL","Worker","postMessage","config","href","protocol","onmessage","ImageWorkerImage","image","_manager","_onError","_onLoad","ImageWorkerServer","_receiveMessage","ImageWorkerServerItem","_onFinish","_xhr","_mimeType","_canceled","isPathAbsolute","base","_relativeBase","onFinish","imageBitmap","hasAlphaChannel","_ref2","isWPEBrowser","XMLHttpRequest","open","responseType","onerror","oEvent","onload","response","_createImageBitmap","send","createImageBitmap","colorSpaceConversion","imageOrientation","_hasAlphaChannel","abort","WebPlatform","_looping","_awaitingLoop","_loopHandler","_idleLoopCounter","_idleLoopDelay","_onIdle","_imageWorker","_registerVisibilityChangeHandler","clearInterval","_removeKeyHandler","_removeClickHandler","_removeHoverHandler","_removeScrollWheelHandler","_removeVisibilityChangeHandler","startLoop","loop","stopLoop","switchLoop","onIdle","setInterval","updateFrame","idleFrame","requestAnimationFrame","lp","renderFrame","view","pvr","mipmaps","DataView","compressedTexImage2D","glInternalFormat","pixelWidth","pixelHeight","HTMLImageElement","HTMLVideoElement","ImageBitmap","HTMLCanvasElement","getImageData","handleKtxLoad","arraybuffer","getUint32","littleEndian","glType","glTypeSize","glFormat","glBaseInternalFormat","pixelDepth","numberOfArrayElements","numberOfFaces","numberOfMipmapLevels","bytesOfKeyValueData","kvps","includes","imageSize","handlePvrLoad","arrayBuffer","header","Int32Array","dataOffset","pvrtcData","Uint8Array","byteOffset","cancelCb","isPng","isKtx","isPvr","request","addEventListener","separatorPos","Image","crossOrigin","removeAttribute","createWebGLContext","opts","antialias","premultipliedAlpha","stencil","preserveDrawingBuffer","createCanvasContext","getHrTime","performance","now","nextFrame","changes","registerKeydownHandler","keyhandler","_keydownListener","registerKeyupHandler","_keyupListener","removeEventListener","registerClickHandler","clickHandler","_clickListener","registerHoverHandler","hoverHandler","_hoverListener","registerScrollWheelHandler","_scrollWheelListener","_visibilityChangeHandler","visibilityState","PlatformLoader","WebGLState","_gl","_buffers","_framebuffers","_renderbuffers","_vertexAttribs","_nonDefaultFlags","_textures","_maxTexture","_activeTexture","TEXTURE0","_pixelStorei","_getDefaultFlag","cap","DITHER","setFlag","setBuffer","change","setFramebuffer","setRenderbuffer","setProgram","program","va","equal","setActiveTexture","changed","activeIndex","_getTextureIndex","targetIndex","_getTextureTargetIndex","setPixelStorei","pname","param","_getPixelStoreiIndex","migrate","_migrateFlags","_useProgram","_migrateFramebuffers","_migrateRenderbuffers","buffersChanged","_migrateBuffers","_migrateAttributes","_migrateSettings","_migratePixelStorei","_migrateTextures","_getDefaultPixelStoreiByIndex","_getPixelStoreiByIndex","activeTexture","sTargets","tTargets","textureNumb","_getTextureByIndex","_getTextureTargetByIndex","_bindTexture","_bindBuffer","_bindFramebuffer","renderbuffer","_bindRenderbuffer","attrib","_vertexAttribPointer","_enableVertexAttribArray","_disableVertexAttribArray","defaults","getDefaultSettings","xname","tValue","setting","_defaultSettings","WebGLRenderingContext","FUNC_ADD","ZERO","BACK","LESS","CCW","ALWAYS","KEEP","_textureTargetIndices","_pixelStoreiIndices","_pixelStoreiDefaults","BROWSER_DEFAULT_WEBGL","WebGLStateManager","_initStateManager","switchState","$useProgram","$bindBuffer","fb","$bindFramebuffer","$bindRenderbuffer","$enable","$disable","$viewport","$scissor","$disableVertexAttribArray","$enableVertexAttribArray","$vertexAttribPointer","normalized","stride","$activeTexture","$bindTexture","$pixelStorei","$stencilFuncSeparate","face","mask","FRONT","_stencilFuncSeparateFront","_stencilFuncSeparateBack","FRONT_AND_BACK","_stencilFuncSeparateFrontAndBack","_stencilFuncSeparate","$stencilMaskSeparate","_stencilMaskSeparateFront","_stencilMaskSeparateBack","_stencilMaskSeparateFrontAndBack","_stencilMaskSeparate","$stencilOpSeparate","fail","zfail","zpass","_stencilOpSeparateFront","_stencilOpSeparateBack","_stencilOpSeparateFrontAndBack","_stencilOpSeparate","$blendColor","red","green","blue","_blendColor","$blendEquation","_blendEquation","$blendEquationSeparate","modeRGB","modeAlpha","_blendEquationSeparate","$blendFunc","sfactor","dfactor","_blendFunc","$blendFuncSeparate","srcRGB","dstRGB","srcAlpha","dstAlpha","_blendFuncSeparate","$clearColor","_clearColor","$clearDepth","_clearDepth","$clearStencil","_clearStencil","$colorMask","_colorMask","$cullFace","_cullFace","$depthFunc","_depthFunc","$depthMask","flag","_depthMask","$depthRange","zNear","zFar","_depthRange","$frontFace","_frontFace","$lineWidth","_lineWidth","$polygonOffset","factor","units","_polygonOffset","$sampleCoverage","invert","_sampleCoverage","$stencilFunc","_stencilFunc","$stencilMask","_stencilMask","$stencilOp","_stencilOp","$vertexAttrib1f","indx","_vertexAttrib1f","$vertexAttrib1fv","_vertexAttrib1fv","$vertexAttrib2f","_vertexAttrib2f","$vertexAttrib2fv","_vertexAttrib2fv","$vertexAttrib3f","z","_vertexAttrib3f","$vertexAttrib3fv","_vertexAttrib3fv","$vertexAttrib4f","_vertexAttrib4f","$vertexAttrib4fv","_vertexAttrib4fv","__proto__","method","WebGLStateManager$1","TextureManager","_uploadedTextureSources","textureSourceHashmap","_nativeFreeTextureSource","_nativeUploadTextureSource","addToLookupMap","_updateVramUsage","sign","usage","Stage","isWebglSupported","addVramUsage","freeUnusedTextureSources","remainingTextureSources","ts","_freeManagedTextureSource","_cleanupLookupMap","managed","TextureThrottler","_remove","_sources","_data","processSome","_processItem","MAX_UPLOAD_TIME_PER_FRAME","CoreContext","_renderTexturePool","_renderTextureId","_zSorts","_freeRenderTexture","_render","_update","_performForcedZSorts","zSort","debugFrame","_fillRenderState","_readPixels","_performRender","log","pixels","readPixels","prec","_createRenderTexture","freeUnusedRenderTextures","maxAge","limit","TransitionSettings","_timingFunction","TransitionManager","transitionSettings","MultiSpline","_clear","_pe","_idp","_f","_v","_lv","_s","_ve","_sme","_se","_length","def","defaultSmoothness","lv","last","pe","idp","sm","pi","ni","nc","pc","ve","sme","se","getSplineRgbaValueFunction","getSplineValueFunction","_add","_getItem","getValue","p1","p2","i2","s1","s2","dp","helpers","getSplineHelpers","calculateSpline","cv1","cv2","csy","cex","cey","csx","yd","AnimationActionSettings","animationSettings","_selector","_props","_propSetters","_resetValue","_hasResetValue","_hasColorProperty","getResetValue","getAnimatedElements","sv","hasColorProperty","selector","resetValue","isAnimationActionSettings","AnimationSettings","_actions","repeat","repeatOffset","repeatDelay","autostop","stopMethod","STOP_METHODS","FADE","_stopTimingFunction","_stopTimingFunctionImpl","stopDuration","stopDelay","aas","action","REVERSE","FORWARD","IMMEDIATE","ONETOTWO","Animation","STATES","IDLE","_repeatsLeft","_stopDelayLeft","_stopP","PLAYING","checkActive","PAUSED","STOPPING","FINISHED","replay","STOPPED","stopNow","isPaused","isPlaying","isStopping","isFinished","isActive","_progress","_stopProgress","_getStopDuration","_progressStopTransition","stopTimingFunctionImpl","AnimationManager","RectangleTexture","_setOptions","_lastGcFrame","_usedVramAlpha","_usedVramNonAlpha","platformType","_mode","ratio","style","_options","_renderer","setClearColor","startTime","currentTime","_updateSourceTextures","isWebgl","isC2d","opt","setApplication","app","resume","_updatingFrame","_calculateDt","fixedDt","drawFrame","memoryUsageBefore","gcTextureMemory","gcRenderTextureMemory","usedMemory","addServiceProvider","serviceprovider","getChildrenByPosition","Application","_Component","_temp_options","booting","__updateFocusCounter","__keypressTimers","__hoveredChild","updateFocusSettings","__keymap","_receiveKeydown","_receiveKeyup","_receiveClick","_receiveHover","_recieveScrollWheel","__options","__updateFocus","notOverridden","__updateFocusRec","updateFocusId","__updateFocusId","newFocusPath","__getFocusPath","newFocusedComponent","prevFocusedComponent","focusedComponent","focusSettings","defaultSetFocusSettings","defaultHandleFocusSettings","__prevFocusSettings","prevSettings","focused","prevFocused","nextFocus","newParts","focusTopDownEvent","events","focusPath","_path$i","focusBottomUpEvent","_path$i2","keyCode","hasTimer","longpress","consumer","_startLongpressTimer","clearTimeout","lookup","timeout","setTimeout","clientX","clientY","fireTopDownScrollWheelHandler","fireBottomUpScrollWheelHandler","affected","_findChildren","_captureScroll","_getTargetChild","_handleScroll","fireBottomUpClickHandler","_child$core$_worldCon","localCoords","_handleClick","fireBottomUpHoverHandler","hoveredBranch","newHoveredBranch","elem","_handleUnhover","diffBranch","_handleHover","lastElement","hoverableChildren","_withinClickableRange","bucket","affectedChildren","cursorX","cursorY","candidates","cw","finalW","ch","finalH","_testCollision","_destroyed","_destroy","timer","StaticCanvasTexture","_factory","_lookupId","factory","_ref$lookupId","Tools","getCanvasTexture","canvasFactory","content","getRoundRect","radius","strokeWidth","strokeColor","fillColor","createRoundRect","imageSmoothingEnabled","moveTo","lineTo","arcTo","strokeStyle","stroke","getShadowRect","blur","margin","createShadowRect","getSvgTexture","url","createSvg","img","ObjMerger","isMf","__mf","mf","aks","bks","ai","bi","aksl","aIndex","curIndex","akey","bv","av","ObjectListProxy","ObjectListWrapper","_ObjectListProxy","_wrapper","NoiseTexture","noise","random","REPEAT","HtmlTexture","_htmlElement","_scale","innerHTML","htmlElement","firstElementChild","html2canvas","getPreloadArea","appendChild","backgroundColor","removeChild","_preloadArea","attachShadow","opacity","pointerEvents","display","top","overflow","body","StaticTexture","ListComponent","_thisSuper","_reloadVisibleElements","_visibleItems","_index","_started","_scrollTransitionSettings","_itemSize","_viewportScrollOffset","_itemScrollOffset","_roll","_rollMin","_rollMax","_progressAnimation","_invertDirection","itemList","ListItems","_scrollTransition","setIndex","immediate","closest","nElements","realIndex","diff","viewportSize","scrollDelta","getAxisPosition","ps","wasVisible","invisibleItem","getWrapper","setPrevious","setNext","_ObjectListWrapper","_super2","checkStarted","ri","LinearBlurShader","_DefaultShader","_direction","_kernelRadius","uniform1i","BoxBlurShader","BlurShader","_amount","FastBlurComponent","_paddingX","_paddingY","_updateBlurSize","Wrap","WebGLFastBlurComponent","C2dFastBlurComponent","_Component2","_textwrap","paddingX","paddingY","kernelRadius","_amountToKernelRadius","Textwrap","C2dBlurShader","Content","getSpline","_multiSpline","_Component3","_super3","_layers","_output","_buildLayers","filterShaders","_setLayerTexture","getLayerContents","getLayer","steps","step","fw","fh","otherTextureSource","Layers","L0","L1","L2","L3","Result","FastBlurOutputShader","_super4","_a","_otherTextureSource","uniform1f","TEXTURE1","BloomComponent","BloomBase","BloomBaseShader","SmoothScaleComponent","_smoothScale","_iterations","its","_setIterations","scalers","first","useScalers","ContentWrap","Scale","contentWrap","BorderComponent","_borderTop","_borderRight","_borderBottom","_borderLeft","borderWidth","borderWidthTop","borderWidthRight","borderWidthBottom","borderWidthLeft","colorBorderTop","colorBorderRight","colorBorderBottom","colorBorderLeft","borderTop","borderRight","borderBottom","borderLeft","Borders","Top","Right","Bottom","Left","WebGLGrayscaleShader","_WebGLDefaultShader","C2dGrayscaleShader","WebGLDefaultShader","_C2dDefaultShader","C2dDefaultShader","DitheringShader","_noiseTexture","_graining","_random","CircularPushShader","_inputValue","_maxDerivative","_normalizedValue","_offset","_aspectRatio","_offsetX","buckets","_buckets","_values","_getValues","full","_shiftBuckets","_valuesTexture","ALPHA","InversionShader","OutlineShader","_width","_col","_color","uniform4fv","ddw","dw","ddh","dh","PixelateShader","_size","getWebGLImpl","WebGLPixelateShaderImpl","RadialFilterShader","_radius","_cutoff","RoundedRectangleShader","_blend","_stroke","_fc","_fillColor","_getNormalizedColor","_strokeColor","num","_sc","renderPrecision","renderContext","FadeOutShader","_fade","fade","VignetteShader","_magnitude","_intensity","_pivot","SpinnerShader","_period","_angle","_smooth","_backgroundColor","_time","HoleShader","RadialGradientShader","_ic","_normalizedIC","_oc","_normalizedOC","_radiusY","innerColor","Light3dShader","_strength","_ambient","_fudge","_rx","_ry","_z","NaN","_pivotZ","_lightY","_lightZ","vr","rz","atan2","uniform3fv","lightY","lightZ","PerspectiveShader","MagnifierShader","_magnification","SpinnerShader2","_showDot","_clockwise","_bc","_normalizedBC","_c","_normalizedC","bool","spinSync","lightning","shaders","Grayscale","BoxBlur","Dithering","CircularPush","Inversion","LinearBlur","Outline","Pixelate","RadialFilter","RoundedRectangle","Spinner2","FadeOut","Hole","Vignette","Spinner","RadialGradient","Light3d","Perspective","Magnifier","Blur","components","tools","lng"],"mappings":"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"}